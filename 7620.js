"use strict";(self.webpackChunkreveal_js_testing=self.webpackChunkreveal_js_testing||[]).push([[7620],{34780:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (/* binding */ u)\n/* harmony export */ });\n/* harmony import */ var _chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(36663);\n/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(39994);\n/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(70375);\n/* harmony import */ var _core_JSONSupport_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(82064);\n/* harmony import */ var _core_lang_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(67134);\n/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(13802);\n/* harmony import */ var _core_maybe_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(61681);\n/* harmony import */ var _core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(81977);\n/* harmony import */ var _core_accessorSupport_decorators_cast_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(69236);\n/* harmony import */ var _core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(40266);\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nvar n;const p=_core_Logger_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].getLogger */ .Z.getLogger("esri.layers.support.PixelBlock");let c=n=class extends _core_JSONSupport_js__WEBPACK_IMPORTED_MODULE_2__/* .JSONSupport */ .wq{constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.pixels=null,this.statistics=null}static createEmptyBand(t,e){return new(n.getPixelArrayConstructor(t))(e)}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].indexOf(e)>-1?e="u8":-1===["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].indexOf(e)&&(e="f32"),e}getPlaneCount(){return this.pixels&&this.pixels.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics||{minValue:null,maxValue:null})}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){this.statistics=this.pixels.map((t=>this._calculateBandStatistics(t,this.mask)));const t=this.mask;let e=0;if(t)for(let s=0;s<t.length;s++)t[s]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||"f64"===t||"f32"===t)return;let e;switch(t){case"u8":e=[0,255];break;case"u16":e=[0,65535];break;case"u32":e=[0,4294967295];break;case"s8":e=[-128,127];break;case"s16":e=[-32768,32767];break;case"s32":e=[-2147483648,2147483647];break;default:e=[-34e38,34e38]}const[s,i]=e,r=this.pixels,l=this.width*this.height,a=r.length;let o,h,p;const c=[];for(let u=0;u<a;u++){p=n.createEmptyBand(t,l),o=r[u];for(let t=0;t<l;t++)h=o[t],p[t]=h>i?i:h<s?s:h;c.push(p)}this.pixels=c,this.pixelType=t}extractBands(t){if((0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_8__/* .isNone */ .Wi)(t)||0===t.length||null==this.pixels||0===this.pixels.length)return this;const e=this.pixels.length,s=t.some((t=>t>=this.pixels.length)),i=e===t.length&&!t.some(((t,e)=>t!==e));return s||i?this:new n({pixelType:this.pixelType,width:this.width,height:this.height,mask:this.mask,validPixelCount:this.validPixelCount,maskIsAlpha:this.maskIsAlpha,pixels:t.map((t=>this.pixels[t])),statistics:this.statistics&&t.map((t=>this.statistics[t]))})}clone(){const t=new n({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;this.mask&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0));const s=n.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const i=this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=i?this.pixels[e].slice(0,this.pixels[e].length):new s(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=(0,_core_lang_js__WEBPACK_IMPORTED_MODULE_3__/* .clone */ .d9)(this.statistics[e]);return t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:s,pixels:i}=this;if(!t||!i||!i.length)return void p.error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let r,l,a,o;r=l=a=i[0],i.length>=3?(l=i[1],a=i[2]):2===i.length&&(l=i[1]);const h=new Uint32Array(t),n=this.width*this.height;if(r.length===n)if(e&&e.length===n)if(s)for(o=0;o<n;o++)e[o]&&(h[o]=e[o]<<24|a[o]<<16|l[o]<<8|r[o]);else for(o=0;o<n;o++)e[o]&&(h[o]=255<<24|a[o]<<16|l[o]<<8|r[o]);else for(o=0;o<n;o++)h[o]=255<<24|a[o]<<16|l[o]<<8|r[o];else p.error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:s,statistics:i}=this;if(!t||!e||!e.length)return void p.error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const r=this.pixelType;let l=1,a=0,o=1;if(i&&i.length>0)a=i.map((t=>t.minValue)).reduce(((t,e)=>Math.min(t,e))),o=i.map((t=>t.maxValue-t.minValue)).reduce(((t,e)=>Math.max(t,e))),l=255/o;else{let t=255;"s8"===r?(a=-128,t=127):"u16"===r?t=65535:"s16"===r?(a=-32768,t=32767):"u32"===r?t=4294967295:"s32"===r?(a=-2147483648,t=2147483647):"f32"===r?(a=-34e38,t=34e38):"f64"===r&&(a=-Number.MAX_VALUE,t=Number.MAX_VALUE),l=255/(t-a)}const h=new Uint32Array(t),n=this.width*this.height;let c,u,m,x,f;if(c=u=m=e[0],c.length!==n)return p.error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(u=e[1],e.length>=3&&(m=e[2]),s&&s.length===n)for(x=0;x<n;x++)s[x]&&(h[x]=255<<24|(m[x]-a)*l<<16|(u[x]-a)*l<<8|(c[x]-a)*l);else for(x=0;x<n;x++)h[x]=255<<24|(m[x]-a)*l<<16|(u[x]-a)*l<<8|(c[x]-a)*l;else if(s&&s.length===n)for(x=0;x<n;x++)f=(c[x]-a)*l,s[x]&&(h[x]=255<<24|f<<16|f<<8|f);else for(x=0;x<n;x++)f=(c[x]-a)*l,h[x]=255<<24|f<<16|f<<8|f}_fillFrom32Bit(t){const{pixels:e,mask:s}=this;if(!t||!e||!e.length)return p.error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let i,r,l,a;i=r=l=e[0],e.length>=3?(r=e[1],l=e[2]):2===e.length&&(r=e[1]);const o=this.width*this.height;if(i.length!==o)return p.error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let h=0;if(s&&s.length===o)for(a=0;a<o;a++)t[h++]=i[a],t[h++]=r[a],t[h++]=l[a],t[h++]=1&s[a];else for(a=0;a<o;a++)t[h++]=i[a],t[h++]=r[a],t[h++]=l[a],t[h++]=1}_calculateBandStatistics(t,e){let s=1/0,i=-1/0;const r=t.length;let l,a=0;if(e)for(l=0;l<r;l++)e[l]&&(a=t[l],s=a<s?a:s,i=a>i?a:i);else for(l=0;l<r;l++)a=t[l],s=a<s?a:s,i=a>i?a:i;return{minValue:s,maxValue:i}}};(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_9__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_5__/* .property */ .Cb)({json:{write:!0}})],c.prototype,"width",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_9__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_5__/* .property */ .Cb)({json:{write:!0}})],c.prototype,"height",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_9__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_5__/* .property */ .Cb)({json:{write:!0}})],c.prototype,"pixelType",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_9__._)([(0,_core_accessorSupport_decorators_cast_js__WEBPACK_IMPORTED_MODULE_6__/* .cast */ .p)("pixelType")],c.prototype,"castPixelType",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_9__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_5__/* .property */ .Cb)({json:{write:!0}})],c.prototype,"validPixelCount",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_9__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_5__/* .property */ .Cb)({json:{write:!0}})],c.prototype,"mask",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_9__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_5__/* .property */ .Cb)({json:{write:!0}})],c.prototype,"maskIsAlpha",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_9__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_5__/* .property */ .Cb)({json:{write:!0}})],c.prototype,"pixels",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_9__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_5__/* .property */ .Cb)({json:{write:!0}})],c.prototype,"statistics",void 0),c=n=(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_9__._)([(0,_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_7__/* .subclass */ .j)("esri.layers.support.PixelBlock")],c);const u=c;\n\n\n//# sourceURL=webpack://reveal-js-testing/./node_modules/@arcgis/core/layers/support/PixelBlock.js?')},56208:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "U": () => (/* binding */ w),\n  "J": () => (/* binding */ G)\n});\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/2d/engine/flow/BrushFlow.js\nvar BrushFlow = __webpack_require__(87808);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/2d/engine/imagery/RasterBitmap.js\nvar RasterBitmap = __webpack_require__(16745);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/VertexStream.js\nvar VertexStream = __webpack_require__(86424);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js\nvar WGLBrush = __webpack_require__(29316);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/webgl/enums.js\nvar enums = __webpack_require__(91907);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/webgl/rasterUtils.js\nvar rasterUtils = __webpack_require__(10054);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/views/2d/engine/imagery/BrushRasterBitmap.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nclass u extends WGLBrush/* default */.Z{constructor(){super(...arguments),this._desc={lut:{vsPath:"raster/lut",fsPath:"raster/lut",attributes:new Map([["a_position",0],["a_texcoord",1]])},stretch:{vsPath:"raster/stretch",fsPath:"raster/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])},hillshade:{vsPath:"raster/hillshade",fsPath:"raster/hillshade",attributes:new Map([["a_position",0],["a_texcoord",1]])}},this._rendererUniformInfos=new Map}dispose(){this._quad&&this._quad.dispose()}prepareState({context:e},t){e.setBlendingEnabled(!0),e.setBlendFunctionSeparate(enums/* BlendFactor.ONE */.zi.ONE,enums/* BlendFactor.ONE_MINUS_SRC_ALPHA */.zi.ONE_MINUS_SRC_ALPHA,enums/* BlendFactor.ONE */.zi.ONE,enums/* BlendFactor.ONE_MINUS_SRC_ALPHA */.zi.ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilFunction(enums/* CompareFunction.EQUAL */.wb.EQUAL,t.stencilRef,255)}draw(t,r){var s;if(!(0,RasterBitmap/* hasSource */.qE)(r)||r.suspended)return;t.timeline.begin(this.name);const a=!(null!=(s=t.context.capabilities.textureFloat)&&s.textureFloatLinear);r.updateTexture(t);const i=this._getShaderVariations(r,a),o=t.painter.materialManager.getProgram(t,this._desc[r.symbolizerParameters.type],i);this._drawWithProgram(t.context,o,r),t.timeline.end(this.name)}_drawWithProgram(e,r,s,a=1,p=[0,0],u=!1){this._quad||(this._quad=new VertexStream/* default */.Z(e,[0,0,1,0,0,1,1,1]));const{symbolizerParameters:m,transformGrid:f,width:_,height:g,opacity:b}=s,P=m.type;e.useProgram(r);const S=this._getShaderVariations(s),w=this._getUniformInfos(P,e,r,S),{names:x,textures:y}=s.getTextures();(0,rasterUtils/* setTextures */.RA)(e,r,x,y);const M=(0,rasterUtils/* getBasicGridUniforms */.zS)(a,p),U=(0,rasterUtils/* getCommonUniforms */.Tc)(f,[_,g],[s.source.width,s.source.height],b,u);if((0,rasterUtils/* setUniforms */.N9)(r,w,{u_coordScale:s.coordScale,u_dvsMat3:s.transforms.dvs,...M,...U}),m.colormap){const{colormap:e,colormapOffset:t}=m,s=(0,rasterUtils/* getColormapUniforms */.Ue)(e,t);(0,rasterUtils/* setUniforms */.N9)(r,w,s)}if("stretch"===m.type){const e=(0,rasterUtils/* getStretchUniforms */.xW)(m);(0,rasterUtils/* setUniforms */.N9)(r,w,e)}else if("hillshade"===m.type){const e=(0,rasterUtils/* getShadedReliefUniforms */.Fm)(m);(0,rasterUtils/* setUniforms */.N9)(r,w,e)}this._quad.draw()}_getUniformInfos(e,t,r,s){const a=s.length>0?e+"-"+s.join("-"):e;if(this._rendererUniformInfos.has(a))return this._rendererUniformInfos.get(a);const i=(0,rasterUtils/* getUniformLocationInfos */.v)(t,r);return this._rendererUniformInfos.set(a,i),i}_getShaderVariations(e,t=!1){const r=[],{interpolation:s}=e,{type:a,colormap:i}=e.symbolizerParameters;return"cubic"===s?r.push("bicubic"):"bilinear"===s&&"stretch"===a&&null!=i?(r.push("bilinear"),r.push("nnedge")):t&&"bilinear"===s&&r.push("bilinear"),e.isRendereredSource?r.push("noop"):i&&r.push("applyColormap"),e.transformGrid&&(r.push("applyProjection"),1===e.transformGrid.spacing[0]&&r.push("lookupProjection")),r}}\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/2d/engine/imagery/BrushVectorField.js\nvar BrushVectorField = __webpack_require__(79195);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/definitions.js\nvar definitions = __webpack_require__(14266);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushBitmap.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nconst r={nearest:{defines:[],samplingMode:enums/* TextureSamplingMode.NEAREST */.cw.NEAREST,mips:!1},bilinear:{defines:[],samplingMode:enums/* TextureSamplingMode.LINEAR */.cw.LINEAR,mips:!1},bicubic:{defines:["bicubic"],samplingMode:enums/* TextureSamplingMode.LINEAR */.cw.LINEAR,mips:!1},trilinear:{defines:[],samplingMode:enums/* TextureSamplingMode.LINEAR_MIPMAP_LINEAR */.cw.LINEAR_MIPMAP_LINEAR,mips:!0}},o=(e,t,i)=>{if("dynamic"===i.samplingMode){const{state:i}=e,s=t.resolution/t.pixelRatio/i.resolution,n=Math.round(e.pixelRatio)!==e.pixelRatio,a=s>1.05||s<.95;return i.rotation||a||n||t.isSourceScaled||t.rotation?r.bilinear:r.nearest}return r[i.samplingMode]};class d extends WGLBrush/* default */.Z{constructor(){super(...arguments),this._desc={vsPath:"raster/bitmap",fsPath:"raster/bitmap",attributes:new Map([["a_position",0],["a_texcoord",1]])}}dispose(){this._quad&&this._quad.dispose()}prepareState({context:e},t){e.setBlendingEnabled(!0),"additive"===t.blendFunction?e.setBlendFunctionSeparate(enums/* BlendFactor.ONE */.zi.ONE,enums/* BlendFactor.ONE */.zi.ONE,enums/* BlendFactor.ONE */.zi.ONE,enums/* BlendFactor.ONE */.zi.ONE):e.setBlendFunctionSeparate(enums/* BlendFactor.ONE */.zi.ONE,enums/* BlendFactor.ONE_MINUS_SRC_ALPHA */.zi.ONE_MINUS_SRC_ALPHA,enums/* BlendFactor.ONE */.zi.ONE,enums/* BlendFactor.ONE_MINUS_SRC_ALPHA */.zi.ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilFunction(enums/* CompareFunction.EQUAL */.wb.EQUAL,t.stencilRef,255)}draw(i,s){const{context:n,renderingOptions:a,painter:r}=i;if(!s.source)return;i.timeline.begin(this.name),this._quad||(this._quad=new VertexStream/* default */.Z(n,[0,0,1,0,0,1,1,1]));const d=o(i,s,a),m=r.materialManager.getProgram(i,this._desc,d.defines),{coordScale:c,computedOpacity:l,transforms:p}=s;s.setSamplingProfile(d),s.bind(i.context,definitions/* TEXTURE_BINDING_BITMAP */.Ic),n.useProgram(m),m.setUniformMatrix3fv("u_dvsMat3",p.dvs),m.setUniform1i("u_texture",definitions/* TEXTURE_BINDING_BITMAP */.Ic),m.setUniform2fv("u_coordScale",c),m.setUniform1f("u_opacity",l),this._quad.draw(),i.timeline.end(this.name)}}\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/maybe.js\nvar maybe = __webpack_require__(61681);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/chunks/vec4f32.js\nvar vec4f32 = __webpack_require__(18916);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/Utils.js + 1 modules\nvar Utils = __webpack_require__(15875);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/BackgroundPrograms.js\nvar BackgroundPrograms = __webpack_require__(96227);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/webgl/ProgramTemplate.js\nvar ProgramTemplate = __webpack_require__(84172);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushClip.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nconst c=()=>(0,Utils/* createProgramDescriptor */.cM)("clip",{geometry:[{location:0,name:"a_pos",count:2,type:enums/* DataType.SHORT */.g.SHORT}]});class l extends WGLBrush/* default */.Z{constructor(){super(...arguments),this._color=(0,vec4f32.f)(0,1,0,1)}dispose(){this._program&&this._program.dispose()}prepareState({context:r}){r.setStencilTestEnabled(!0),r.setBlendingEnabled(!1),r.setFaceCullingEnabled(!1),r.setColorMask(!1,!1,!1,!1),r.setStencilOp(enums/* StencilOperation.KEEP */.xS.KEEP,enums/* StencilOperation.KEEP */.xS.KEEP,enums/* StencilOperation.REPLACE */.xS.REPLACE),r.setStencilWriteMask(255),r.setStencilFunction(enums/* CompareFunction.ALWAYS */.wb.ALWAYS,0,255)}draw(t,e){const{context:s,state:i}=t,a=c(),l=e.getVAO(s,i,a.attributes,a.bufferLayouts);(0,maybe/* isNone */.Wi)(l.indexBuffer)||(this._program||(this._program=(0,ProgramTemplate/* createProgram */.H)(s,BackgroundPrograms/* background */.O)),s.useProgram(this._program),this._program.setUniform2fv("u_coord_range",[1,1]),this._program.setUniform4fv("u_color",this._color),this._program.setUniformMatrix3fv("u_dvsMat3",i.displayMat3),s.bindVAO(l),s.drawElements(enums/* PrimitiveType.TRIANGLES */.MX.TRIANGLES,l.indexBuffer.size,enums/* DataType.UNSIGNED_INT */.g.UNSIGNED_INT,0),s.bindVAO())}}\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushInfo.js + 1 modules\nvar WGLBrushInfo = __webpack_require__(38448);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushStencil.js\nvar WGLBrushStencil = __webpack_require__(22598);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/mathUtils.js\nvar mathUtils = __webpack_require__(19431);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/chunks/mat3f32.js\nvar mat3f32 = __webpack_require__(19710);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js\nvar webgl_enums = __webpack_require__(38716);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/number.js\nvar number = __webpack_require__(8530);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/webgl/BufferObject.js\nvar BufferObject = __webpack_require__(78951);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/webgl/VertexArrayObject.js\nvar VertexArrayObject = __webpack_require__(29620);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLBackground.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nclass WGLBrushVTLBackground_d extends WGLBrush/* default */.Z{constructor(){super(...arguments),this._color=(0,vec4f32.f)(1,0,0,1),this._patternMatrix=(0,mat3f32.c)(),this._programOptions={id:!1,pattern:!1}}dispose(){this._vao&&(this._vao.dispose(),this._vao=null)}drawMany(o,e){const{context:c,painter:m,styleLayerUID:p}=o;this._loadWGLResources(o);const _=o.displayLevel,d=o.styleLayer,h=d.backgroundMaterial,g=m.vectorTilesMaterialManager,v=d.getPaintValue("background-color",_),b=d.getPaintValue("background-opacity",_),y=d.getPaintValue("background-pattern",_),M=void 0!==y,x=v[3]*b,j=1|window.devicePixelRatio,U=o.spriteMosaic;let L,w;const A=j>definitions/* VTL_HIGH_RES_CUTOFF */.a?2:1,P=o.drawPhase===webgl_enums/* WGLDrawPhase.HITTEST */.jx.HITTEST,I=this._programOptions;I.id=P,I.pattern=M;const k=g.getMaterialProgram(c,h,I);if(c.bindVAO(this._vao),c.useProgram(k),M){const t=U.getMosaicItemPosition(y,!0);if((0,maybe/* isSome */.pC)(t)){const{tl:o,br:e,page:s}=t;L=e[0]-o[0],w=e[1]-o[1];const a=U.getPageSize(s);(0,maybe/* isSome */.pC)(a)&&(U.bind(c,enums/* TextureSamplingMode.LINEAR */.cw.LINEAR,s,definitions/* VTL_TEXTURE_BINDING_UNIT_SPRITES */.V4),k.setUniform4f("u_tlbr",o[0],o[1],e[0],e[1]),k.setUniform2fv("u_mosaicSize",a),k.setUniform1i("u_texture",definitions/* VTL_TEXTURE_BINDING_UNIT_SPRITES */.V4))}k.setUniform1f("u_opacity",b)}else this._color[0]=x*v[0],this._color[1]=x*v[1],this._color[2]=x*v[2],this._color[3]=x,k.setUniform4fv("u_color",this._color);if(k.setUniform1f("u_depth",d.z||0),P){const t=(0,number/* u32to4Xu8 */.Au)(p+1);k.setUniform4fv("u_id",t)}for(const r of e){if(k.setUniform1f("u_coord_range",r.rangeX),k.setUniformMatrix3fv("u_dvsMat3",r.transforms.dvs),M){const o=Math.max(2**(Math.round(_)-r.key.level),1),e=A*r.width*o,i=e/(0,mathUtils/* nextPowerOfTwo */.fp)(L),s=e/(0,mathUtils/* nextPowerOfTwo */.fp)(w);this._patternMatrix[0]=i,this._patternMatrix[4]=s,k.setUniformMatrix3fv("u_pattern_matrix",this._patternMatrix)}c.setStencilFunction(enums/* CompareFunction.EQUAL */.wb.EQUAL,r.stencilRef,255),c.drawArrays(enums/* PrimitiveType.TRIANGLE_STRIP */.MX.TRIANGLE_STRIP,0,4)}}_loadWGLResources(t){if(this._vao)return;const{context:r,styleLayer:o}=t,e=o.backgroundMaterial,i=new Int8Array([0,0,1,0,0,1,1,1]),s=BufferObject/* BufferObject.createVertex */.f.createVertex(r,enums/* Usage.STATIC_DRAW */.l1.STATIC_DRAW,i),a=new VertexArrayObject/* VertexArrayObject */.U(r,e.getAttributeLocations(),e.getLayoutInfo(),{geometry:s});this._vao=a}}\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/2d/engine/vectorTiles/style/StyleDefinition.js\nvar StyleDefinition = __webpack_require__(61296);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLCircle.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nclass WGLBrushVTLCircle_l extends WGLBrush/* default */.Z{constructor(){super(...arguments),this._programOptions={id:!1}}dispose(){}drawMany(n,l){const{context:c,displayLevel:m,requiredLevel:u,state:f,drawPhase:d,painter:p,spriteMosaic:y,styleLayerUID:v}=n;if(!l.some((e=>{var t,r;return null!=(t=null==(r=e.layerData.get(v))?void 0:r.circleIndexCount)&&t})))return;const g=n.styleLayer,E=g.circleMaterial,M=p.vectorTilesMaterialManager,T=1.2,x=g.getPaintValue("circle-translate",m),I=g.getPaintValue("circle-translate-anchor",m),U=d===webgl_enums/* WGLDrawPhase.HITTEST */.jx.HITTEST,_=this._programOptions;_.id=U;const h=M.getMaterialProgram(c,E,_);c.useProgram(h),h.setUniformMatrix3fv("u_displayMat3",I===StyleDefinition/* TranslateAnchor.VIEWPORT */.fD.VIEWPORT?f.displayMat3:f.displayViewMat3),h.setUniform2fv("u_circleTranslation",x),h.setUniform1f("u_depth",g.z),h.setUniform1f("u_antialiasingWidth",T);let L=-1;if(U){const e=(0,number/* u32to4Xu8 */.Au)(v+1);h.setUniform4fv("u_id",e)}for(const t of l){if(!t.layerData.has(v))continue;t.key.level!==L&&(L=t.key.level,E.setDataUniforms(h,m,g,L,y));const r=t.layerData.get(v);if(!r.circleIndexCount)continue;r.prepareForRendering(c);const i=r.circleVertexArrayObject;(0,maybe/* isNone */.Wi)(i)||(c.bindVAO(i),h.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs),u!==t.key.level?c.setStencilFunction(enums/* CompareFunction.EQUAL */.wb.EQUAL,t.stencilRef,255):c.setStencilFunction(enums/* CompareFunction.GREATER */.wb.GREATER,255,255),c.drawElements(enums/* PrimitiveType.TRIANGLES */.MX.TRIANGLES,r.circleIndexCount,enums/* DataType.UNSIGNED_INT */.g.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*r.circleIndexStart),t.triangleCount+=r.circleIndexCount/3)}}}\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLFill.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nconst WGLBrushVTLFill_d=1/65536;class m extends WGLBrush/* default */.Z{constructor(){super(...arguments),this._fillProgramOptions={id:!1,pattern:!1},this._outlineProgramOptions={id:!1}}dispose(){}drawMany(t,e){const{displayLevel:i,drawPhase:a,renderPass:n,spriteMosaic:l,styleLayerUID:s}=t;let f=!1;for(const r of e)if(r.layerData.has(s)){const t=r.layerData.get(s);if(t.fillIndexCount>0||t.outlineIndexCount>0){f=!0;break}}if(!f)return;const u=t.styleLayer,c=u.getPaintProperty("fill-pattern"),d=void 0!==c,m=d&&c.isDataDriven;let p;if(d&&!m){const t=c.getValue(i);p=l.getMosaicItemPosition(t,!0)}const y=!d&&u.getPaintValue("fill-antialias",i);let g=!0,_=1;if(!d){const t=u.getPaintProperty("fill-color"),e=u.getPaintProperty("fill-opacity");if(!(null!=t&&t.isDataDriven||null!=e&&e.isDataDriven)){const t=u.getPaintValue("fill-color",i);_=u.getPaintValue("fill-opacity",i)*t[3],_>=1&&(g=!1)}}if(g&&"opaque"===n)return;let E;a===webgl_enums/* WGLDrawPhase.HITTEST */.jx.HITTEST&&(E=(0,number/* u32to4Xu8 */.Au)(s+1));const M=u.getPaintValue("fill-translate",i),P=u.getPaintValue("fill-translate-anchor",i);(g||"translucent"!==n)&&this._drawFill(t,s,u,e,M,P,d,p,m,E);const v=!u.hasDataDrivenOutlineColor&&u.outlineUsesFillColor&&_<1;y&&"opaque"!==n&&!v&&this._drawOutline(t,s,u,e,M,P,E)}_drawFill(o,l,m,p,y,g,_,E,M,P){if(_&&!M&&(0,maybe/* isNone */.Wi)(E))return;const{context:v,displayLevel:I,state:T,drawPhase:U,painter:x,pixelRatio:h,spriteMosaic:D}=o,S=m.fillMaterial,N=x.vectorTilesMaterialManager,w=h>definitions/* VTL_HIGH_RES_CUTOFF */.a?2:1,L=U===webgl_enums/* WGLDrawPhase.HITTEST */.jx.HITTEST,R=this._fillProgramOptions;R.id=L,R.pattern=_;const A=N.getMaterialProgram(v,S,R);if(v.useProgram(A),(0,maybe/* isSome */.pC)(E)){const{page:t}=E,i=D.getPageSize(t);(0,maybe/* isSome */.pC)(i)&&(D.bind(v,enums/* TextureSamplingMode.LINEAR */.cw.LINEAR,t,definitions/* VTL_TEXTURE_BINDING_UNIT_SPRITES */.V4),A.setUniform2fv("u_mosaicSize",i),A.setUniform1i("u_texture",definitions/* VTL_TEXTURE_BINDING_UNIT_SPRITES */.V4))}A.setUniformMatrix3fv("u_displayMat3",g===StyleDefinition/* TranslateAnchor.VIEWPORT */.fD.VIEWPORT?T.displayMat3:T.displayViewMat3),A.setUniform2fv("u_fillTranslation",y),A.setUniform1f("u_depth",m.z+WGLBrushVTLFill_d),L&&A.setUniform4fv("u_id",P);let V=-1;for(const i of p){if(!i.layerData.has(l))continue;i.key.level!==V&&(V=i.key.level,S.setDataUniforms(A,I,m,V,D));const n=i.layerData.get(l);if(!n.fillIndexCount)continue;n.prepareForRendering(v);const r=n.fillVertexArrayObject;if(!(0,maybe/* isNone */.Wi)(r)){if(v.bindVAO(r),A.setUniformMatrix3fv("u_dvsMat3",i.transforms.dvs),v.setStencilFunction(enums/* CompareFunction.EQUAL */.wb.EQUAL,i.stencilRef,255),_){const t=Math.max(2**(Math.round(I)-i.key.level),1),e=i.rangeX/(w*i.width*t);A.setUniform1f("u_patternFactor",e)}if(M){const t=n.patternMap;if(!t)continue;for(const[i,n]of t){const t=D.getPageSize(i);(0,maybe/* isSome */.pC)(t)&&(D.bind(v,enums/* TextureSamplingMode.LINEAR */.cw.LINEAR,i,definitions/* VTL_TEXTURE_BINDING_UNIT_SPRITES */.V4),A.setUniform2fv("u_mosaicSize",t),A.setUniform1i("u_texture",definitions/* VTL_TEXTURE_BINDING_UNIT_SPRITES */.V4),v.drawElements(enums/* PrimitiveType.TRIANGLES */.MX.TRIANGLES,n[1],enums/* DataType.UNSIGNED_INT */.g.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n[0]))}}else v.drawElements(enums/* PrimitiveType.TRIANGLES */.MX.TRIANGLES,n.fillIndexCount,enums/* DataType.UNSIGNED_INT */.g.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n.fillIndexStart);i.triangleCount+=n.fillIndexCount/3}}}_drawOutline(e,a,n,o,l,s,m){const{context:p,displayLevel:y,state:g,drawPhase:_,painter:E,pixelRatio:M,spriteMosaic:P}=e,v=n.outlineMaterial,I=E.vectorTilesMaterialManager,T=.75/M,U=_===webgl_enums/* WGLDrawPhase.HITTEST */.jx.HITTEST,x=this._outlineProgramOptions;x.id=U;const h=I.getMaterialProgram(p,v,x);p.useProgram(h),h.setUniformMatrix3fv("u_displayMat3",s===StyleDefinition/* TranslateAnchor.VIEWPORT */.fD.VIEWPORT?g.displayMat3:g.displayViewMat3),h.setUniform2fv("u_fillTranslation",l),h.setUniform1f("u_depth",n.z+WGLBrushVTLFill_d),h.setUniform1f("u_outline_width",T),U&&h.setUniform4fv("u_id",m);let D=-1;for(const i of o){if(!i.layerData.has(a))continue;i.key.level!==D&&(D=i.key.level,v.setDataUniforms(h,y,n,D,P));const e=i.layerData.get(a);if(e.prepareForRendering(p),!e.outlineIndexCount)continue;const r=e.outlineVertexArrayObject;(0,maybe/* isNone */.Wi)(r)||(p.bindVAO(r),h.setUniformMatrix3fv("u_dvsMat3",i.transforms.dvs),p.setStencilFunction(enums/* CompareFunction.EQUAL */.wb.EQUAL,i.stencilRef,255),p.drawElements(enums/* PrimitiveType.TRIANGLES */.MX.TRIANGLES,e.outlineIndexCount,enums/* DataType.UNSIGNED_INT */.g.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*e.outlineIndexStart),i.triangleCount+=e.outlineIndexCount/3)}}}\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLLine.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nclass WGLBrushVTLLine_u extends WGLBrush/* default */.Z{constructor(){super(...arguments),this._programOptions={id:!1,pattern:!1,sdf:!1}}dispose(){}drawMany(o,u){const{context:c,displayLevel:p,state:d,drawPhase:g,painter:y,pixelRatio:E,spriteMosaic:v,styleLayerUID:M}=o;if(!u.some((e=>{var t,i;return null!=(t=null==(i=e.layerData.get(M))?void 0:i.lineIndexCount)&&t})))return;const _=o.styleLayer,U=_.lineMaterial,I=y.vectorTilesMaterialManager,P=_.getPaintValue("line-translate",p),x=_.getPaintValue("line-translate-anchor",p),T=_.getPaintProperty("line-pattern"),S=void 0!==T,D=S&&T.isDataDriven;let L,N;if(S&&!D){const e=T.getValue(p);L=v.getMosaicItemPosition(e)}let V=!1;if(!S){const e=_.getPaintProperty("line-dasharray");if(N=void 0!==e,V=N&&e.isDataDriven,N&&!V){const t=e.getValue(p),i=_.getDashKey(t,_.getLayoutValue("line-cap",p));L=v.getMosaicItemPosition(i)}}const R=1/E,h=g===webgl_enums/* WGLDrawPhase.HITTEST */.jx.HITTEST,A=this._programOptions;A.id=h,A.pattern=S,A.sdf=N;const j=I.getMaterialProgram(c,U,A);if(c.useProgram(j),j.setUniformMatrix3fv("u_displayViewMat3",d.displayViewMat3),j.setUniformMatrix3fv("u_displayMat3",x===StyleDefinition/* TranslateAnchor.VIEWPORT */.fD.VIEWPORT?d.displayMat3:d.displayViewMat3),j.setUniform2fv("u_lineTranslation",P),j.setUniform1f("u_depth",_.z),j.setUniform1f("u_antialiasing",R),h){const e=(0,number/* u32to4Xu8 */.Au)(M+1);j.setUniform4fv("u_id",e)}if(L&&(0,maybe/* isSome */.pC)(L)){const{page:t}=L,i=v.getPageSize(t);(0,maybe/* isSome */.pC)(i)&&(v.bind(c,enums/* TextureSamplingMode.LINEAR */.cw.LINEAR,t,definitions/* VTL_TEXTURE_BINDING_UNIT_SPRITES */.V4),j.setUniform2fv("u_mosaicSize",i),j.setUniform1i("u_texture",definitions/* VTL_TEXTURE_BINDING_UNIT_SPRITES */.V4))}let w=-1;for(const i of u){if(!i.layerData.has(M))continue;i.key.level!==w&&(w=i.key.level,U.setDataUniforms(j,p,_,w,v));const a=2**(p-w)/E;j.setUniform1f("u_zoomFactor",a);const r=i.layerData.get(M);if(!r.lineIndexCount)continue;r.prepareForRendering(c);const o=r.lineVertexArrayObject;if(!(0,maybe/* isNone */.Wi)(o)){if(c.bindVAO(o),j.setUniformMatrix3fv("u_dvsMat3",i.transforms.dvs),c.setStencilFunction(enums/* CompareFunction.EQUAL */.wb.EQUAL,i.stencilRef,255),D||V){const t=r.patternMap;if(!t)continue;for(const[i,a]of t){const t=v.getPageSize(i);(0,maybe/* isSome */.pC)(t)&&(v.bind(c,enums/* TextureSamplingMode.LINEAR */.cw.LINEAR,i,definitions/* VTL_TEXTURE_BINDING_UNIT_SPRITES */.V4),j.setUniform2fv("u_mosaicSize",t),j.setUniform1i("u_texture",definitions/* VTL_TEXTURE_BINDING_UNIT_SPRITES */.V4),c.drawElements(enums/* PrimitiveType.TRIANGLES */.MX.TRIANGLES,a[1],enums/* DataType.UNSIGNED_INT */.g.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*a[0]))}}else c.drawElements(enums/* PrimitiveType.TRIANGLES */.MX.TRIANGLES,r.lineIndexCount,enums/* DataType.UNSIGNED_INT */.g.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*r.lineIndexStart);i.triangleCount+=r.lineIndexCount/3}}}}\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/chunks/vec2f32.js\nvar vec2f32 = __webpack_require__(55542);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/2d/engine/vectorTiles/decluttering/config.js\nvar config = __webpack_require__(2509);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/GeometryUtils.js\nvar GeometryUtils = __webpack_require__(71200);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLSymbol.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nconst _=1/65536;class h extends WGLBrush/* default */.Z{constructor(){super(...arguments),this._iconProgramOptions={id:!1,sdf:!1},this._sdfProgramOptions={id:!1},this._spritesTextureSize=(0,vec2f32.c)()}dispose(){}drawMany(e,t){const{drawPhase:a,styleLayerUID:i}=e,r=e.styleLayer;let s;a===webgl_enums/* WGLDrawPhase.HITTEST */.jx.HITTEST&&(s=(0,number/* u32to4Xu8 */.Au)(i+1)),this._drawIcons(e,r,t,s),this._drawText(e,r,t,s)}_drawIcons(t,a,l,m){const{context:p,displayLevel:u,drawPhase:g,painter:y,spriteMosaic:d,state:_,styleLayerUID:h}=t,M=a.iconMaterial,P=y.vectorTilesMaterialManager;let T,U=!1;for(const e of l)if(e.layerData.has(h)&&(T=e.layerData.get(h),T.iconPerPageElementsMap.size>0)){U=!0;break}if(!U)return;const E=a.getPaintValue("icon-translate",u),x=a.getPaintValue("icon-translate-anchor",u);let v=a.getLayoutValue("icon-rotation-alignment",u);v===StyleDefinition/* RotationAlignment.AUTO */.aF.AUTO&&(v=a.getLayoutValue("symbol-placement",u)===StyleDefinition/* SymbolPlacement.POINT */.R.POINT?StyleDefinition/* RotationAlignment.VIEWPORT */.aF.VIEWPORT:StyleDefinition/* RotationAlignment.MAP */.aF.MAP);const I=v===StyleDefinition/* RotationAlignment.MAP */.aF.MAP,S=a.getLayoutValue("icon-keep-upright",u)&&I,D=T.isIconSDF,V=g===webgl_enums/* WGLDrawPhase.HITTEST */.jx.HITTEST,R=this._iconProgramOptions;R.id=V,R.sdf=D;const w=P.getMaterialProgram(p,M,R);p.useProgram(w),w.setUniformMatrix3fv("u_displayViewMat3",v===StyleDefinition/* RotationAlignment.MAP */.aF.MAP?_.displayViewMat3:_.displayMat3),w.setUniformMatrix3fv("u_displayMat3",x===StyleDefinition/* TranslateAnchor.VIEWPORT */.fD.VIEWPORT?_.displayMat3:_.displayViewMat3),w.setUniform2fv("u_iconTranslation",E),w.setUniform1f("u_depth",a.z),w.setUniform1f("u_mapRotation",(0,GeometryUtils/* degToByte */.s5)(_.rotation)),w.setUniform1f("u_keepUpright",S?1:0),w.setUniform1f("u_level",10*u),w.setUniform1i("u_texture",definitions/* VTL_TEXTURE_BINDING_UNIT_SPRITES */.V4),w.setUniform1f("u_fadeDuration",config/* FADE_DURATION */.nN/1e3),V&&w.setUniform4fv("u_id",m);let A=-1;for(const i of l){if(!i.layerData.has(h))continue;if(i.key.level!==A&&(A=i.key.level,M.setDataUniforms(w,u,a,A,d)),T=i.layerData.get(h),0===T.iconPerPageElementsMap.size)continue;T.prepareForRendering(p),T.updateOpacityInfo();const r=T.iconVertexArrayObject;if(!(0,maybe/* isNone */.Wi)(r)){p.bindVAO(r),w.setUniformMatrix3fv("u_dvsMat3",i.transforms.dvs),w.setUniform1f("u_time",(performance.now()-T.lastOpacityUpdate)/1e3);for(const[e,a]of T.iconPerPageElementsMap)this._renderIconRange(t,w,a,e,i)}}}_renderIconRange(e,t,a,i,r){const{context:s,spriteMosaic:n}=e;this._spritesTextureSize[0]=n.getWidth(i)/4,this._spritesTextureSize[1]=n.getHeight(i)/4,t.setUniform2fv("u_mosaicSize",this._spritesTextureSize),n.bind(s,enums/* TextureSamplingMode.LINEAR */.cw.LINEAR,i,definitions/* VTL_TEXTURE_BINDING_UNIT_SPRITES */.V4),s.setStencilTestEnabled(!0),s.setStencilFunction(enums/* CompareFunction.GREATER */.wb.GREATER,255,255),s.setStencilWriteMask(0),s.drawElements(enums/* PrimitiveType.TRIANGLES */.MX.TRIANGLES,a[1],enums/* DataType.UNSIGNED_INT */.g.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*a[0]),r.triangleCount+=a[1]/3}_drawText(t,o,m,p){const{context:u,displayLevel:y,drawPhase:d,glyphMosaic:h,painter:M,pixelRatio:P,spriteMosaic:T,state:U,styleLayerUID:E}=t,x=o.textMaterial,v=M.vectorTilesMaterialManager;let I,S=!1;for(const e of m)if(e.layerData.has(E)&&(I=e.layerData.get(E),I.glyphPerPageElementsMap.size>0)){S=!0;break}if(!S)return;const D=o.getPaintProperty("text-opacity");if(D&&!D.isDataDriven&&0===D.getValue(y))return;const V=o.getPaintProperty("text-color"),R=!V||V.isDataDriven||V.getValue(y)[3]>0,w=o.getPaintProperty("text-halo-width"),A=o.getPaintProperty("text-halo-color"),L=(!w||w.isDataDriven||w.getValue(y)>0)&&(!A||A.isDataDriven||A.getValue(y)[3]>0);if(!R&&!L)return;const O=24/8;let N=o.getLayoutValue("text-rotation-alignment",y);N===StyleDefinition/* RotationAlignment.AUTO */.aF.AUTO&&(N=o.getLayoutValue("symbol-placement",y)===StyleDefinition/* SymbolPlacement.POINT */.R.POINT?StyleDefinition/* RotationAlignment.VIEWPORT */.aF.VIEWPORT:StyleDefinition/* RotationAlignment.MAP */.aF.MAP);const b=N===StyleDefinition/* RotationAlignment.MAP */.aF.MAP,z=o.getLayoutValue("text-keep-upright",y)&&b,k=d===webgl_enums/* WGLDrawPhase.HITTEST */.jx.HITTEST,j=.8*O/P;this._glyphTextureSize||(this._glyphTextureSize=(0,vec2f32.f)(h.width/4,h.height/4));const G=o.getPaintValue("text-translate",y),W=o.getPaintValue("text-translate-anchor",y),F=this._sdfProgramOptions;F.id=k;const B=v.getMaterialProgram(u,x,F);u.useProgram(B),B.setUniformMatrix3fv("u_displayViewMat3",N===StyleDefinition/* RotationAlignment.MAP */.aF.MAP?U.displayViewMat3:U.displayMat3),B.setUniformMatrix3fv("u_displayMat3",W===StyleDefinition/* TranslateAnchor.VIEWPORT */.fD.VIEWPORT?U.displayMat3:U.displayViewMat3),B.setUniform2fv("u_textTranslation",G),B.setUniform1f("u_depth",o.z+_),B.setUniform2fv("u_mosaicSize",this._glyphTextureSize),B.setUniform1f("u_mapRotation",(0,GeometryUtils/* degToByte */.s5)(U.rotation)),B.setUniform1f("u_keepUpright",z?1:0),B.setUniform1f("u_level",10*y),B.setUniform1i("u_texture",definitions/* VTL_TEXTURE_BINDING_UNIT_GLYPHS */.CU),B.setUniform1f("u_antialiasingWidth",j),B.setUniform1f("u_fadeDuration",config/* FADE_DURATION */.nN/1e3),k&&B.setUniform4fv("u_id",p);let H=-1;for(const a of m){if(!a.layerData.has(E))continue;if(a.key.level!==H&&(H=a.key.level,x.setDataUniforms(B,y,o,H,T)),I=a.layerData.get(E),0===I.glyphPerPageElementsMap.size)continue;I.prepareForRendering(u),I.updateOpacityInfo();const t=I.textVertexArrayObject;if((0,maybe/* isNone */.Wi)(t))continue;u.bindVAO(t),B.setUniformMatrix3fv("u_dvsMat3",a.transforms.dvs),u.setStencilTestEnabled(!0),u.setStencilFunction(enums/* CompareFunction.GREATER */.wb.GREATER,255,255),u.setStencilWriteMask(0);const i=(performance.now()-I.lastOpacityUpdate)/1e3;B.setUniform1f("u_time",i),I.glyphPerPageElementsMap.forEach(((e,t)=>{this._renderGlyphRange(u,e,t,h,B,L,R,a)}))}}_renderGlyphRange(e,t,a,i,r,s,n,o){i.bind(e,enums/* TextureSamplingMode.LINEAR */.cw.LINEAR,a,definitions/* VTL_TEXTURE_BINDING_UNIT_GLYPHS */.CU),s&&(r.setUniform1f("u_halo",1),e.drawElements(enums/* PrimitiveType.TRIANGLES */.MX.TRIANGLES,t[1],enums/* DataType.UNSIGNED_INT */.g.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),o.triangleCount+=t[1]/3),n&&(r.setUniform1f("u_halo",0),e.drawElements(enums/* PrimitiveType.TRIANGLES */.MX.TRIANGLES,t[1],enums/* DataType.UNSIGNED_INT */.g.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),o.triangleCount+=t[1]/3)}}\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/RandomLCG.js\nvar RandomLCG = __webpack_require__(4157);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrush.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nclass WGLGeometryBrush_m extends WGLBrush/* default */.Z{constructor(){super(...arguments),this._computeDesc=new Map}prepareState({context:t},e,i){const s=i&&-1!==i.indexOf("hittest");t.setBlendingEnabled(!s),t.setBlendFunctionSeparate(enums/* BlendFactor.ONE */.zi.ONE,enums/* BlendFactor.ONE_MINUS_SRC_ALPHA */.zi.ONE_MINUS_SRC_ALPHA,enums/* BlendFactor.ONE */.zi.ONE,enums/* BlendFactor.ONE_MINUS_SRC_ALPHA */.zi.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!0),t.setStencilFunction(enums/* CompareFunction.EQUAL */.wb.EQUAL,e.stencilRef,255)}draw(e,i,s){const o=this.getGeometryType();i.commit(e);const a=i.getGeometry(o);(0,maybe/* isNone */.Wi)(a)||(e.timeline.begin(this.name),e.attributeView.bindTextures(e.context),a.forEachCommand((t=>this.drawGeometry(e,i,t,s))))}_setSharedUniforms(t,n,v){const{displayLevel:u,pixelRatio:f,state:m,passOptions:l}=n;(0,maybe/* isSome */.pC)(l)&&"hittest"===l.type&&(t.setUniform2fv("u_hittestPos",l.position),t.setUniform1f("u_hittestDist",l.distance)),t.setUniform1f("u_pixelRatio",f),t.setUniformMatrix3fv("u_tileMat3",v.transforms.tileMat3),t.setUniformMatrix3fv("u_viewMat3",m.viewMat3),t.setUniformMatrix3fv("u_dvsMat3",v.transforms.dvs),t.setUniformMatrix3fv("u_displayViewMat3",m.displayViewMat3),t.setUniform1f("u_currentZoom",Math.round(u*definitions/* MIN_MAX_ZOOM_PRECISION_FACTOR */.MI)),t.setUniform1i("u_attributeTextureSize",n.attributeView.size),t.setUniform1i("u_attributeData0",definitions/* TEXTURE_BINDING_ATTRIBUTE_DATA_0 */.iJ),t.setUniform1i("u_attributeData1",definitions/* TEXTURE_BINDING_ATTRIBUTE_DATA_1 */.nM),t.setUniform1i("u_attributeData2",definitions/* TEXTURE_BINDING_ATTRIBUTE_DATA_2 */.Ij),t.setUniform1i("u_attributeData3",definitions/* TEXTURE_BINDING_ATTRIBUTE_DATA_3 */.f2)}_setSizeVVUniforms(t,e,i,s){if(t.vvSizeMinMaxValue&&e.setUniform4fv("u_vvSizeMinMaxValue",i.vvSizeMinMaxValue),t.vvSizeScaleStops&&e.setUniform1f("u_vvSizeScaleStopsValue",i.vvSizeScaleStopsValue),t.vvSizeFieldStops){const t=i.getSizeVVFieldStops(s.key.level);e.setUniform1fv("u_vvSizeFieldStopsValues",t.values),e.setUniform1fv("u_vvSizeFieldStopsSizes",t.sizes)}t.vvSizeUnitValue&&e.setUniform1f("u_vvSizeUnitValueWorldToPixelsRatio",i.vvSizeUnitValueToPixelsRatio)}_setColorAndOpacityVVUniforms(t,e,i){t.vvColor&&(e.setUniform1fv("u_vvColorValues",i.vvColorValues),e.setUniform4fv("u_vvColors",i.vvColors)),t.vvOpacity&&(e.setUniform1fv("u_vvOpacityValues",i.vvOpacityValues),e.setUniform1fv("u_vvOpacities",i.vvOpacities))}_setRotationVVUniforms(t,e,i){t.vvRotation&&e.setUniform1f("u_vvRotationType","geographic"===i.vvMaterialParameters.vvRotationType?0:1)}_getTriangleDesc(t,e){let i=this._computeDesc.get(t);if(!i){const s=e.strides,o=e.strides.geometry,a=new Map(e.attributes),r=e.bufferLayouts.geometry.map((t=>({...t}))),n=Math.max(...e.attributes.values()),v={geometry:r};v.geometry.push({count:2,name:"a_pos1",divisor:0,normalized:!1,offset:o,stride:o,type:enums/* DataType.SHORT */.g.SHORT}),v.geometry.push({count:2,name:"a_pos2",divisor:0,normalized:!1,offset:2*o,stride:o,type:enums/* DataType.SHORT */.g.SHORT}),a.set("a_pos1",n+1),a.set("a_pos2",n+2),i={bufferLayouts:v,attributes:a,strides:s},this._computeDesc.set(t,i)}return i}}\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/materialKey/MaterialKey.js\nvar MaterialKey = __webpack_require__(89106);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/webgl/FramebufferObject.js\nvar FramebufferObject = __webpack_require__(18567);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/webgl/Renderbuffer.js\nvar Renderbuffer = __webpack_require__(37165);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/webgl/Texture.js\nvar Texture = __webpack_require__(43487);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushFill.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nconst b=t=>{const e={geometry:[{location:0,name:"a_pos",count:2,type:enums/* DataType.SHORT */.g.SHORT},{location:1,name:"a_id",count:3,type:enums/* DataType.UNSIGNED_BYTE */.g.UNSIGNED_BYTE},{location:2,name:"a_bitset",count:1,type:enums/* DataType.UNSIGNED_BYTE */.g.UNSIGNED_BYTE}]};return t.dotDensity?(e.geometry.push({location:3,name:"a_inverseArea",count:1,type:enums/* DataType.FLOAT */.g.FLOAT}),(0,Utils/* createProgramDescriptor */.cM)(t.data,e)):(e.geometry.push({location:3,name:"a_color",count:4,type:enums/* DataType.UNSIGNED_BYTE */.g.UNSIGNED_BYTE,normalized:!0}),t.simple||e.geometry.push({location:4,name:"a_aux1",count:4,type:enums/* DataType.UNSIGNED_SHORT */.g.UNSIGNED_SHORT}),e.geometry.push({location:5,name:"a_aux2",count:4,type:enums/* DataType.UNSIGNED_BYTE */.g.UNSIGNED_BYTE},{location:6,name:"a_aux3",count:4,type:enums/* DataType.UNSIGNED_BYTE */.g.UNSIGNED_BYTE}),t.simple||e.geometry.push({location:7,name:"a_zoomRange",count:2,type:enums/* DataType.UNSIGNED_SHORT */.g.UNSIGNED_SHORT}),(0,Utils/* createProgramDescriptor */.cM)(t.data,e))};class N extends WGLGeometryBrush_m{constructor(){super(...arguments),this._dotTextureSize=0,this._dotTextures=null,this._dotSamplers=new Int32Array([definitions/* TEXTURE_BINDING_RENDERER_0 */.kF,definitions/* TEXTURE_BINDING_RENDERER_1 */.yP]),this._dotVAO=null,this._dotDesc={vsPath:"dot/dot",fsPath:"dot/dot",attributes:new Map([["a_pos",0]])}}dispose(){this._disposeTextures(),this._dotFBO=(0,maybe/* disposeMaybe */.O3)(this._dotFBO),this._dotVAO=(0,maybe/* disposeMaybe */.O3)(this._dotVAO)}getGeometryType(){return webgl_enums/* WGLGeometryType.FILL */.LW.FILL}drawGeometry(t,o,r,i){const{context:s,painter:a,rendererInfo:n,requiredLevel:d,passOptions:l}=t,_=MaterialKey/* FillMaterialKey.load */.dk.load(r.materialKey),f=a.materialManager;let h=enums/* PrimitiveType.TRIANGLES */.MX.TRIANGLES,T=b(_);(0,maybe/* isSome */.pC)(l)&&"hittest"===l.type&&(T=this._getTriangleDesc(r.materialKey,T),h=enums/* PrimitiveType.POINTS */.MX.POINTS);const{attributes:p,bufferLayouts:y}=T,x=f.getMaterialProgram(t,_,"materials/fill",p,i);if(s.useProgram(x),this._setSharedUniforms(x,t,o),x.setUniform2f("u_tileOffset",512*o.key.col,512*o.key.row),_.textureBinding){a.textureManager.bindTextures(s,x,_);const e=1/2**(d-o.key.level)/t.pixelRatio;x.setUniform1f("u_zoomFactor",e)}const D=1/t.pixelRatio;x.setUniform1f("u_blur",D),x.setUniform1f("u_antialiasing",D),this._setSizeVVUniforms(_,x,n,o),this._setColorAndOpacityVVUniforms(_,x,n);const g=(0,maybe/* isSome */.pC)(l)&&"hittest"===l.type,E=r.target.getVAO(s,y,p,g);let S=r.indexCount,w=r.indexFrom*Uint32Array.BYTES_PER_ELEMENT;if(g&&(S/=3,w/=3),s.bindVAO(E),!_.dotDensity||g)s.drawElements(h,S,enums/* DataType.UNSIGNED_INT */.g.UNSIGNED_INT,w);else{const e=this._drawDotLocations(t,o,x,S,w);this._drawDotDensity(t,o,e)}}_drawDotDensity(t,e,o){const{context:r,painter:i,rendererInfo:s}=t,a=i.materialManager.getProgram(t,this._dotDesc),n=this._createDotDensityMesh(r,this._dotDesc.attributes,{geometry:[{name:"a_pos",count:2,type:enums/* DataType.SHORT */.g.SHORT,divisor:0,normalized:!1,offset:0,stride:4}]});r.setStencilTestEnabled(!0),r.useProgram(a),a.setUniform1f("u_tileZoomFactor",1),a.setUniform1i("u_texture",this._dotSamplers[0]),a.setUniform1f("u_dotSize",Math.max(s.ddDotSize,1)),a.setUniform1f("u_pixelRatio",window.devicePixelRatio),this._setSharedUniforms(a,t,e),r.bindTexture(o,this._dotSamplers[0]),r.bindVAO(n),r.drawArrays(enums/* PrimitiveType.POINTS */.MX.POINTS,0,262144)}_drawDotLocations(t,e,o,r,i){const{context:s,rendererInfo:n,requiredLevel:d}=t,l=s.getViewport();s.setViewport(0,0,512,512);const m=s.getBoundFramebufferObject(),_=this._createFBO(s);s.bindFramebuffer(_),s.setClearColor(0,0,0,0),s.clear(s.gl.COLOR_BUFFER_BIT|s.gl.STENCIL_BUFFER_BIT),s.setStencilTestEnabled(!1);const f=1/2**(d-e.key.level),h=definitions/* TILE_SIZE */.I_,T=h*window.devicePixelRatio*h*window.devicePixelRatio,p=1/f*(1/f),y=n.ddDotScale?t.state.scale/n.ddDotScale:1;return o.setUniform1f("u_tileZoomFactor",f),o.setUniform1f("u_tileDotsOverArea",T/(definitions/* TILE_SIZE */.I_*window.devicePixelRatio*definitions/* TILE_SIZE */.I_*window.devicePixelRatio)),o.setUniformMatrix4fv("u_dotColors",n.ddColors),o.setUniform4fv("u_isActive",n.ddActiveDots),o.setUniform4fv("u_dotBackgroundColor",n.ddBackgroundColor),o.setUniform1f("u_dotValue",Math.max(1,n.ddDotValue*y*p)),this._bindDotDensityTextures(s,o,n,h),s.drawElements(enums/* PrimitiveType.TRIANGLES */.MX.TRIANGLES,r,enums/* DataType.UNSIGNED_INT */.g.UNSIGNED_INT,i),s.setViewport(l.x,l.y,l.width,l.height),s.bindFramebuffer(m),_.colorTexture}_createFBO(t){if((0,maybe/* isNone */.Wi)(this._dotFBO)){const e=512,o=512,r={target:enums/* TextureType.TEXTURE_2D */.No.TEXTURE_2D,pixelFormat:enums/* PixelFormat.RGBA */.VI.RGBA,dataType:enums/* PixelType.UNSIGNED_BYTE */.Br.UNSIGNED_BYTE,samplingMode:enums/* TextureSamplingMode.NEAREST */.cw.NEAREST,wrapMode:enums/* TextureWrapMode.CLAMP_TO_EDGE */.e8.CLAMP_TO_EDGE,width:e,height:o},i={colorTarget:enums/* TargetType.TEXTURE */.Lm.TEXTURE,depthStencilTarget:enums/* DepthStencilTargetType.DEPTH_STENCIL_RENDER_BUFFER */.OU.DEPTH_STENCIL_RENDER_BUFFER},s=new Renderbuffer/* Renderbuffer */.r(t,{width:e,height:o,internalFormat:enums/* RenderbufferFormat.DEPTH_STENCIL */.Tg.DEPTH_STENCIL});this._dotFBO=new FramebufferObject/* FramebufferObject */.X(t,i,r,s)}return this._dotFBO}_disposeTextures(){if(this._dotTextures){for(let t=0;t<this._dotTextures.length;t++)this._dotTextures[t].dispose();this._dotTextures=null}}_bindDotDensityTextures(t,e,o,r){const i=this._createDotDensityTextures(t,r,o.ddSeed);e.setUniform1iv("u_dotTextures",this._dotSamplers);for(let s=0;s<i.length;s++)t.bindTexture(i[s],this._dotSamplers[s])}_createDotDensityMesh(t,e,r){if((0,maybe/* isNone */.Wi)(this._dotVAO)){const o=2,i=new Int16Array(262144*o);for(let t=0;t<512;t++)for(let e=0;e<512;e++)i[o*(e+512*t)]=e,i[o*(e+512*t)+1]=t;const s=BufferObject/* BufferObject.createVertex */.f.createVertex(t,enums/* Usage.STATIC_DRAW */.l1.STATIC_DRAW,i);this._dotVAO=new VertexArrayObject/* VertexArrayObject */.U(t,e,r,{geometry:s},null)}return this._dotVAO}_createDotDensityTextures(t,e,o){if(this._dotTextureSize===e&&this._seed===o||(this._disposeTextures(),this._dotTextureSize=e,this._seed=o),null===this._dotTextures){const i=new RandomLCG/* default */.Z(o);this._dotTextures=[this._allocDotDensityTexture(t,e,i),this._allocDotDensityTexture(t,e,i)]}return this._dotTextures}_allocDotDensityTexture(t,e,o){const r=new Float32Array(e*e*4);for(let i=0;i<r.length;i++)r[i]=o.getFloat();return new Texture/* Texture */.x(t,{wrapMode:enums/* TextureWrapMode.REPEAT */.e8.REPEAT,pixelFormat:enums/* PixelFormat.RGBA */.VI.RGBA,dataType:enums/* PixelType.FLOAT */.Br.FLOAT,samplingMode:enums/* TextureSamplingMode.NEAREST */.cw.NEAREST,width:e,height:e},r)}}\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushLabel.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nconst s=e=>(0,Utils/* createProgramDescriptor */.cM)(e.data,{geometry:[{location:0,name:"a_pos",count:2,type:enums/* DataType.SHORT */.g.SHORT},{location:1,name:"a_id",count:4,type:enums/* DataType.UNSIGNED_BYTE */.g.UNSIGNED_BYTE},{location:2,name:"a_color",count:4,type:enums/* DataType.UNSIGNED_BYTE */.g.UNSIGNED_BYTE,normalized:!0},{location:3,name:"a_haloColor",count:4,type:enums/* DataType.UNSIGNED_BYTE */.g.UNSIGNED_BYTE,normalized:!0},{location:4,name:"a_texAndSize",count:4,type:enums/* DataType.UNSIGNED_BYTE */.g.UNSIGNED_BYTE},{location:5,name:"a_refSymbolAndPlacementOffset",count:4,type:enums/* DataType.UNSIGNED_BYTE */.g.UNSIGNED_BYTE},{location:6,name:"a_glyphData",count:4,type:enums/* DataType.UNSIGNED_BYTE */.g.UNSIGNED_BYTE},{location:7,name:"a_vertexOffset",count:2,type:enums/* DataType.SHORT */.g.SHORT},{location:8,name:"a_texCoords",count:2,type:enums/* DataType.UNSIGNED_SHORT */.g.UNSIGNED_SHORT}]});class WGLGeometryBrushLabel_m extends WGLGeometryBrush_m{dispose(){}getGeometryType(){return webgl_enums/* WGLGeometryType.LABEL */.LW.LABEL}drawGeometry(e,t,a,m){const{context:l,painter:c,state:f,rendererInfo:u}=e,d=MaterialKey/* LabelMaterialKey.load */.Gq.load(a.materialKey),_=d.mapAligned?1:0;if(!_&&Math.abs(t.key.level-Math.round(100*e.displayLevel)/100)>=1)return;const{bufferLayouts:p,attributes:E}=s(d),y=c.materialManager.getMaterialProgram(e,d,"materials/label",E,m);e.context.setStencilFunction(enums/* CompareFunction.EQUAL */.wb.EQUAL,0,255),l.useProgram(y),this._setSharedUniforms(y,e,t),c.textureManager.bindTextures(l,y,d);const N=1===_?f.displayViewMat3:f.displayMat3;this._setSizeVVUniforms(d,y,u,t),y.setUniform1f("u_mapRotation",Math.floor(f.rotation/360*254)),y.setUniform1f("u_mapAligned",_),y.setUniformMatrix3fv("u_displayMat3",N),y.setUniform1f("u_opacity",1),y.setUniform2fv("u_screenSize",e.state.size),y.setUniform1f("u_isHalo",1);const S=a.target.getVAO(l,p,E),U=a.indexFrom*Uint32Array.BYTES_PER_ELEMENT;l.bindVAO(S),l.drawElements(enums/* PrimitiveType.TRIANGLES */.MX.TRIANGLES,a.indexCount,enums/* DataType.UNSIGNED_INT */.g.UNSIGNED_INT,U),y.setUniform1f("u_isHalo",0),l.drawElements(enums/* PrimitiveType.TRIANGLES */.MX.TRIANGLES,a.indexCount,enums/* DataType.UNSIGNED_INT */.g.UNSIGNED_INT,U),l.setStencilTestEnabled(!0),l.setBlendingEnabled(!0)}}\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushLine.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nconst WGLGeometryBrushLine_s=t=>(0,Utils/* createProgramDescriptor */.cM)(t.data,{geometry:[{location:0,name:"a_pos",count:2,type:enums/* DataType.SHORT */.g.SHORT},{location:1,name:"a_id",count:4,type:enums/* DataType.UNSIGNED_BYTE */.g.UNSIGNED_BYTE},{location:2,name:"a_color",count:4,type:enums/* DataType.UNSIGNED_BYTE */.g.UNSIGNED_BYTE,normalized:!0},{location:3,name:"a_offsetAndNormal",count:4,type:enums/* DataType.BYTE */.g.BYTE},{location:4,name:"a_accumulatedDistanceAndHalfWidth",count:2,type:enums/* DataType.UNSIGNED_SHORT */.g.UNSIGNED_SHORT},{location:5,name:"a_tlbr",count:4,type:enums/* DataType.UNSIGNED_SHORT */.g.UNSIGNED_SHORT},{location:6,name:"a_segmentDirection",count:4,type:enums/* DataType.BYTE */.g.BYTE},{location:7,name:"a_aux",count:2,type:enums/* DataType.UNSIGNED_SHORT */.g.UNSIGNED_SHORT},{location:8,name:"a_zoomRange",count:2,type:enums/* DataType.UNSIGNED_SHORT */.g.UNSIGNED_SHORT}]});class WGLGeometryBrushLine_m extends WGLGeometryBrush_m{dispose(){}getGeometryType(){return webgl_enums/* WGLGeometryType.LINE */.LW.LINE}drawGeometry(e,a,o,m){const{context:l,painter:c,rendererInfo:u,displayLevel:p,passOptions:y}=e,_=MaterialKey/* LineMaterialKey.load */.a.load(o.materialKey);let d=WGLGeometryBrushLine_s(_),f=enums/* PrimitiveType.TRIANGLES */.MX.TRIANGLES;(0,maybe/* isSome */.pC)(y)&&"hittest"===y.type&&(d=this._getTriangleDesc(o.materialKey,d),f=enums/* PrimitiveType.POINTS */.MX.POINTS);const{attributes:E,bufferLayouts:N}=d,g=c.materialManager.getMaterialProgram(e,_,"materials/line",E,m),S=1/e.pixelRatio,T=0;l.useProgram(g),this._setSharedUniforms(g,e,a),_.textureBinding&&c.textureManager.bindTextures(l,g,_);const U=2**(p-a.key.level)/e.pixelRatio;g.setUniform1f("u_zoomFactor",U),g.setUniform1f("u_blur",T+S),g.setUniform1f("u_antialiasing",S),this._setSizeVVUniforms(_,g,u,a),this._setColorAndOpacityVVUniforms(_,g,u),l.setFaceCullingEnabled(!1);const G=(0,maybe/* isSome */.pC)(y)&&"hittest"===y.type,I=o.target.getVAO(l,N,E,G);let x=o.indexCount,D=o.indexFrom*Uint32Array.BYTES_PER_ELEMENT;G&&(x/=3,D/=3),l.bindVAO(I),l.drawElements(f,x,enums/* DataType.UNSIGNED_INT */.g.UNSIGNED_INT,D)}}\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushMarker.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nconst WGLGeometryBrushMarker_s=t=>(0,Utils/* createProgramDescriptor */.cM)(t.data,{geometry:[{location:0,name:"a_pos",count:2,type:enums/* DataType.SHORT */.g.SHORT},{location:1,name:"a_vertexOffset",count:2,type:enums/* DataType.SHORT */.g.SHORT},{location:2,name:"a_texCoords",count:2,type:enums/* DataType.UNSIGNED_SHORT */.g.UNSIGNED_SHORT},{location:3,name:"a_bitSetAndDistRatio",count:2,type:enums/* DataType.UNSIGNED_SHORT */.g.UNSIGNED_SHORT},{location:4,name:"a_id",count:4,type:enums/* DataType.UNSIGNED_BYTE */.g.UNSIGNED_BYTE},{location:5,name:"a_color",count:4,type:enums/* DataType.UNSIGNED_BYTE */.g.UNSIGNED_BYTE,normalized:!0},{location:6,name:"a_outlineColor",count:4,type:enums/* DataType.UNSIGNED_BYTE */.g.UNSIGNED_BYTE,normalized:!0},{location:7,name:"a_sizeAndOutlineWidth",count:4,type:enums/* DataType.UNSIGNED_BYTE */.g.UNSIGNED_BYTE},{location:8,name:"a_zoomRange",count:2,type:enums/* DataType.UNSIGNED_SHORT */.g.UNSIGNED_SHORT}]});class WGLGeometryBrushMarker_m extends WGLGeometryBrush_m{dispose(){}getGeometryType(){return webgl_enums/* WGLGeometryType.MARKER */.LW.MARKER}drawGeometry(e,o,a,m){const{context:l,painter:c,rendererInfo:p,state:d,passOptions:u}=e,y=MaterialKey/* MarkerMaterialKey.load */.mE.load(a.materialKey),{bufferLayouts:_,attributes:E}=WGLGeometryBrushMarker_s(y),N=c.materialManager.getMaterialProgram(e,y,"materials/icon",E,m);l.useProgram(N),y.textureBinding&&c.textureManager.bindTextures(l,N,y,!0);let S=enums/* PrimitiveType.TRIANGLES */.MX.TRIANGLES;(0,maybe/* isSome */.pC)(u)&&"hittest"===u.type&&(S=enums/* PrimitiveType.POINTS */.MX.POINTS),this._setSharedUniforms(N,e,o);const f=y.vvRotation?d.displayViewMat3:d.displayMat3;N.setUniformMatrix3fv("u_displayMat3",f),this._setSizeVVUniforms(y,N,p,o),this._setColorAndOpacityVVUniforms(y,N,p),this._setRotationVVUniforms(y,N,p);const T=a.target.getVAO(l,_,E),U=a.indexFrom*Uint32Array.BYTES_PER_ELEMENT;l.bindVAO(T),l.drawElements(S,a.indexCount,enums/* DataType.UNSIGNED_INT */.g.UNSIGNED_INT,U)}}\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushText.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nconst WGLGeometryBrushText_s=t=>(0,Utils/* createProgramDescriptor */.cM)(t.data,{geometry:[{location:0,name:"a_pos",count:2,type:enums/* DataType.SHORT */.g.SHORT},{location:1,name:"a_id",count:4,type:enums/* DataType.UNSIGNED_BYTE */.g.UNSIGNED_BYTE},{location:2,name:"a_color",count:4,type:enums/* DataType.UNSIGNED_BYTE */.g.UNSIGNED_BYTE,normalized:!0},{location:3,name:"a_haloColor",count:4,type:enums/* DataType.UNSIGNED_BYTE */.g.UNSIGNED_BYTE,normalized:!0},{location:4,name:"a_texFontSize",count:4,type:enums/* DataType.UNSIGNED_BYTE */.g.UNSIGNED_BYTE},{location:5,name:"a_aux",count:4,type:enums/* DataType.BYTE */.g.BYTE},{location:6,name:"a_zoomRange",count:2,type:enums/* DataType.UNSIGNED_SHORT */.g.UNSIGNED_SHORT},{location:7,name:"a_vertexOffset",count:2,type:enums/* DataType.SHORT */.g.SHORT},{location:8,name:"a_texCoords",count:2,type:enums/* DataType.UNSIGNED_SHORT */.g.UNSIGNED_SHORT}]});class WGLGeometryBrushText_m extends WGLGeometryBrush_m{dispose(){}getGeometryType(){return webgl_enums/* WGLGeometryType.TEXT */.LW.TEXT}drawGeometry(e,o,a,m){const{context:l,painter:p,rendererInfo:u,state:_,passOptions:c}=e,y=MaterialKey/* TextMaterialKey.load */.qr.load(a.materialKey),{bufferLayouts:d,attributes:f}=WGLGeometryBrushText_s(y),E=p.materialManager.getMaterialProgram(e,y,"materials/text",f,m);l.useProgram(E);let N=enums/* PrimitiveType.TRIANGLES */.MX.TRIANGLES;(0,maybe/* isSome */.pC)(c)&&"hittest"===c.type&&(N=enums/* PrimitiveType.POINTS */.MX.POINTS),this._setSharedUniforms(E,e,o),p.textureManager.bindTextures(l,E,y),E.setUniformMatrix3fv("u_displayMat3",_.displayMat3),E.setUniformMatrix3fv("u_displayViewMat3",_.displayViewMat3),this._setSizeVVUniforms(y,E,u,o),this._setColorAndOpacityVVUniforms(y,E,u),this._setRotationVVUniforms(y,E,u),E.setUniform1f("u_isHalo",1);const T=a.target.getVAO(l,d,f),S=a.indexFrom*Uint32Array.BYTES_PER_ELEMENT;l.bindVAO(T),l.drawElements(enums/* PrimitiveType.TRIANGLES */.MX.TRIANGLES,a.indexCount,enums/* DataType.UNSIGNED_INT */.g.UNSIGNED_INT,S),E.setUniform1f("u_isHalo",0),l.drawElements(N,a.indexCount,enums/* DataType.UNSIGNED_INT */.g.UNSIGNED_INT,S)}}\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/views/2d/engine/brushes.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nconst w={marker:WGLGeometryBrushMarker_m,line:WGLGeometryBrushLine_m,fill:N,text:WGLGeometryBrushText_m,label:WGLGeometryBrushLabel_m,clip:l,stencil:WGLBrushStencil/* default */.Z,bitmap:d,raster:u,rasterVF:BrushVectorField/* default */.Z,flow:BrushFlow/* default */.Z,tileInfo:WGLBrushInfo/* default */.Z,vtlBackground:WGLBrushVTLBackground_d,vtlFill:m,vtlLine:WGLBrushVTLLine_u,vtlCircle:WGLBrushVTLCircle_l,vtlSymbol:h},G={vtlBackground:WGLBrushVTLBackground_d,vtlFill:m,vtlLine:WGLBrushVTLLine_u,vtlCircle:WGLBrushVTLCircle_l,vtlSymbol:h};\n\n\n//# sourceURL=webpack://reveal-js-testing/./node_modules/@arcgis/core/views/2d/engine/brushes.js_+_14_modules?')},87808:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (/* binding */ i)\n/* harmony export */ });\n/* harmony import */ var _core_maybe_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(61681);\n/* harmony import */ var _webgl_brushes_WGLBrush_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(29316);\n/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(91907);\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nclass i extends _webgl_brushes_WGLBrush_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z{dispose(){}prepareState(e){const{context:t}=e;t.setColorMask(!0,!0,!0,!0),t.setStencilFunction(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__/* .CompareFunction.EQUAL */ .wb.EQUAL,0,255)}draw(t,n){const{context:i}=t,{displayData:o}=n;if((0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_2__/* .isNone */ .Wi)(o))return;if("loaded"===o.state.name&&o.prepareForRendering(i),"attached"!==o.state.name)return;const f=o.state.resources;i.setFaceCullingEnabled(!1),i.setBlendingEnabled(!0),i.setBlendFunctionSeparate(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__/* .BlendFactor.ONE */ .zi.ONE,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__/* .BlendFactor.ONE_MINUS_SRC_ALPHA */ .zi.ONE_MINUS_SRC_ALPHA,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__/* .BlendFactor.ONE */ .zi.ONE,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__/* .BlendFactor.ONE */ .zi.ONE);const d=[];"ramp"===f.values.lineColor.kind&&d.push("vvLineColor"),"ramp"===f.values.lineOpacity.kind&&d.push("vvLineOpacity"),"ramp"===f.values.lineRenderWidth.kind&&d.push("vvLineRenderWidth");const u=t.painter.materialManager.getProgram(t,{vsPath:"raster/flow",fsPath:"raster/flow",attributes:f.locations},d);i.useProgram(u),u.setUniform1f("u_time",t.time/1e3),u.setUniform1f("u_fadeDuration",o.flowStyle.renderSettings.fadeDuration),u.setUniform1f("u_lineSpeed",o.flowStyle.renderSettings.lineSpeed),u.setUniformMatrix3fv("u_dvsMat3",n.transforms.dvs),u.setUniformMatrix3fv("u_displayViewMat3",t.state.displayViewMat3),l(u,"lineColor","vec4",o.flowStyle.renderSettings.lineColor),l(u,"lineOpacity","float",o.flowStyle.renderSettings.lineOpacity),l(u,"lineRenderWidth","float",o.flowStyle.renderSettings.lineRenderWidth),i.bindVAO(f.vertexArray),i.drawElements(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__/* .PrimitiveType.TRIANGLES */ .MX.TRIANGLES,f.indexBuffer.size,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__/* .DataType.UNSIGNED_INT */ .g.UNSIGNED_INT,0),o.flowStyle.animated&&n.requestRender()}}function o(e,t,n,r){switch(t){case"int":e.setUniform1iv(n,r);break;case"float":e.setUniform1fv(n,r);break;case"vec2":e.setUniform2fv(n,r);break;case"vec3":e.setUniform3fv(n,r);break;case"vec4":e.setUniform4fv(n,r)}}function l(e,t,n,r){"constant"===r.kind?o(e,n,`u_${t}`,r.value):(o(e,"float",`u_${t}_stops`,r.stops),o(e,n,`u_${t}_values`,r.values),o(e,"int",`u_${t}_count`,[r.count]))}\n\n\n//# sourceURL=webpack://reveal-js-testing/./node_modules/@arcgis/core/views/2d/engine/flow/BrushFlow.js?')},79195:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (/* binding */ c)\n/* harmony export */ });\n/* harmony import */ var _core_maybe_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(61681);\n/* harmony import */ var _webgl_brushes_WGLBrush_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(29316);\n/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(91907);\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nconst i=new Float32Array([.27058823529411763,.4588235294117647,.7098039215686275,1,.396078431372549,.5372549019607843,.7215686274509804,1,.5176470588235295,.6196078431372549,.7294117647058823,1,.6352941176470588,.7058823529411765,.7411764705882353,1,.7529411764705882,.8,.7450980392156863,1,.8705882352941177,.8901960784313725,.7490196078431373,1,1,1,.7490196078431373,1,1,.8627450980392157,.6313725490196078,1,.9803921568627451,.7254901960784313,.5176470588235295,1,.9607843137254902,.596078431372549,.4117647058823529,1,.9294117647058824,.4588235294117647,.3176470588235294,1,.9098039215686274,.08235294117647059,.08235294117647059,1]),l={beaufort_ft:i,beaufort_m:i,beaufort_km:i,beaufort_mi:i,beaufort_kn:new Float32Array([.1568627450980392,.5725490196078431,.7803921568627451,1,.34901960784313724,.6352941176470588,.7294117647058823,1,.5058823529411764,.7019607843137254,.6705882352941176,1,.6274509803921569,.7607843137254902,.6078431372549019,1,.7490196078431373,.8313725490196079,.5411764705882353,1,.8549019607843137,.9019607843137255,.4666666666666667,1,.9803921568627451,.9803921568627451,.39215686274509803,1,.9882352941176471,.8352941176470589,.3254901960784314,1,.9882352941176471,.7019607843137254,.4,1,.9803921568627451,.5529411764705883,.20392156862745098,1,.9686274509803922,.43137254901960786,.16470588235294117,1,.9411764705882353,.2784313725490196,.11372549019607843,1]),classified_arrow:new Float32Array([.2196078431372549,.6588235294117647,0,1,.5450980392156862,1.2117647058823529,0,1,1,1,0,1,1,.5019607843137255,0,1,1,0,0,1]),ocean_current_m:new Float32Array([.3058823529411765,.10196078431372549,.6,1,.7019607843137254,.10588235294117647,.10196078431372549,1,.792156862745098,.5019607843137255,.10196078431372549,1,.6941176470588235,.6941176470588235,.6941176470588235,1]),ocean_current_kn:new Float32Array([0,0,0,1,0,.1450980392156863,.39215686274509803,1,.3058823529411765,.10196078431372549,.6,1,.592156862745098,0,.39215686274509803,1,.7019607843137254,.10588235294117647,.10196078431372549,1,.6941176470588235,.3058823529411765,.10196078431372549,1,.792156862745098,.5019607843137255,.10196078431372549,1,.6941176470588235,.7019607843137254,.20392156862745098,1,.6941176470588235,.6941176470588235,.6941176470588235,1]),single_arrow:new Float32Array([0,92/255,230/255,1]),wind_speed:new Float32Array([0,0,0,1])};class c extends _webgl_brushes_WGLBrush_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z{constructor(){super(...arguments),this._desc={magdir:{vsPath:"raster/magdir",fsPath:"raster/magdir",attributes:new Map([["a_pos",0],["a_offset",1],["a_vv",2]])},scalar:{vsPath:"raster/scalar",fsPath:"raster/scalar",attributes:new Map([["a_pos",0],["a_offset",1],["a_vv",2]])}}}dispose(){}prepareState({context:e},a){e.setBlendingEnabled(!0),e.setBlendFunctionSeparate(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__/* .BlendFactor.ONE */ .zi.ONE,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__/* .BlendFactor.ONE_MINUS_SRC_ALPHA */ .zi.ONE_MINUS_SRC_ALPHA,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__/* .BlendFactor.ONE */ .zi.ONE,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__/* .BlendFactor.ONE_MINUS_SRC_ALPHA */ .zi.ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilOp(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__/* .StencilOperation.KEEP */ .xS.KEEP,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__/* .StencilOperation.KEEP */ .xS.KEEP,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__/* .StencilOperation.REPLACE */ .xS.REPLACE),e.setStencilFunction(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__/* .CompareFunction.EQUAL */ .wb.EQUAL,a.stencilRef,255)}draw(a,t){if((0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_2__/* .isNone */ .Wi)(t.source)||0===t.source.validPixelCount)return;const{timeline:r}=a;if(r.begin(this.name),t.updateVectorFieldVAO(a),"scalar"===a.renderPass){const e=t.vaoData.scalar;e&&this._drawScalars(a,t,e.vao,e.elementCount)}else{const e=t.vaoData.magdir;e&&this._drawTriangles(a,t,e.vao,e.elementCount)}r.end(this.name)}_drawTriangles(e,a,t,r){const{context:s,painter:i}=e,{symbolizerParameters:c}=a,m=c.dataRange?["dataRange"]:[];"geographic"===c.rotationType&&m.push("rotationGeographic");const d=i.materialManager.getProgram(e,this._desc.magdir,m);s.useProgram(d);const{coordScale:f,opacity:_,transforms:u}=a;d.setUniform2fv("u_coordScale",f),d.setUniform1f("u_opacity",_),d.setUniformMatrix3fv("u_dvsMat3",u.dvs);const{style:g,dataRange:p,rotation:y,symbolPercentRange:b}=c;d.setUniform4fv("u_colors",l[g]||l.single_arrow),d.setUniform2fv("u_dataRange",p),d.setUniform1f("u_rotation",y),d.setUniform2fv("u_symbolPercentRange",b);const S=this._getSymbolSize(e,a);d.setUniform2fv("u_symbolSize",S),s.bindVAO(t),s.drawElements(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__/* .PrimitiveType.TRIANGLES */ .MX.TRIANGLES,r,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__/* .DataType.UNSIGNED_INT */ .g.UNSIGNED_INT,0)}_drawScalars(e,a,t,r){const{context:s,painter:i}=e,{symbolizerParameters:l}=a,c=[];"wind_speed"===l.style?c.push("innerCircle"):l.dataRange&&c.push("dataRange"),"geographic"===l.rotationType&&c.push("rotationGeographic");const m=i.materialManager.getProgram(e,this._desc.scalar,c);s.useProgram(m);const{coordScale:d,opacity:f,transforms:_}=a;m.setUniform2fv("u_coordScale",d),m.setUniform1f("u_opacity",f),m.setUniformMatrix3fv("u_dvsMat3",_.dvs);const{dataRange:u,symbolPercentRange:g}=l;m.setUniform2fv("u_dataRange",u),m.setUniform2fv("u_symbolPercentRange",g);const p=this._getSymbolSize(e,a);m.setUniform2fv("u_symbolSize",p),s.bindVAO(t),s.drawElements(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__/* .PrimitiveType.TRIANGLES */ .MX.TRIANGLES,r,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__/* .DataType.UNSIGNED_INT */ .g.UNSIGNED_INT,0)}_getSymbolSize(e,a){const t=a.key?2**(e.displayLevel-a.key.level):a.resolution/e.state.resolution,{symbolTileSize:r}=a.symbolizerParameters;return[r/(Math.round((a.width-a.offset[0])/r)*r)/t,r/(Math.round((a.height-a.offset[1])/r)*r)/t]}}\n\n\n//# sourceURL=webpack://reveal-js-testing/./node_modules/@arcgis/core/views/2d/engine/imagery/BrushVectorField.js?')},16745:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "br": () => (/* binding */ p),\n/* harmony export */   "qE": () => (/* binding */ T)\n/* harmony export */ });\n/* unused harmony export RasterBitmapWithSource */\n/* harmony import */ var _core_maybe_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(61681);\n/* harmony import */ var _chunks_mat3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1662);\n/* harmony import */ var _chunks_mat3f32_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(19710);\n/* harmony import */ var _chunks_vec2f32_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(55542);\n/* harmony import */ var _layers_support_rasterFunctions_pixelUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(31329);\n/* harmony import */ var _DisplayObject_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(51118);\n/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(91907);\n/* harmony import */ var _webgl_rasterUtils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(10054);\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nconst x={bandCount:3,outMin:0,outMax:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"};class p extends (/* runtime-dependent pure expression or super */ 1987 == __webpack_require__.j ? (_DisplayObject_js__WEBPACK_IMPORTED_MODULE_4__/* .DisplayObject */ .s) : null){constructor(t=null,e=null,r=null){super(),this._textureInvalidated=!0,this._colormapTextureInvalidated=!0,this._supportsBilinearTexture=!0,this.stencilRef=0,this.coordScale=[1,1],this._symbolizerParameters=null,this.height=null,this.isRendereredSource=!1,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this.rawPixelData=null,this._suspended=!1,this._bandIds=null,this._interpolation=null,this._transformGrid=null,this.width=null,this.x=0,this.y=0,this.source=t,this.transformGrid=e,this.interpolation=r}destroy(){const t=this.getTextures();null==t||t.textures.forEach((t=>t.dispose())),this._rasterTexture=null,this._transformGridTexture=null,this._colormapTexture=null}get symbolizerParameters(){return this._symbolizerParameters||x}set symbolizerParameters(t){this._symbolizerParameters!==t&&(this._symbolizerParameters=t,this._colormapTextureInvalidated=!0)}get source(){return this._source}set source(t){this._source!==t&&(this._source=t,this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this.invalidateTexture())}get suspended(){return this._suspended}set suspended(t){this._suspended&&!t&&this.stage&&(this.ready(),this.requestRender()),this._suspended=t}get bandIds(){return this._bandIds}set bandIds(t){this._bandIds=t,this._isBandIdschanged(t)&&this.invalidateTexture()}get interpolation(){return this._interpolation||"nearest"}set interpolation(t){this._interpolation=t,this._rasterTexture&&this._rasterTexture.setSamplingMode("bilinear"===this._getTextureSamplingMethod(t)?_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__/* .TextureSamplingMode.LINEAR */ .cw.LINEAR:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__/* .TextureSamplingMode.NEAREST */ .cw.NEAREST)}get transformGrid(){return this._transformGrid}set transformGrid(t){this._transformGrid=t,this._transformGridTexture&&(this._transformGridTexture.dispose(),this._transformGridTexture=null)}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRender())}_createTransforms(){return{dvs:(0,_chunks_mat3f32_js__WEBPACK_IMPORTED_MODULE_1__.c)()}}setTransform(t){const o=(0,_chunks_mat3_js__WEBPACK_IMPORTED_MODULE_0__.b)(this.transforms.dvs),[n,l]=t.toScreenNoRotation([0,0],[this.x,this.y]),h=this.resolution/this.pixelRatio/t.resolution,d=h*this.width,_=h*this.height,m=Math.PI*this.rotation/180;(0,_chunks_mat3_js__WEBPACK_IMPORTED_MODULE_0__.c)(o,o,(0,_chunks_vec2f32_js__WEBPACK_IMPORTED_MODULE_2__.f)(n,l)),(0,_chunks_mat3_js__WEBPACK_IMPORTED_MODULE_0__.c)(o,o,(0,_chunks_vec2f32_js__WEBPACK_IMPORTED_MODULE_2__.f)(d/2,_/2)),(0,_chunks_mat3_js__WEBPACK_IMPORTED_MODULE_0__.r)(o,o,-m),(0,_chunks_mat3_js__WEBPACK_IMPORTED_MODULE_0__.c)(o,o,(0,_chunks_vec2f32_js__WEBPACK_IMPORTED_MODULE_2__.f)(-d/2,-_/2)),(0,_chunks_mat3_js__WEBPACK_IMPORTED_MODULE_0__.j)(o,o,(0,_chunks_vec2f32_js__WEBPACK_IMPORTED_MODULE_2__.f)(d,_)),(0,_chunks_mat3_js__WEBPACK_IMPORTED_MODULE_0__.m)(this.transforms.dvs,t.displayViewMat3,o)}getTextures(){if(!this._rasterTexture)return null;const t=[],e=[];return this._transformGridTexture&&(e.push(this._transformGridTexture),t.push("u_transformGrid")),this._rasterTexture&&(e.push(this._rasterTexture),t.push("u_image")),this._colormapTexture&&(e.push(this._colormapTexture),t.push("u_colormap")),{names:t,textures:e}}onAttach(){this.invalidateTexture()}onDetach(){this.invalidateTexture()}updateTexture({context:t}){var e,r,s;if(!this.stage)return null==(e=this._rasterTexture)||e.dispose(),null==(r=this._transformGridTexture)||r.dispose(),null==(s=this._colormapTexture)||s.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null,this._transformGridTexture=null,void(this._colormapTexture=null);const i=this._isValidSource(this.source);i&&this._colormapTextureInvalidated&&(this._colormapTextureInvalidated=!1,this._updateColormapTexture(t)),this._textureInvalidated&&(this._textureInvalidated=!1,this._createOrDestroyRasterTexture(t),this._rasterTexture&&(i?this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=(0,_webgl_rasterUtils_js__WEBPACK_IMPORTED_MODULE_6__/* .createTransformTexture */ .Br)(t,this.transformGrid)):this._rasterTexture.setData(null)),this.suspended||(this.ready(),this.requestRender()))}_createOrDestroyRasterTexture(e){var r,s;const i=(0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_7__/* .isSome */ .pC)(this.source)?(0,_layers_support_rasterFunctions_pixelUtils_js__WEBPACK_IMPORTED_MODULE_3__/* .extractBands */ .qF)(this.source,this.bandIds):null;if(!this._isValidSource(i))return void(this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null));const a=!this._isBandIdschanged(this.bandIds);if(this._rasterTexture){if(a)return;this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null}this._supportsBilinearTexture=null==(r=e.capabilities.textureFloat)?void 0:r.textureFloatLinear;const o=this._getTextureSamplingMethod(this.interpolation),u=this.isRendereredSource||!(null!=(s=e.capabilities.textureFloat)&&s.textureFloat);this._rasterTexture=(0,_webgl_rasterUtils_js__WEBPACK_IMPORTED_MODULE_6__/* .createRasterTexture */ .s9)(e,i,o,u),this._rasterTextureBandIds=this.bandIds?[...this.bandIds]:null}_isBandIdschanged(t){const e=this._rasterTextureBandIds;return!(null==e&&null==t||e&&t&&e.join("")===t.join(""))}_isValidSource(e){var r;return (0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_7__/* .isSome */ .pC)(e)&&(null==(r=e.pixels)?void 0:r.length)>0}_getTextureSamplingMethod(e){const{type:r,colormap:s}=this.symbolizerParameters,i="lut"===r||"stretch"===r&&(0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_7__/* .isSome */ .pC)(s);return!this._supportsBilinearTexture||i||"bilinear"!==e&&"cubic"!==e?"nearest":"bilinear"}_updateColormapTexture(t){const e=this._colormap,r=this.symbolizerParameters.colormap;return r?e?r.length!==e.length||r.some(((t,r)=>t!==e[r]))?(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),this._colormapTexture=(0,_webgl_rasterUtils_js__WEBPACK_IMPORTED_MODULE_6__/* .createColormapTexture */ .iC)(t,r),void(this._colormap=r)):void 0:(this._colormapTexture=(0,_webgl_rasterUtils_js__WEBPACK_IMPORTED_MODULE_6__/* .createColormapTexture */ .iC)(t,r),void(this._colormap=r)):(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),void(this._colormap=null))}}class c extends (/* unused pure expression or super */ null && (p)){get source(){return this._source}}function T(e){return (0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_7__/* .isSome */ .pC)(e.source)}\n\n\n//# sourceURL=webpack://reveal-js-testing/./node_modules/@arcgis/core/views/2d/engine/imagery/RasterBitmap.js?')},61296:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "EE": () => (/* binding */ i),\n/* harmony export */   "R": () => (/* binding */ n),\n/* harmony export */   "_5": () => (/* binding */ o),\n/* harmony export */   "aF": () => (/* binding */ l),\n/* harmony export */   "f2": () => (/* binding */ f),\n/* harmony export */   "fD": () => (/* binding */ r),\n/* harmony export */   "fR": () => (/* binding */ a),\n/* harmony export */   "nR": () => (/* binding */ m),\n/* harmony export */   "r1": () => (/* binding */ p),\n/* harmony export */   "vL": () => (/* binding */ u)\n/* harmony export */ });\n/* harmony import */ var _symbols_cim_enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(25609);\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nvar a,i,n,l,u,m,o,r,p;!function(e){e[e.BACKGROUND=0]="BACKGROUND",e[e.FILL=1]="FILL",e[e.LINE=2]="LINE",e[e.SYMBOL=3]="SYMBOL",e[e.CIRCLE=4]="CIRCLE"}(a||(a={})),function(e){e[e.VISIBLE=0]="VISIBLE",e[e.NONE=1]="NONE"}(i||(i={})),function(e){e[e.POINT=0]="POINT",e[e.LINE=1]="LINE",e[e.LINE_CENTER=2]="LINE_CENTER"}(n||(n={})),function(e){e[e.MAP=0]="MAP",e[e.VIEWPORT=1]="VIEWPORT",e[e.AUTO=2]="AUTO"}(l||(l={})),function(e){e[e.AUTO=0]="AUTO",e[e.LEFT=1]="LEFT",e[e.CENTER=2]="CENTER",e[e.RIGHT=3]="RIGHT"}(u||(u={})),function(e){e[e.CENTER=0]="CENTER",e[e.LEFT=1]="LEFT",e[e.RIGHT=2]="RIGHT",e[e.TOP=3]="TOP",e[e.BOTTOM=4]="BOTTOM",e[e.TOP_LEFT=5]="TOP_LEFT",e[e.TOP_RIGHT=6]="TOP_RIGHT",e[e.BOTTOM_LEFT=7]="BOTTOM_LEFT",e[e.BOTTOM_RIGHT=8]="BOTTOM_RIGHT"}(m||(m={})),function(e){e[e.NONE=0]="NONE",e[e.UPPERCASE=1]="UPPERCASE",e[e.LOWERCASE=2]="LOWERCASE"}(o||(o={})),function(e){e[e.MAP=0]="MAP",e[e.VIEWPORT=1]="VIEWPORT"}(r||(r={})),function(e){e[e.HORIZONTAL=0]="HORIZONTAL",e[e.VERTICAL=1]="VERTICAL"}(p||(p={}));class f{}f.backgroundLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:i.VISIBLE}},f.fillLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:i.VISIBLE}},f.lineLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:i.VISIBLE},"line-cap":{type:"enum",values:["butt","round","square"],default:_symbols_cim_enums_js__WEBPACK_IMPORTED_MODULE_0__/* .CapType.BUTT */ .RL.BUTT},"line-join":{type:"enum",values:["bevel","round","miter"],default:_symbols_cim_enums_js__WEBPACK_IMPORTED_MODULE_0__/* .JoinType.MITER */ .AH.MITER},"line-miter-limit":{type:"number",default:2},"line-round-limit":{type:"number",default:1.05}},f.symbolLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:i.VISIBLE},"symbol-avoid-edges":{type:"boolean",default:!1},"symbol-placement":{type:"enum",values:["point","line","line-center"],default:n.POINT},"symbol-sort-key":{type:"number",default:-1},"symbol-spacing":{type:"number",minimum:1,default:250},"icon-allow-overlap":{type:"boolean",default:!1},"icon-anchor":{type:"enum",values:["center","left","right","top","bottom","top-left","top-right","bottom-left","bottom-right"],default:m.CENTER},"icon-ignore-placement":{type:"boolean",default:!1},"icon-image":{type:"string"},"icon-keep-upright":{type:"boolean",default:!1},"icon-offset":{type:"array",value:"number",length:2,default:[0,0]},"icon-optional":{type:"boolean",default:!1},"icon-padding":{type:"number",minimum:0,default:2},"icon-rotate":{type:"number",default:0},"icon-rotation-alignment":{type:"enum",values:["map","viewport","auto"],default:l.AUTO},"icon-size":{type:"number",minimum:0,default:1},"text-allow-overlap":{type:"boolean",default:!1},"text-anchor":{type:"enum",values:["center","left","right","top","bottom","top-left","top-right","bottom-left","bottom-right"],default:m.CENTER},"text-field":{type:"string"},"text-font":{type:"array",value:"string",default:["Open Sans Regular","Arial Unicode MS Regular"]},"text-ignore-placement":{type:"boolean",default:!1},"text-justify":{type:"enum",values:["auto","left","center","right"],default:u.CENTER},"text-keep-upright":{type:"boolean",default:!0},"text-letter-spacing":{type:"number",default:0},"text-line-height":{type:"number",default:1.2},"text-max-angle":{type:"number",minimum:0,default:45},"text-max-width":{type:"number",minimum:0,default:10},"text-offset":{type:"array",value:"number",length:2,default:[0,0]},"text-optional":{type:"boolean",default:!1},"text-padding":{type:"number",minimum:0,default:2},"text-rotate":{type:"number",default:0},"text-rotation-alignment":{type:"enum",values:["map","viewport","auto"],default:l.AUTO},"text-size":{type:"number",minimum:0,default:16},"text-transform":{type:"enum",values:["none","uppercase","lowercase"],default:o.NONE},"text-writing-mode":{type:"array",value:"enum",values:["horizontal","vertical"],default:[p.HORIZONTAL]}},f.circleLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:i.VISIBLE}},f.backgroundPaintDefinition={"background-color":{type:"color",default:[0,0,0,1]},"background-opacity":{type:"number",minimum:0,maximum:1,default:1},"background-pattern":{type:"string"}},f.fillPaintDefinition={"fill-antialias":{type:"boolean",default:!0},"fill-color":{type:"color",default:[0,0,0,1]},"fill-opacity":{type:"number",minimum:0,maximum:1,default:1},"fill-outline-color":{type:"color",default:[0,0,0,0]},"fill-pattern":{type:"string"},"fill-translate":{type:"array",value:"number",length:2,default:[0,0]},"fill-translate-anchor":{type:"enum",values:["map","viewport"],default:r.MAP}},f.linePaintDefinition={"line-blur":{type:"number",minimum:0,default:0},"line-color":{type:"color",default:[0,0,0,1]},"line-dasharray":{type:"array",value:"number",default:[]},"line-gap-width":{type:"number",minimum:0,default:0},"line-offset":{type:"number",default:0},"line-opacity":{type:"number",minimum:0,maximum:1,default:1},"line-pattern":{type:"string"},"line-translate":{type:"array",value:"number",length:2,default:[0,0]},"line-translate-anchor":{type:"enum",values:["map","viewport"],default:r.MAP},"line-width":{type:"number",minimum:0,default:1}},f.symbolPaintDefinition={"icon-color":{type:"color",default:[0,0,0,1]},"icon-halo-blur":{type:"number",minimum:0,default:0},"icon-halo-color":{type:"color",default:[0,0,0,0]},"icon-halo-width":{type:"number",minimum:0,default:0},"icon-opacity":{type:"number",minimum:0,maximum:1,default:1},"icon-translate":{type:"array",value:"number",length:2,default:[0,0]},"icon-translate-anchor":{type:"enum",values:["map","viewport"],default:r.MAP},"text-color":{type:"color",default:[0,0,0,1]},"text-halo-blur":{type:"number",minimum:0,default:0},"text-halo-color":{type:"color",default:[0,0,0,0]},"text-halo-width":{type:"number",minimum:0,default:0},"text-opacity":{type:"number",minimum:0,maximum:1,default:1},"text-translate":{type:"array",value:"number",length:2,default:[0,0]},"text-translate-anchor":{type:"enum",values:["map","viewport"],default:r.MAP}},f.rasterPaintDefinition={"raster-opacity":{type:"number",minimum:0,maximum:1,default:1},"raster-hue-rotate":{type:"number",default:0},"raster-brightness-min":{type:"number",minimum:0,maximum:1,default:0},"raster-brightness-max":{type:"number",minimum:0,maximum:1,default:1},"raster-saturation":{type:"number",minimum:-1,maximum:1,default:0},"raster-contrast":{type:"number",minimum:-1,maximum:1,default:0},"raster-fade-duration":{type:"number",minimum:0,default:300}},f.circlePaintDefinition={"circle-blur":{type:"number",minimum:0,default:0},"circle-color":{type:"color",default:[0,0,0,1]},"circle-opacity":{type:"number",minimum:0,maximum:1,default:1},"circle-radius":{type:"number",minimum:0,default:5},"circle-stroke-color":{type:"color",default:[0,0,0,1]},"circle-stroke-opacity":{type:"number",minimum:0,maximum:1,default:1},"circle-stroke-width":{type:"number",minimum:0,default:0},"circle-translate":{type:"array",value:"number",length:2,default:[0,0]},"circle-translate-anchor":{type:"enum",values:["map","viewport"],default:r.MAP}};\n\n\n//# sourceURL=webpack://reveal-js-testing/./node_modules/@arcgis/core/views/2d/engine/vectorTiles/style/StyleDefinition.js?')},71200:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Or": () => (/* binding */ h),\n/* harmony export */   "k3": () => (/* binding */ P),\n/* harmony export */   "s5": () => (/* binding */ M),\n/* harmony export */   "vX": () => (/* binding */ g)\n/* harmony export */ });\n/* unused harmony exports C_256_TO_RAD, C_2PI, C_DEG_TO_256, C_DEG_TO_RAD, C_INFINITY, C_PI, C_PI_BY_2, C_RAD_TO_256, C_SQRT2, C_SQRT2_INV, interpolate, positiveMod, sqr */\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nconst n=Number.POSITIVE_INFINITY,t=Math.PI,r=2*t,u=t/2,o=128/t,e=t/128,c=256/360,f=t/180,i=1.414213562,I=1/i,N=1/Math.LN2;function a(n,t){return(n%=t)>=0?n:n+t}function h(n){return a(n*o,256)}function M(n){return a(n*c,256)}function P(n){return Math.log(n)*N}function T(n){return n*n}function b(n,t,r){return n*(1-r)+t*r}function g(n,t,r){return n>=t&&n<=r||n>=r&&n<=t}\n\n\n//# sourceURL=webpack://reveal-js-testing/./node_modules/@arcgis/core/views/2d/engine/webgl/GeometryUtils.js?')},86424:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (/* binding */ n)\n/* harmony export */ });\n/* harmony import */ var _webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(78951);\n/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(91907);\n/* harmony import */ var _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(29620);\n/* harmony import */ var _webgl_VertexElementDescriptor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(41163);\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nclass n{constructor(s,n){this.rctx=s,this._vertexBuffer=_webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_0__/* .BufferObject.createVertex */ .f.createVertex(s,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__/* .Usage.STATIC_DRAW */ .l1.STATIC_DRAW,new Uint16Array(n)),this._vao=new _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_2__/* .VertexArrayObject */ .U(s,new Map([["a_position",0]]),{geometry:[new _webgl_VertexElementDescriptor_js__WEBPACK_IMPORTED_MODULE_3__/* .VertexElementDescriptor */ .G("a_position",2,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__/* .DataType.SHORT */ .g.SHORT,0,4)]},{geometry:this._vertexBuffer}),this._count=n.length/2}bind(){this._vao.bind()}unbind(){this._vao.unbind()}dispose(){this._vao.dispose(!1),this._vertexBuffer.dispose()}draw(){this.rctx.bindVAO(this._vao),this.rctx.drawArrays(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__/* .PrimitiveType.TRIANGLE_STRIP */ .MX.TRIANGLE_STRIP,0,this._count)}}\n\n\n//# sourceURL=webpack://reveal-js-testing/./node_modules/@arcgis/core/views/2d/engine/webgl/VertexStream.js?')},29316:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (/* binding */ a)\n/* harmony export */ });\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nclass a{constructor(){this.name=this.constructor.name||"UnnamedBrush"}prepareState(a,r,t){}draw(a,r,t){}drawMany(a,r,t){for(const s of r)this.draw(a,s,t)}}\n\n\n//# sourceURL=webpack://reveal-js-testing/./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js?')},38448:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "Z": () => (/* binding */ p)\n});\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/chunks/vec4f32.js\nvar vec4f32 = __webpack_require__(18916);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/DefaultVertexAttributeLayouts.js\nvar DefaultVertexAttributeLayouts = __webpack_require__(27894);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js\nvar WGLBrush = __webpack_require__(29316);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/BackgroundPrograms.js\nvar BackgroundPrograms = __webpack_require__(96227);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/resolver.js + 1 modules\nvar resolver = __webpack_require__(74580);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/TileInfoPrograms.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nconst TileInfoPrograms_r={shaders:{vertexShader:(0,resolver/* resolveIncludes */.w)("tileInfo/tileInfo.vert"),fragmentShader:(0,resolver/* resolveIncludes */.w)("tileInfo/tileInfo.frag")},attributes:new Map([["a_pos",0]])};\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/webgl/BufferObject.js\nvar BufferObject = __webpack_require__(78951);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/webgl/enums.js\nvar enums = __webpack_require__(91907);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/webgl/ProgramTemplate.js\nvar ProgramTemplate = __webpack_require__(84172);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/webgl/Texture.js\nvar Texture = __webpack_require__(43487);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/webgl/VertexArrayObject.js\nvar VertexArrayObject = __webpack_require__(29620);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushInfo.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nconst A=300,b=32;class p extends WGLBrush/* default */.Z{constructor(){super(...arguments),this._color=(0,vec4f32.f)(1,0,0,1)}dispose(){this._outlineProgram&&(this._outlineProgram.dispose(),this._outlineProgram=null),this._tileInfoProgram&&(this._tileInfoProgram.dispose(),this._tileInfoProgram=null),this._outlineVertexArrayObject&&(this._outlineVertexArrayObject.dispose(),this._outlineVertexArrayObject=null),this._tileInfoVertexArrayObject&&(this._tileInfoVertexArrayObject.dispose(),this._tileInfoVertexArrayObject=null),this._canvas=null}prepareState({context:t}){t.setBlendingEnabled(!0),t.setBlendFunctionSeparate(enums/* BlendFactor.ONE */.zi.ONE,enums/* BlendFactor.ONE_MINUS_SRC_ALPHA */.zi.ONE_MINUS_SRC_ALPHA,enums/* BlendFactor.ONE */.zi.ONE,enums/* BlendFactor.ONE_MINUS_SRC_ALPHA */.zi.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!1)}draw(t,e){const{context:r}=t;if(!e.isReady)return;this._loadWGLResources(r),r.bindVAO(this._outlineVertexArrayObject),r.useProgram(this._outlineProgram),this._outlineProgram.setUniformMatrix3fv("u_dvsMat3",e.transforms.dvs),this._outlineProgram.setUniform2f("u_coord_range",e.rangeX,e.rangeY),this._outlineProgram.setUniform1f("u_depth",0),this._outlineProgram.setUniform4fv("u_color",this._color),r.drawArrays(enums/* PrimitiveType.LINE_STRIP */.MX.LINE_STRIP,0,4);const i=this._getTexture(r,e);i?(r.bindVAO(this._tileInfoVertexArrayObject),r.useProgram(this._tileInfoProgram),r.bindTexture(i,0),this._tileInfoProgram.setUniformMatrix3fv("u_dvsMat3",e.transforms.dvs),this._tileInfoProgram.setUniform1f("u_depth",0),this._tileInfoProgram.setUniform2f("u_coord_ratio",e.rangeX/e.width,e.rangeY/e.height),this._tileInfoProgram.setUniform2f("u_delta",8,8),this._tileInfoProgram.setUniform2f("u_dimensions",i.descriptor.width,i.descriptor.height),r.drawArrays(enums/* PrimitiveType.TRIANGLE_STRIP */.MX.TRIANGLE_STRIP,0,4),r.bindVAO()):r.bindVAO()}_loadWGLResources(t){if(this._outlineProgram&&this._tileInfoProgram)return;const r=(0,ProgramTemplate/* createProgram */.H)(t,BackgroundPrograms/* background */.O),n=(0,ProgramTemplate/* createProgram */.H)(t,TileInfoPrograms_r),a=new Int8Array([0,0,1,0,1,1,0,1]),u=BufferObject/* BufferObject.createVertex */.f.createVertex(t,enums/* Usage.STATIC_DRAW */.l1.STATIC_DRAW,a),_=new VertexArrayObject/* VertexArrayObject */.U(t,BackgroundPrograms/* background.attributes */.O.attributes,DefaultVertexAttributeLayouts/* Pos2b */.sy,{geometry:u}),m=new Int8Array([0,0,1,0,0,1,1,1]),f=BufferObject/* BufferObject.createVertex */.f.createVertex(t,enums/* Usage.STATIC_DRAW */.l1.STATIC_DRAW,m),c=new VertexArrayObject/* VertexArrayObject */.U(t,TileInfoPrograms_r.attributes,DefaultVertexAttributeLayouts/* Pos2b */.sy,{geometry:f});this._outlineProgram=r,this._tileInfoProgram=n,this._outlineVertexArrayObject=_,this._tileInfoVertexArrayObject=c}_getTexture(t,e){if(e.texture&&e.triangleCountReportedInDebug===e.triangleCount)return e.texture;e.triangleCountReportedInDebug=e.triangleCount,this._canvas||(this._canvas=document.createElement("canvas"),this._canvas.setAttribute("id","canvas2d"),this._canvas.setAttribute("width",`${A}`),this._canvas.setAttribute("height",`${b}`),this._canvas.setAttribute("style","display:none"));const r=e.triangleCount;let i=e.key.id;e.triangleCount>0&&(i+=`, ${r}`);const s=this._canvas,o=s.getContext("2d");return o.font="24px sans-serif",o.textAlign="left",o.textBaseline="top",o.clearRect(0,0,A,b),r>1e5?(o.fillStyle="red",o.fillRect(0,0,A,b),o.fillStyle="black"):(o.clearRect(0,0,A,b),o.fillStyle="blue"),o.fillText(i,0,0),e.texture=new Texture/* Texture */.x(t,{target:enums/* TextureType.TEXTURE_2D */.No.TEXTURE_2D,pixelFormat:enums/* PixelFormat.RGBA */.VI.RGBA,dataType:enums/* PixelType.UNSIGNED_BYTE */.Br.UNSIGNED_BYTE,samplingMode:enums/* TextureSamplingMode.NEAREST */.cw.NEAREST,wrapMode:enums/* TextureWrapMode.CLAMP_TO_EDGE */.e8.CLAMP_TO_EDGE},s),e.texture}}\n\n\n//# sourceURL=webpack://reveal-js-testing/./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushInfo.js_+_1_modules?')},22598:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (/* binding */ c)\n/* harmony export */ });\n/* harmony import */ var _chunks_vec4f32_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18916);\n/* harmony import */ var _DefaultVertexAttributeLayouts_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(27894);\n/* harmony import */ var _WGLBrush_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(29316);\n/* harmony import */ var _shaders_BackgroundPrograms_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(96227);\n/* harmony import */ var _webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(78951);\n/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(91907);\n/* harmony import */ var _webgl_ProgramTemplate_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(84172);\n/* harmony import */ var _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(29620);\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nclass c extends _WGLBrush_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z{constructor(){super(...arguments),this._color=(0,_chunks_vec4f32_js__WEBPACK_IMPORTED_MODULE_0__.f)(1,0,0,1),this._initialized=!1}dispose(){this._solidProgram&&(this._solidProgram.dispose(),this._solidProgram=null),this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null)}prepareState({context:t},r){t.setDepthWriteEnabled(!1),t.setDepthTestEnabled(!1),t.setStencilTestEnabled(!0),t.setBlendingEnabled(!1),t.setColorMask(!1,!1,!1,!1),t.setStencilOp(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__/* .StencilOperation.KEEP */ .xS.KEEP,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__/* .StencilOperation.KEEP */ .xS.KEEP,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__/* .StencilOperation.REPLACE */ .xS.REPLACE),t.setStencilWriteMask(255),t.setStencilFunctionSeparate(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__/* .Face.FRONT_AND_BACK */ .LR.FRONT_AND_BACK,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__/* .CompareFunction.GREATER */ .wb.GREATER,r.stencilRef,255)}draw(t,r){const{context:e}=t;this._initialized||this._initialize(e),e.bindVAO(this._solidVertexArrayObject),e.useProgram(this._solidProgram),this._solidProgram.setUniformMatrix3fv("u_dvsMat3",r.transforms.dvs),this._solidProgram.setUniform2fv("u_coord_range",[r.rangeX,r.rangeY]),this._solidProgram.setUniform1f("u_depth",0),this._solidProgram.setUniform4fv("u_color",this._color),e.drawArrays(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__/* .PrimitiveType.TRIANGLE_STRIP */ .MX.TRIANGLE_STRIP,0,4),e.bindVAO()}_initialize(t){if(this._initialized)return!0;const e=(0,_webgl_ProgramTemplate_js__WEBPACK_IMPORTED_MODULE_5__/* .createProgram */ .H)(t,_shaders_BackgroundPrograms_js__WEBPACK_IMPORTED_MODULE_2__/* .background */ .O);if(!e)return!1;const o=new Int8Array([0,0,1,0,0,1,1,1]),a=_webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_3__/* .BufferObject.createVertex */ .f.createVertex(t,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__/* .Usage.STATIC_DRAW */ .l1.STATIC_DRAW,o),n=new _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_6__/* .VertexArrayObject */ .U(t,_shaders_BackgroundPrograms_js__WEBPACK_IMPORTED_MODULE_2__/* .background.attributes */ .O.attributes,_DefaultVertexAttributeLayouts_js__WEBPACK_IMPORTED_MODULE_1__/* .Pos2b */ .sy,{geometry:a});return this._solidProgram=e,this._solidVertexArrayObject=n,this._initialized=!0,!0}}\n\n\n//# sourceURL=webpack://reveal-js-testing/./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushStencil.js?')},96227:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "O": () => (/* binding */ e)\n/* harmony export */ });\n/* harmony import */ var _sources_resolver_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74580);\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nconst e={shaders:{vertexShader:(0,_sources_resolver_js__WEBPACK_IMPORTED_MODULE_0__/* .resolveIncludes */ .w)("background/background.vert"),fragmentShader:(0,_sources_resolver_js__WEBPACK_IMPORTED_MODULE_0__/* .resolveIncludes */ .w)("background/background.frag")},attributes:new Map([["a_pos",0]])};\n\n\n//# sourceURL=webpack://reveal-js-testing/./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/BackgroundPrograms.js?')},74580:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "w": () => (/* binding */ n)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/shaderRepository.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nconst shaderRepository_e={background:{"background.frag":"uniform lowp vec4 u_color;\\nvoid main() {\\ngl_FragColor = u_color;\\n}","background.vert":"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump vec2 u_coord_range;\\nuniform mediump float u_depth;\\nvoid main() {\\nvec3 v_pos = u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\n}"},bitBlit:{"bitBlit.frag":"uniform lowp sampler2D u_tex;\\nuniform lowp float u_opacity;\\nvarying mediump vec2 v_uv;\\nvoid main() {\\nlowp vec4 color = texture2D(u_tex, v_uv);\\ngl_FragColor = color *  u_opacity;\\n}","bitBlit.vert":"attribute vec2 a_pos;\\nattribute vec2 a_tex;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\ngl_Position = vec4(a_pos, 0.0, 1.0);\\nv_uv = a_tex;\\n}"},blend:{"blend.frag":"precision mediump float;\\nuniform sampler2D u_layerTexture;\\nuniform lowp float u_opacity;\\nuniform lowp float u_inFadeOpacity;\\n#ifndef NORMAL\\nuniform sampler2D u_backbufferTexture;\\n#endif\\nvarying mediump vec2 v_uv;\\nfloat rgb2v(in vec3 c) {\\nreturn max(c.x, max(c.y, c.z));\\n}\\nvec3 rgb2hsv(in vec3 c) {\\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\\nfloat d = q.x - min(q.w, q.y);\\nfloat e = 1.0e-10;\\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\\n}\\nvec3 hsv2rgb(in vec3 c) {\\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\nvec3 tint(in vec3 Cb, in vec3 Cs) {\\nfloat vIn = rgb2v(Cb);\\nvec3 hsvTint = rgb2hsv(Cs);\\nvec3 hsvOut = vec3(hsvTint.x, hsvTint.y, vIn * hsvTint.z);\\nreturn hsv2rgb(hsvOut);\\n}\\nfloat overlay(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * (1.0 - 2.0 * (1.0 - Cs ) * (1.0 - Cb)) + step(0.5, Cs) * (2.0 * Cs * Cb);\\n}\\nfloat colorDodge(in float Cb, in float Cs) {\\nreturn (Cb == 0.0) ? 0.0 : (Cs == 1.0) ? 1.0 : min(1.0, Cb / (1.0 - Cs));\\n}\\nfloat colorBurn(in float Cb, in float Cs) {\\nreturn (Cb == 1.0) ? 1.0 : (Cs == 0.0) ? 0.0 : 1.0 - min(1.0, (1.0 - Cb) / Cs);\\n}\\nfloat hardLight(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * (2.0 * Cs * Cb) + step(0.5, Cs) * (1.0 - 2.0 * (1.0 - Cs) * (1.0 - Cb));\\n}\\nfloat reflectBlend(in float Cb, in float Cs) {\\nreturn (Cs == 1.0) ? Cs : min(Cb * Cb / (1.0 - Cs), 1.0);\\n}\\nfloat softLight(in float Cb, in float Cs) {\\nif (Cs <= 0.5) {\\nreturn Cb - (1.0 - 2.0 * Cs) * Cb * (1.0 - Cb);\\n}\\nif (Cb <= 0.25) {\\nreturn Cb + (2.0 * Cs - 1.0) * Cb * ((16.0 * Cb - 12.0) * Cb + 3.0);\\n}\\nreturn Cb + (2.0 * Cs - 1.0) * (sqrt(Cb) - Cb);\\n}\\nfloat vividLight(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * colorBurn(Cb, 2.0 * Cs) + step(0.5, Cs) * colorDodge(Cb, (2.0 * (Cs - 0.5)));\\n}\\nfloat minv3(in vec3 c) {\\nreturn min(min(c.r, c.g), c.b);\\n}\\nfloat maxv3(in vec3 c) {\\nreturn max(max(c.r, c.g), c.b);\\n}\\nfloat lumv3(in vec3 c) {\\nreturn dot(c, vec3(0.3, 0.59, 0.11));\\n}\\nfloat satv3(vec3 c) {\\nreturn maxv3(c) - minv3(c);\\n}\\nvec3 clipColor(vec3 color) {\\nfloat lum = lumv3(color);\\nfloat mincol = minv3(color);\\nfloat maxcol = maxv3(color);\\nif (mincol < 0.0) {\\ncolor = lum + ((color - lum) * lum) / (lum - mincol);\\n}\\nif (maxcol > 1.0) {\\ncolor = lum + ((color - lum) * (1.0 - lum)) / (maxcol - lum);\\n}\\nreturn color;\\n}\\nvec3 setLum(vec3 cbase, vec3 clum) {\\nfloat lbase = lumv3(cbase);\\nfloat llum = lumv3(clum);\\nfloat ldiff = llum - lbase;\\nvec3 color = cbase + vec3(ldiff);\\nreturn clipColor(color);\\n}\\nvec3 setLumSat(vec3 cbase, vec3 csat, vec3 clum)\\n{\\nfloat minbase = minv3(cbase);\\nfloat sbase = satv3(cbase);\\nfloat ssat = satv3(csat);\\nvec3 color;\\nif (sbase > 0.0) {\\ncolor = (cbase - minbase) * ssat / sbase;\\n} else {\\ncolor = vec3(0.0);\\n}\\nreturn setLum(color, clum);\\n}\\nvoid main() {\\nvec4 src = texture2D(u_layerTexture, v_uv);\\n#ifdef NORMAL\\ngl_FragColor = src *  u_opacity;\\n#else\\nvec4 dst = texture2D(u_backbufferTexture, v_uv);\\nvec3 Cs = src.a == 0.0 ? src.rgb : vec3(src.rgb / src.a);\\nvec3 Cb = dst.a == 0.0 ? dst.rgb : vec3(dst.rgb / dst.a);\\nfloat as = u_opacity * src.a;\\nfloat ab = dst.a;\\n#ifdef DESTINATION_OVER\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb, as + ab - as * ab);\\n#endif\\n#ifdef SOURCE_IN\\nvec4 color = vec4(as * Cs * ab, as * ab);\\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\\ngl_FragColor = color + fadeColor;\\n#endif\\n#ifdef DESTINATION_IN\\nvec4 color = vec4(ab * Cb * as, ab * as);\\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\\ngl_FragColor = color + fadeColor;\\n#endif\\n#ifdef SOURCE_OUT\\ngl_FragColor = vec4(as * Cs * (1.0 - ab), as * (1.0 - ab));\\n#endif\\n#ifdef DESTINATION_OUT\\ngl_FragColor = vec4(ab * Cb * (1.0 - as), ab * (1.0 - as));\\n#endif\\n#ifdef SOURCE_ATOP\\ngl_FragColor = vec4(as * Cs * ab + ab * Cb * (1.0 - as), ab);\\n#endif\\n#ifdef DESTINATION_ATOP\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * as, as);\\n#endif\\n#ifdef XOR\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * (1.0 - as),\\nas * (1.0 - ab) + ab * (1.0 - as));\\n#endif\\n#ifdef MULTIPLY\\ngl_FragColor = vec4(as * Cs * ab * Cb + (1.0 - ab) * as * Cs + (1.0 - as) * ab * Cb,\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SCREEN\\ngl_FragColor = vec4((Cs + Cb - Cs * Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef OVERLAY\\nvec3 f = vec3(overlay(Cb.r, Cs.r), overlay(Cb.g, Cs.g), overlay(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef DARKEN\\ngl_FragColor = vec4(min(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef LIGHTER\\ngl_FragColor = vec4(as * Cs + ab * Cb, as + ab);\\n#endif\\n#ifdef LIGHTEN\\ngl_FragColor = vec4(max(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR_DODGE\\nvec3 f = vec3(colorDodge(Cb.r, Cs.r), colorDodge(Cb.g, Cs.g), colorDodge(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR_BURN\\nvec3 f = vec3(colorBurn(Cb.r, Cs.r), colorBurn(Cb.g, Cs.g), colorBurn(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef HARD_LIGHT\\nvec3 f = vec3(hardLight(Cb.r, Cs.r), hardLight(Cb.g, Cs.g), hardLight(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SOFT_LIGHT\\nvec3 f = vec3(softLight(Cb.r, Cs.r), softLight(Cb.g, Cs.g), softLight(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef DIFFERENCE\\ngl_FragColor = vec4(abs(Cb - Cs) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef EXCLUSION\\nvec3 f = Cs + Cb - 2.0 * Cs * Cb;\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef INVERT\\ngl_FragColor = vec4((1.0 - Cb) * as * ab + Cb * ab * (1.0 - as), ab);\\n#endif\\n#ifdef VIVID_LIGHT\\nvec3 f = vec3(vividLight(Cb.r, Cs.r),\\nvividLight(Cb.g, Cs.g),\\nvividLight(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef HUE\\nvec3 f = setLumSat(Cs,Cb,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SATURATION\\nvec3 f = setLumSat(Cb,Cs,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR\\nvec3 f = setLum(Cs,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef LUMINOSITY\\nvec3 f = setLum(Cb,Cs);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef PLUS\\ngl_FragColor = clamp(vec4(src.r + Cb.r, src.g + Cb.g, src.b + Cb.b, as + ab), 0.0, 1.0);\\n#endif\\n#ifdef MINUS\\ngl_FragColor = vec4(clamp(vec3(Cb.r - src.r, Cb.g - src.g, Cb.b - src.b), 0.0, 1.0), ab * as);\\n#endif\\n#ifdef AVERAGE\\nvec3 f = (Cb + Cs) / 2.0;\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef REFLECT\\nvec3 f = vec3(reflectBlend(Cb.r, Cs.r),\\nreflectBlend(Cb.g, Cs.g),\\nreflectBlend(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#endif\\n}","blend.vert":"attribute vec2 a_position;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\ngl_Position = vec4(a_position , 0.0, 1.0);\\nv_uv = (a_position + 1.0) / 2.0;\\n}"},dot:{dot:{"dot.frag":"precision mediump float;\\nvarying vec4 v_color;\\nvarying float v_dotRatio;\\nvarying float v_invEdgeRatio;\\nuniform highp float u_tileZoomFactor;\\nvoid main()\\n{\\nfloat dist = length(gl_PointCoord - vec2(.5, .5)) * 2.;\\nfloat alpha = smoothstep(0., 1., v_invEdgeRatio * (dist - v_dotRatio) + 1.);\\ngl_FragColor = v_color * alpha;\\n}","dot.vert":"precision highp float;\\nattribute vec2 a_pos;\\nuniform sampler2D u_texture;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp float u_tileZoomFactor;\\nuniform highp float u_dotSize;\\nuniform highp float u_pixelRatio;\\nvarying vec2 v_pos;\\nvarying vec4 v_color;\\nvarying float v_dotRatio;\\nvarying float v_invEdgeRatio;\\nconst float EPSILON = 0.000001;\\nvoid main()\\n{\\nmat3 tileToTileTexture = mat3(  1., 0., 0.,\\n0., -1., 0.,\\n0., 1., 1.  );\\nvec3 texCoords = tileToTileTexture * vec3(a_pos.xy / 512., 1.);\\nv_color = texture2D(u_texture, texCoords.xy);\\nfloat smoothEdgeWidth = max(u_dotSize / 2., 1.) ;\\nfloat z = 0.;\\nz += 2.0 * step(v_color.a, EPSILON);\\ngl_PointSize = (smoothEdgeWidth + u_dotSize);\\ngl_Position = vec4((u_dvsMat3 * vec3(a_pos + .5, 1.)).xy, z, 1.);\\nv_dotRatio = u_dotSize / gl_PointSize;\\nv_invEdgeRatio = -1. / ( smoothEdgeWidth / gl_PointSize );\\ngl_PointSize  *= (u_pixelRatio * u_tileZoomFactor);\\n}"}},filtering:{"bicubic.glsl":"vec4 computeWeights(float v) {\\nfloat b = 1.0 / 6.0;\\nfloat v2 = v * v;\\nfloat v3 = v2 * v;\\nfloat w0 = b * (-v3 + 3.0 * v2 - 3.0 * v + 1.0);\\nfloat w1 = b * (3.0 * v3  - 6.0 * v2 + 4.0);\\nfloat w2 = b * (-3.0 * v3 + 3.0 * v2 + 3.0 * v + 1.0);\\nfloat w3 = b * v3;\\nreturn vec4(w0, w1, w2, w3);\\n}\\nvec4 bicubicOffsetsAndWeights(float v) {\\nvec4 w = computeWeights(v);\\nfloat g0 = w.x + w.y;\\nfloat g1 = w.z + w.w;\\nfloat h0 = 1.0 - (w.y / g0) + v;\\nfloat h1 = 1.0 + (w.w / g1) - v;\\nreturn vec4(h0, h1, g0, g1);\\n}\\nvec4 sampleBicubicBSpline(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 eX = vec2(1.0 / texSize.x, 0.0);\\nvec2 eY = vec2(0.0, 1.0 / texSize.y);\\nvec2 texel = coords * texSize - 0.5;\\nvec3 hgX = bicubicOffsetsAndWeights(fract(texel).x).xyz;\\nvec3 hgY = bicubicOffsetsAndWeights(fract(texel).y).xyz;\\nvec2 coords10 = coords + hgX.x * eX;\\nvec2 coords00 = coords - hgX.y * eX;\\nvec2 coords11 = coords10 + hgY.x * eY;\\nvec2 coords01 = coords00 + hgY.x * eY;\\ncoords10 = coords10 - hgY.y * eY;\\ncoords00 = coords00 - hgY.y * eY;\\nvec4 color00 = texture2D(sampler, coords00);\\nvec4 color10 = texture2D(sampler, coords10);\\nvec4 color01 = texture2D(sampler, coords01);\\nvec4 color11 = texture2D(sampler, coords11);\\ncolor00 = mix(color00, color01, hgY.z);\\ncolor10 = mix(color10, color11, hgY.z);\\ncolor00 = mix(color00, color10, hgX.z);\\nreturn color00;\\n}","bilinear.glsl":"vec4 sampleBilinear(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 texelStart = floor(coords * texSize);\\nvec2 coord0 = texelStart / texSize;\\nvec2 coord1 = (texelStart +  vec2(1.0, 0.0)) / texSize;\\nvec2 coord2 = (texelStart +  vec2(0.0, 1.0)) / texSize;\\nvec2 coord3 = (texelStart +  vec2(1.0, 1.0)) / texSize;\\nvec4 color0 = texture2D(sampler, coord0);\\nvec4 color1 = texture2D(sampler, coord1);\\nvec4 color2 = texture2D(sampler, coord2);\\nvec4 color3 = texture2D(sampler, coord3);\\nvec2 blend = fract(coords * texSize);\\nvec4 color01 = mix(color0, color1, blend.x);\\nvec4 color23 = mix(color2, color3, blend.x);\\nvec4 color = mix(color01, color23, blend.y);\\n#ifdef NNEDGE\\nfloat alpha = floor(color0.a * color1.a * color2.a * color3.a + 0.5);\\ncolor = color * alpha + (1.0 - alpha) * texture2D(sampler, coords);\\n#endif\\nreturn color;\\n}","epx.glsl":"vec4 sampleEPX(sampler2D sampler, float size, vec2 coords, vec2 texSize) {\\nvec2 invSize = 1.0 / texSize;\\nvec2 texel = coords * texSize;\\nvec2 texel_i = floor(texel);\\nvec2 texel_frac = fract(texel);\\nvec4 colorP = texture2D(sampler, texel_i * invSize);\\nvec4 colorP1 = vec4(colorP);\\nvec4 colorP2 = vec4(colorP);\\nvec4 colorP3 = vec4(colorP);\\nvec4 colorP4 = vec4(colorP);\\nvec4 colorA = texture2D(sampler, (texel_i - vec2(0.0, 1.0)) * invSize);\\nvec4 colorB = texture2D(sampler, (texel_i + vec2(1.0, 0.0)) * invSize);\\nvec4 colorC = texture2D(sampler, (texel_i - vec2(1.0, 0.0)) * invSize);\\nvec4 colorD = texture2D(sampler, (texel_i + vec2(0.0, 1.0)) * invSize);\\nif (colorC == colorA && colorC != colorD && colorA != colorB) {\\ncolorP1 = colorA;\\n}\\nif (colorA == colorB && colorA != colorC && colorB != colorD) {\\ncolorP2 = colorB;\\n}\\nif (colorD == colorC && colorD != colorB && colorC != colorA) {\\ncolorP3 = colorC;\\n}\\nif (colorB == colorD && colorB != colorA && colorD != colorC) {\\ncolorP4 = colorD;\\n}\\nvec4 colorP12 = mix(colorP1, colorP2, texel_frac.x);\\nvec4 colorP34 = mix(colorP1, colorP2, texel_frac.x);\\nreturn mix(colorP12, colorP34, texel_frac.y);\\n}"},fx:{integrate:{"integrate.frag":"precision mediump float;\\nuniform lowp sampler2D u_sourceTexture;\\nuniform lowp sampler2D u_maskTexture;\\nuniform mediump float u_zoomLevel;\\nuniform highp float u_timeDelta;\\nuniform highp float u_animationTime;\\nvarying highp vec2 v_texcoord;\\n#include <materials/utils.glsl>\\nvoid main()\\n{\\n#ifdef DELTA\\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\\nvec4 data0 = texture2D(u_maskTexture, v_texcoord);\\nfloat flags = data0.r * 255.0;\\nfloat groupMinZoom = data0.g * 255.0;\\nfloat isVisible = getFilterBit(flags, 0);\\nfloat wouldClip = step(groupMinZoom, u_zoomLevel);\\nfloat direction = wouldClip * 1.0 + (1.0 - wouldClip) * -1.0;\\nfloat dt = u_timeDelta / max(u_animationTime, 0.0001);\\nvec4 nextState = vec4(texel + direction * dt);\\ngl_FragColor =  vec4(nextState);\\n#elif defined(UPDATE)\\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\\ngl_FragColor = texel;\\n#endif\\n}","integrate.vert":"precision mediump float;\\nattribute vec2 a_pos;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\\n}"}},highlight:{"blur.frag":"varying mediump vec2 v_texcoord;\\nuniform mediump vec4 u_direction;\\nuniform mediump mat4 u_channelSelector;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_texture;\\nmediump float gauss1(mediump vec2 dir) {\\nreturn exp(-dot(dir, dir) / (2.0 * u_sigma * u_sigma));\\n}\\nmediump vec4 selectChannel(mediump vec4 sample) {\\nreturn u_channelSelector * sample;\\n}\\nvoid accumGauss1(mediump float i, inout mediump float tot, inout mediump float weight) {\\nmediump float w = gauss1(i * u_direction.xy);\\ntot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw))[3] * w;\\nweight += w;\\n}\\nvoid main(void) {\\nmediump float tot = 0.0;\\nmediump float weight = 0.0;\\naccumGauss1(-5.0, tot, weight);\\naccumGauss1(-4.0, tot, weight);\\naccumGauss1(-3.0, tot, weight);\\naccumGauss1(-2.0, tot, weight);\\naccumGauss1(-1.0, tot, weight);\\naccumGauss1(0.0, tot, weight);\\naccumGauss1(1.0, tot, weight);\\naccumGauss1(2.0, tot, weight);\\naccumGauss1(3.0, tot, weight);\\naccumGauss1(4.0, tot, weight);\\naccumGauss1(5.0, tot, weight);\\ngl_FragColor = vec4(0.0, 0.0, 0.0, tot / weight);\\n}","highlight.frag":"varying mediump vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_shade;\\nuniform mediump vec2 u_minMaxDistance;\\nmediump float estimateDistance() {\\nmediump float y = texture2D(u_texture, v_texcoord)[3];\\nconst mediump float y0 = 0.5;\\nmediump float m0 = 1.0 / (sqrt(2.0 * 3.1415) * u_sigma);\\nmediump float d = (y - y0) / m0;\\nreturn d;\\n}\\nmediump vec4 shade(mediump float d) {\\nmediump float mappedDistance = (d - u_minMaxDistance.x) / (u_minMaxDistance.y - u_minMaxDistance.x);\\nmappedDistance = clamp(mappedDistance, 0.0, 1.0);\\nreturn texture2D(u_shade, vec2(mappedDistance, 0.5));\\n}\\nvoid main(void) {\\nmediump float d = estimateDistance();\\ngl_FragColor = shade(d);\\n}","textured.vert":"attribute mediump vec2 a_position;\\nattribute mediump vec2 a_texcoord;\\nvarying mediump vec2 v_texcoord;\\nvoid main(void) {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_texcoord = a_texcoord;\\n}"},magnifier:{"magnifier.frag":"uniform lowp vec4 u_background;\\nuniform mediump sampler2D u_readbackTexture;\\nuniform mediump sampler2D u_maskTexture;\\nuniform mediump sampler2D u_overlayTexture;\\nuniform bool u_maskEnabled;\\nuniform bool u_overlayEnabled;\\nvarying mediump vec2 v_texCoord;\\nconst lowp float barrelFactor = 1.1;\\nlowp vec2 barrel(lowp vec2 uv) {\\nlowp vec2 uvn = uv * 2.0 - 1.0;\\nif (uvn.x == 0.0 && uvn.y == 0.0) {\\nreturn vec2(0.5, 0.5);\\n}\\nlowp float theta = atan(uvn.y, uvn.x);\\nlowp float r = pow(length(uvn), barrelFactor);\\nreturn r * vec2(cos(theta), sin(theta)) * 0.5 + 0.5;\\n}\\nvoid main(void)\\n{\\nlowp vec4 color = texture2D(u_readbackTexture, barrel(v_texCoord));\\ncolor = (color + (1.0 - color.a) * u_background);\\nlowp float mask = u_maskEnabled ? texture2D(u_maskTexture, v_texCoord).a : 1.0;\\ncolor *= mask;\\nlowp vec4 overlayColor = u_overlayEnabled ? texture2D(u_overlayTexture, v_texCoord) : vec4(0);\\ngl_FragColor = overlayColor + (1.0 - overlayColor.a) * color;\\n}","magnifier.vert":"precision mediump float;\\nattribute mediump vec2 a_pos;\\nuniform mediump vec4 u_drawPos;\\nvarying mediump vec2 v_texCoord;\\nvoid main(void)\\n{\\nv_texCoord = a_pos;\\ngl_Position = vec4(u_drawPos.xy + vec2(a_pos - 0.5) * u_drawPos.zw, 0.0, 1.0);\\n}"},materials:{"attributeData.glsl":"uniform highp sampler2D u_attributeData0;\\nuniform highp sampler2D u_attributeData1;\\nuniform highp sampler2D u_attributeData2;\\nuniform highp sampler2D u_attributeData3;\\nuniform highp int u_attributeTextureSize;\\nhighp vec2 getAttributeDataCoords(in highp vec3 id) {\\nhighp vec3  texel = unpackDisplayIdTexel(id);\\nhighp float size = float(u_attributeTextureSize);\\nhighp float u32 = float(int(texel.r) + int(texel.g) * 256 + int(texel.b) * 256 * 256);\\nhighp float col = mod(u32, size);\\nhighp float row = (u32 - col) / size;\\nhighp float u = col / size;\\nhighp float v = row / size;\\nreturn vec2(u, v);\\n}\\nhighp vec2 getAttributeDataTextureCoords(in highp vec3 id) {\\nreturn (getAttributeDataCoords(id) * 2.0) - 1.0 + (.5 / vec2(u_attributeTextureSize));\\n}\\nhighp vec4 getAttributeData0(in highp vec3 id) {\\nvec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData0, coords);\\n}\\nhighp vec4 getAttributeData1(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData1, coords);\\n}\\nhighp vec4 getAttributeData2(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData2, coords);\\n}\\nhighp vec4 getAttributeData3(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData3, coords);\\n}\\nfloat u88VVToFloat(in vec2 v) {\\nbool isMagic = v.x == 255.0 && v.y == 255.0;\\nif (isMagic) {\\nreturn NAN_MAGIC_NUMBER;\\n}\\nreturn (v.x + v.y * float(0x100)) - 32768.0;\\n}","constants.glsl":"const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\\nconst float SIGNED_BYTE_TO_UNSIGNED = 128.0;\\nconst float POSITION_PRECISION = 1.0 / 8.0;\\nconst float FILL_POSITION_PRECISION = 1.0 / 1.0;\\nconst float SOFT_EDGE_RATIO = 1.0;\\nconst float THIN_LINE_WIDTH_FACTOR = 1.1;\\nconst float THIN_LINE_HALF_WIDTH = 1.0;\\nconst float EXTRUDE_SCALE_PLACEMENT_PADDING = 1.0 / 4.0;\\nconst float OFFSET_PRECISION = 1.0 / 8.0;\\nconst float OUTLINE_SCALE = 1.0 / 5.0;\\nconst float SDF_FONT_SIZE = 24.0;\\nconst float MAX_SDF_DISTANCE = 8.0;\\nconst float PLACEMENT_PADDING = 8.0;\\nconst float EPSILON = 0.00001;\\nconst int MAX_FILTER_COUNT = 2;\\nconst int ATTR_VV_SIZE = 0;\\nconst int ATTR_VV_COLOR = 1;\\nconst int ATTR_VV_OPACITY = 2;\\nconst int ATTR_VV_ROTATION = 3;\\nconst highp float NAN_MAGIC_NUMBER = 1e-30;\\nconst int BITSET_GENERIC_LOCK_COLOR = 1;\\nconst int BITSET_MARKER_ALIGNMENT_MAP = 0;\\nconst int BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE = 2;\\nconst int BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY = 3;\\nconst int BITSET_TYPE_FILL_OUTLINE = 0;\\nconst int BITSET_LINE_SCALE_DASH = 2;",fill:{"common.glsl":"#ifdef PATTERN\\nuniform mediump vec2 u_mosaicSize;\\n#endif\\n#ifdef DOT_DENSITY\\nuniform lowp vec4 u_isActive[ 2 ];\\nuniform highp float u_dotValue;\\nuniform highp float u_tileDotsOverArea;\\nuniform highp float u_dotTextureDotCount;\\nuniform mediump float u_tileZoomFactor;\\n#endif\\nvarying highp vec3 v_id;\\nvarying lowp vec4 v_color;\\nvarying lowp float v_opacity;\\nvarying mediump vec4 v_aux1;\\n#ifdef PATTERN\\nvarying mediump vec2 v_tileTextureCoord;\\n#endif\\n#ifdef OUTLINED_FILL\\nvarying lowp float v_isOutline;\\n#endif\\n#ifdef DOT_DENSITY\\nvarying highp vec2 v_dotTextureCoords;\\nvarying highp vec4 v_dotThresholds[ 2 ];\\n#endif","fill.frag":"precision highp float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/fill/common.glsl>\\n#ifdef PATTERN\\nuniform lowp sampler2D u_texture;\\n#endif\\n#ifdef DOT_DENSITY\\nuniform mediump mat4 u_dotColors[ 2 ];\\nuniform sampler2D u_dotTextures[ 2 ];\\nuniform vec4 u_dotBackgroundColor;\\n#endif\\n#ifdef OUTLINED_FILL\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\nlowp vec4 drawLine() {\\nfloat v_lineWidth = v_aux1.x;\\nvec2  v_normal    = v_aux1.yz;\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineWidth,\\nv_opacity,\\nv_id\\n);\\nreturn shadeLine(inputs);\\n}\\n#endif\\nlowp vec4 drawFill() {\\nlowp vec4 out_color = vec4(0.);\\n#ifdef HITTEST\\nout_color = vec4(1.0, 0.0, 0.0, 0.0);\\n#elif defined(PATTERN)\\nmediump vec4 v_tlbr = v_aux1;\\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\\nlowp vec4 color = texture2D(u_texture, samplePos);\\nout_color = v_opacity * v_color * color;\\n#elif defined(DOT_DENSITY) && !defined(HIGHLIGHT)\\nvec4 textureThresholds0 = texture2D(u_dotTextures[0], v_dotTextureCoords);\\nvec4 textureThresholds1 = texture2D(u_dotTextures[1], v_dotTextureCoords);\\nvec4 difference0 = v_dotThresholds[0] - textureThresholds0;\\nvec4 difference1 = v_dotThresholds[1] - textureThresholds1;\\n#ifdef DD_DOT_BLENDING\\nvec4 isPositive0 = step(0.0, difference0);\\nvec4 isPositive1 = step(0.0, difference1);\\nfloat weightSum = dot(isPositive0, difference0) + dot(isPositive1, difference1);\\nfloat lessThanEqZero = step(weightSum, 0.0);\\nfloat greaterThanZero = 1.0 - lessThanEqZero ;\\nfloat divisor = (weightSum + lessThanEqZero);\\nvec4 weights0 = difference0 * isPositive0 / divisor;\\nvec4 weights1 = difference1 * isPositive1 / divisor;\\nvec4 dotColor = u_dotColors[0] * weights0 + u_dotColors[1] * weights1;\\nvec4 preEffectColor = greaterThanZero * dotColor + lessThanEqZero * u_dotBackgroundColor;\\n#else\\nfloat diffMax = max(max4(difference0), max4(difference1));\\nfloat lessThanZero = step(diffMax, 0.0);\\nfloat greaterOrEqZero = 1.0 - lessThanZero;\\nvec4 isMax0 = step(diffMax, difference0);\\nvec4 isMax1 = step(diffMax, difference1);\\nvec4 dotColor = u_dotColors[0] * isMax0 + u_dotColors[1] * isMax1;\\nvec4 preEffectColor = greaterOrEqZero * dotColor + lessThanZero * u_dotBackgroundColor;\\n#endif\\nout_color = preEffectColor;\\n#else\\nout_color = v_opacity * v_color;\\n#endif\\n#ifdef HIGHLIGHT\\nout_color.a = 1.0;\\n#endif\\nreturn out_color;\\n}\\nvoid main() {\\n#ifdef OUTLINED_FILL\\nif (v_isOutline > 0.5) {\\ngl_FragColor = drawLine();\\n} else {\\ngl_FragColor = drawFill();\\n}\\n#else\\ngl_FragColor = drawFill();\\n#endif\\n}","fill.vert":"#define PACKED_LINE\\nprecision highp float;\\nattribute float a_bitset;\\n#ifdef DOT_DENSITY\\nattribute float a_inverseArea;\\nvec4 a_color = vec4(0.0, 0.0, 0.0, 1.0);\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#else\\nattribute vec4 a_color;\\nattribute vec4 a_aux2;\\nattribute vec4 a_aux3;\\n#ifndef SIMPLE\\nattribute vec4 a_aux1;\\nattribute vec2 a_zoomRange;\\n#else\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#endif\\n#endif\\nuniform vec2 u_tileOffset;\\n#include <materials/vcommon.glsl>\\n#include <materials/fill/common.glsl>\\n#include <materials/fill/hittest.glsl>\\n#ifdef DOT_DENSITY\\nvec4 dotThreshold(vec4 featureAttrOverFeatureArea, float dotValue, float tileDotsOverArea) {\\nreturn featureAttrOverFeatureArea * (1.0 / dotValue)  * (1.0 / tileDotsOverArea);\\n}\\n#endif\\n#ifdef OUTLINED_FILL\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\nvoid drawLine(out lowp vec4 out_color, out highp vec3 out_pos) {\\nLineData outputs = buildLine(\\nout_pos,\\na_id,\\na_pos,\\na_color,\\n(a_aux3.xy - 128.) / 16.,\\n(a_aux3.zw - 128.) / 16.,\\n0.,\\na_aux2.z / 16.,\\na_bitset,\\nvec4(0.),\\nvec2(0.),\\na_aux2.w / 16.\\n);\\nv_id      = outputs.id;\\nv_color   = outputs.color;\\nv_opacity = outputs.opacity;\\nv_aux1    = vec4(outputs.lineHalfWidth, outputs.normal, 0.);\\nout_color = outputs.color;\\n}\\n#endif\\nvoid drawFill(out lowp vec4 out_color, out highp vec3 out_pos) {\\nfloat a_bitSet = a_bitset;\\nv_color = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\nout_color = v_color;\\n#ifdef DOT_DENSITY\\nmat3 tileToTileNormalized = mat3(  2. / 512.,  0.,  0.,\\n0., -2. / 512.,  0.,\\n-1.,  1.,  1.  );\\nout_pos   = tileToTileNormalized * vec3((a_pos * FILL_POSITION_PRECISION), 1.);\\n#else\\nout_pos   = u_dvsMat3 * vec3(a_pos * FILL_POSITION_PRECISION, 1.);\\n#endif\\n#ifdef PATTERN\\nvec4  a_tlbr   = a_aux1;\\nfloat a_width  = a_aux2.x;\\nfloat a_height = a_aux2.y;\\nvec2  a_offset = a_aux2.zw;\\nvec2  a_scale  = a_aux3.xy;\\nfloat a_angle  = a_aux3.z;\\nvec2 scale = (1.0 / SIGNED_BYTE_TO_UNSIGNED) * a_scale;\\nfloat width = u_pixelRatio * u_zoomFactor * a_width * scale.x;\\nfloat height = u_pixelRatio * u_zoomFactor * a_height * scale.y;\\nfloat angle = C_256_TO_RAD * a_angle;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nmat3 patternMatrix = mat3(cosA / width, sinA / height, 0,\\n-sinA / width, cosA / height, 0,\\n0,            0,             1);\\nvec2 tileOffset = vec2(u_tileOffset.x * cosA - u_tileOffset.y * sinA, u_tileOffset.x * sinA + u_tileOffset.y * cosA);\\ntileOffset = mod(tileOffset, vec2(a_aux2.x, a_aux2.y));\\nvec2 symbolOffset = (a_offset - tileOffset - SIGNED_BYTE_TO_UNSIGNED) / vec2(width, height);\\nv_tileTextureCoord = (patternMatrix * vec3(a_pos * FILL_POSITION_PRECISION, 1.0)).xy - symbolOffset;\\nv_aux1 = a_tlbr / u_mosaicSize.xyxy;\\n#elif defined(DOT_DENSITY)\\nvec4 ddAttributeData0 = getAttributeData2(a_id) * u_isActive[0] * a_inverseArea;\\nvec4 ddAttributeData1 = getAttributeData3(a_id) * u_isActive[1] * a_inverseArea;\\nfloat size = u_tileZoomFactor * 512.0 * 1.0 / u_pixelRatio;\\nv_dotThresholds[0] = dotThreshold(ddAttributeData0, u_dotValue, u_tileDotsOverArea);\\nv_dotThresholds[1] = dotThreshold(ddAttributeData1, u_dotValue, u_tileDotsOverArea);\\nv_dotTextureCoords = (a_pos * FILL_POSITION_PRECISION + 0.5) / size;\\n#endif\\n}\\n#ifdef HITTEST\\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\\n#ifdef OUTLINED_FILL\\nif (getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE) > 0.5) {\\nout_pos = vec3(0., 0., 2.);\\nreturn;\\n}\\n#endif\\nout_pos = hittestFill();\\ngl_PointSize = 1.0;\\n}\\n#elif defined(OUTLINED_FILL)\\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\\nv_isOutline = getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE);\\nif (v_isOutline > 0.5) {\\ndrawLine(out_color, out_pos);\\n} else {\\ndrawFill(out_color, out_pos);\\n}\\n}\\n#else\\n#define draw drawFill\\n#endif\\nvoid main()\\n{\\nINIT;\\nlowp vec4 color = vec4(0.);\\nhighp vec3 pos  = vec3(0.);\\ndraw(color, pos);\\ngl_Position = vec4(clip(color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}","hittest.glsl":"#include <materials/hittest/common.glsl>\\n#ifdef HITTEST\\nattribute vec2 a_pos1;\\nattribute vec2 a_pos2;\\nconst float EPSILON_PARALLEL = 0.05;\\nbool hasSameSide(vec3 p0, vec3 p1, vec3 a, vec3 b) {\\nvec3 cp0 = cross(b - a, p0 - a);\\nvec3 cp1 = cross(b - a, p1 - a);\\nreturn dot(cp0, cp1) >= 0.;\\n}\\nbool intersectPointTriangle(vec3 p, vec3 a, vec3 b, vec3 c) {\\nreturn hasSameSide(p, a, b, c) && hasSameSide(p, b, a, c) && hasSameSide(p, c, a, b);\\n}\\nbool intersectCircleTriange(vec3 p, vec3 a, vec3 b, vec3 c, float radius) {\\nvec2 ba = b.xy - a.xy;\\nvec2 ca = c.xy - a.xy;\\nfloat crossProduct = ba.x * ca.y - ca.x * ba.y;\\nbool isParallel = crossProduct < EPSILON_PARALLEL && crossProduct > -EPSILON_PARALLEL;\\nif (isParallel) {\\nreturn false;\\n}\\nif (distance(p, a) <= radius) {\\nreturn true;\\n}\\nif (distance(p, b) <= radius) {\\nreturn true;\\n}\\nif (distance(p, c) <= radius) {\\nreturn true;\\n}\\nvec3 p0 = p - normalize(p - a) * radius;\\nif (intersectPointTriangle(p0, a, b, c)) {\\nreturn true;\\n}\\nvec3 p1 = p - normalize(p - b) * radius;\\nif (intersectPointTriangle(p1, a, b, c)) {\\nreturn true;\\n}\\nvec3 p2 = p - normalize(p - c) * radius;\\nreturn intersectPointTriangle(p2, a, b, c);\\n}\\nvec3 hittestFill() {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * FILL_POSITION_PRECISION, 1.);\\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * FILL_POSITION_PRECISION, 1.);\\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * FILL_POSITION_PRECISION, 1.);\\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nvec3  hittestPos = vec3(u_hittestPos, 1.);\\nfloat hittestDist = u_hittestDist;\\nif (!intersectCircleTriange(hittestPos, pos, pos1, pos2, hittestDist)) {\\noutTextureCoords.z += 2.0;\\n}\\nreturn outTextureCoords;\\n}\\n#endif"},hittest:{"common.glsl":"#ifdef HITTEST\\nuniform float u_hittestDist;\\nuniform highp vec2 u_hittestPos;\\n#endif"},icon:{"common.glsl":"uniform lowp vec2 u_mosaicSize;\\nvarying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying highp vec4 v_sizeTex;\\nvarying mediump vec3 v_pos;\\nvarying highp float v_filters;\\nvarying lowp float v_opacity;\\n#ifdef SDF\\nvarying lowp vec4 v_outlineColor;\\nvarying mediump float v_outlineWidth;\\nvarying mediump float v_distRatio;\\nvarying mediump float v_overridingOutlineColor;\\nvarying mediump float v_isThin;\\n#endif","hittest.glsl":"#include <materials/hittest/common.glsl>\\n#ifdef HITTEST\\nvec3 hittestMarker(vec2 size) {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * POSITION_PRECISION, 1.);\\nvec3  hittestPos = vec3(u_hittestPos, 1.);\\nfloat hittestDist = u_hittestDist;\\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nfloat maxHalfSize = max(size.x, size.y) / 2.;\\nif (distance(pos, hittestPos) - maxHalfSize > hittestDist) {\\noutTextureCoords.z += 2.0;\\n}\\nreturn outTextureCoords;\\n}\\n#endif","icon.frag":"precision mediump float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <util/encoding.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/icon/common.glsl>\\nuniform lowp sampler2D u_texture;\\n#ifdef HITTEST\\nvec4 getColor() {\\nreturn vec4(1.);\\n}\\n#elif defined(SDF)\\nvec4 getColor() {\\nvec2 v_size = v_sizeTex.xy;\\nvec2 v_tex  = v_sizeTex.zw;\\nlowp vec4 fillPixelColor = v_color;\\nfloat d = 0.5 - rgba2float(texture2D(u_texture, v_tex));\\nfloat size = max(v_size.x, v_size.y);\\nfloat dist = d * size * SOFT_EDGE_RATIO * v_distRatio;\\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\\nfloat outlineWidth = v_outlineWidth;\\n#ifdef HIGHLIGHT\\noutlineWidth = max(outlineWidth, 4.0 * v_isThin);\\n#endif\\nif (outlineWidth > 0.25) {\\nlowp vec4 outlinePixelColor = v_overridingOutlineColor * v_color + (1.0 - v_overridingOutlineColor) * v_outlineColor;\\nfloat clampedOutlineSize = min(outlineWidth, size);\\noutlinePixelColor *= clamp(0.5 - abs(dist) + clampedOutlineSize * 0.5, 0.0, 1.0);\\nreturn v_opacity * ((1.0 - outlinePixelColor.a) * fillPixelColor + outlinePixelColor);\\n}\\nreturn v_opacity * fillPixelColor;\\n}\\n#else\\nvec4 getColor() {\\nvec2 v_tex  = v_sizeTex.zw;\\nlowp vec4 texColor = texture2D(u_texture, v_tex);\\nreturn v_opacity * texColor * v_color;\\n}\\n#endif\\nvoid main()\\n{\\nvec4 color = getColor();\\n#ifdef HIGHLIGHT\\ncolor.a = step(1.0 / 255.0, color.a);\\n#endif\\ngl_FragColor = color;\\n}","icon.vert":"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_outlineColor;\\nattribute vec4 a_sizeAndOutlineWidth;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nattribute vec2 a_bitSetAndDistRatio;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/icon/common.glsl>\\n#include <materials/icon/hittest.glsl>\\nvec2 getMarkerSize(inout vec2 offset, inout vec2 baseSize, inout float outlineSize, in float referenceSize, in float bitSet) {\\nvec2 outSize = baseSize;\\n#ifdef VV_SIZE\\nfloat r = getSize(referenceSize) / referenceSize;\\noutSize.xy *= r;\\noffset.xy *= r;\\nfloat scaleSymbolProportionally = getBit(bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\\noutlineSize *= scaleSymbolProportionally * (r - 1.0) + 1.0;\\n#endif\\nreturn outSize;\\n}\\nvec3 getOffset(in vec2 in_offset, float a_bitSet) {\\nfloat isMapAligned = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\\nvec3  offset       = getRotation() * vec3(in_offset, 0.0);\\nreturn getMatrix(isMapAligned) * offset;\\n}\\nvoid main()\\n{\\nINIT;\\nvec2  a_size   = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\\nvec2  a_offset = a_vertexOffset / 16.0;\\nfloat a_outlineSize = a_sizeAndOutlineWidth.z * a_sizeAndOutlineWidth.z / 128.0;\\nfloat a_bitSet = a_bitSetAndDistRatio.x;\\nvec2 v_size = getMarkerSize(a_offset, a_size, a_outlineSize, a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0, a_bitSet);\\nvec2 v_tex      = a_texCoords / u_mosaicSize;\\nv_color    = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity  = getOpacity();\\nv_id       = norm(a_id);\\nv_filters  = getFilterFlags();\\nv_pos      = u_dvsMat3 * vec3(a_pos * POSITION_PRECISION, 1.0) + getOffset(a_offset, a_bitSet);\\nv_sizeTex  = vec4(v_size.xy, v_tex.xy);\\n#ifdef SDF\\nv_isThin   = getBit(a_bitSet, BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE);\\n#ifdef VV_COLOR\\nv_overridingOutlineColor = v_isThin;\\n#else\\nv_overridingOutlineColor = 0.0;\\n#endif\\nv_outlineWidth = min(a_outlineSize, max(max(v_size.x, v_size.y) - 0.99, 0.0));\\nv_outlineColor = a_outlineColor;\\nv_distRatio = a_bitSetAndDistRatio.y / 126.0;\\n#endif\\n#ifdef HITTEST\\nvec3 pos = hittestMarker(v_size.xy);\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, pos, v_filters, a_zoomRange), 1.0);\\n#else\\ngl_Position = vec4(clip(v_color, v_pos, v_filters, a_zoomRange), 1.0);\\n#endif\\n}"},label:{"common.glsl":"uniform mediump float u_zoomLevel;\\nuniform mediump float u_mapRotation;\\nuniform mediump float u_mapAligned;\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying mediump vec2 v_tex;\\nvarying mediump vec4 v_color;\\nvarying lowp vec4 v_animation;","label.frag":"#include <materials/text/text.frag>","label.vert":"precision highp float;\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texAndSize;\\nattribute vec4 a_refSymbolAndPlacementOffset;\\nattribute vec4 a_glyphData;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHalo;\\nuniform float u_mapRotation;\\nuniform float u_mapAligned;\\nfloat getZ(in float minZoom, in float maxZoom, in float angle) {\\nfloat glyphAngle = angle * 360.0 / 254.0;\\nfloat mapAngle = u_mapRotation * 360.0 / 254.0;\\nfloat diffAngle = min(360.0 - abs(mapAngle - glyphAngle), abs(mapAngle - glyphAngle));\\nfloat z = 0.0;\\nz += u_mapAligned * (2.0 * (1.0 - step(minZoom, u_currentZoom)));\\nz += u_mapAligned * 2.0 * step(90.0, diffAngle);\\nz += 2.0 * (1.0 - step(u_currentZoom, maxZoom));\\nreturn z;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat groupMinZoom    = getMinZoom();\\nfloat glyphMinZoom    = a_glyphData.x;\\nfloat glyphMaxZoom    = a_glyphData.y;\\nfloat glyphAngle      = a_glyphData.z;\\nfloat a_minZoom          = max(groupMinZoom, glyphMinZoom);\\nfloat a_placementPadding = a_refSymbolAndPlacementOffset.x * EXTRUDE_SCALE_PLACEMENT_PADDING;\\nvec2  a_placementDir     = unpack_u8_nf32(a_refSymbolAndPlacementOffset.zw);\\nfloat a_refSymbolSize    = a_refSymbolAndPlacementOffset.y;\\nfloat fontSize           = a_texAndSize.z;\\nfloat haloSize           = a_texAndSize.w * OUTLINE_SCALE;\\nvec2  vertexOffset = a_vertexOffset * OFFSET_PRECISION;\\nvec3  pos          = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat z            = getZ(a_minZoom, glyphMaxZoom, glyphAngle);\\nfloat fontScale    = fontSize / SDF_FONT_SIZE;\\nfloat halfSize     = getSize(a_refSymbolSize) / 2.0;\\nfloat animation    = pow(getAnimationState(), vec4(2.0)).r;\\nv_color     = animation * ((1.0 - u_isHalo) * a_color + (u_isHalo * a_haloColor));\\nv_opacity   = 1.0;\\nv_tex       = a_texCoords / u_mosaicSize;\\nv_edgeDistanceOffset = u_isHalo * haloSize / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\nvec2 placementOffset = a_placementDir * (halfSize + a_placementPadding);\\nvec3 glyphOffset     = u_displayMat3 * vec3(vertexOffset + placementOffset, 0.0);\\nvec3 v_pos           = vec3((u_dvsMat3 * pos + glyphOffset).xy, z);\\ngl_Position = vec4(v_pos, 1.0);\\n#ifdef DEBUG\\nv_color = vec4(a_color.rgb, z == 0.0 ? 1.0 : 0.645);\\n#endif\\n}"},line:{"common.glsl":"varying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying mediump vec2 v_normal;\\nvarying mediump float v_lineHalfWidth;\\nvarying lowp float v_opacity;\\n#ifdef PATTERN\\nvarying mediump vec4 v_tlbr;\\nvarying mediump vec2 v_patternSize;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nvarying highp float v_accumulatedDistance;\\n#endif\\n#ifdef SDF\\nvarying mediump float v_lineWidthRatio;\\n#endif","hittest.glsl":"#include <materials/hittest/common.glsl>\\n#ifdef HITTEST\\nattribute vec2 a_pos1;\\nattribute vec2 a_pos2;\\nbool intersectCircleLineInner(vec3 p, vec3 a, vec3 b, float radius) {\\nvec3 v0 = a - p;\\nvec3 b2 = b - p;\\nvec3 v  = b2 - v0;\\nfloat D = 4. * dot(v0, v) * dot(v0, v) - 4. * dot(v, v) * ( dot(v0, v0) - radius * radius );\\nif (D < 0.) {\\nreturn false;\\n}\\nfloat sqrtD = sqrt(D);\\nfloat t0 = (-2. * dot(v0, v) + sqrtD) / (2. * dot(v, v));\\nfloat t1 = (-2. * dot(v0, v) - sqrtD) / (2. * dot(v, v));\\nreturn ((t0 >= 0. && t0 <= 1.) || (t1 >= 0. && t1 <= 1.));\\n}\\nbool intersectCircleLine(vec3 p, vec3 a, vec3 b, vec3 c, float radius) {\\nreturn intersectCircleLineInner(p, a, b, radius) || intersectCircleLineInner(p, b, c, radius);\\n}\\nvec3 hittestLine(float halfWidth) {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * POSITION_PRECISION, 1.);\\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * POSITION_PRECISION, 1.);\\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * POSITION_PRECISION, 1.);\\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nvec3  hittestPos = vec3(u_hittestPos, 1.);\\nfloat hittestDist = u_hittestDist;\\nif (!intersectCircleLine(hittestPos, pos, pos1, pos2, hittestDist + halfWidth)) {\\noutTextureCoords.z += 2.0;\\n}\\nreturn outTextureCoords;\\n}\\n#endif","line.frag":"precision lowp float;\\n#include <util/encoding.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\n#ifdef HITTEST\\nvoid main() {\\ngl_FragColor = vec4(1.);\\n}\\n#else\\nvoid main() {\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineHalfWidth,\\nv_opacity,\\n#ifndef OUTLINED_FILL\\n#ifdef PATTERN\\nv_tlbr,\\nv_patternSize,\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance,\\n#endif\\n#endif\\nv_id\\n);\\ngl_FragColor = shadeLine(inputs);\\n}\\n#endif","line.vert":"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_offsetAndNormal;\\nattribute vec2 a_accumulatedDistanceAndHalfWidth;\\nattribute vec4 a_tlbr;\\nattribute vec4 a_segmentDirection;\\nattribute vec2 a_aux;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/line/hittest.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\n#ifdef HITTEST\\nvoid draw() {\\nfloat aa        = 0.5 * u_antialiasing;\\nfloat a_halfWidth = a_accumulatedDistanceAndHalfWidth.y / 16.;\\nfloat a_cimHalfWidth = a_aux.x / 16. ;\\nvec2  a_offset = a_offsetAndNormal.xy / 16.;\\nfloat baseWidth = getBaseLineHalfWidth(a_halfWidth, a_cimHalfWidth);\\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\\ngl_PointSize = 1.;\\nvec3 pos = hittestLine(halfWidth);\\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\\n#else\\nvoid draw()\\n{\\nhighp vec3 pos = vec3(0.);\\nLineData outputs = buildLine(\\npos,\\na_id,\\na_pos,\\na_color,\\na_offsetAndNormal.xy / 16.,\\na_offsetAndNormal.zw / 16.,\\na_accumulatedDistanceAndHalfWidth.x,\\na_accumulatedDistanceAndHalfWidth.y / 16.,\\na_segmentDirection.w,\\na_tlbr,\\na_segmentDirection.xy / 16.,\\na_aux.x / 16.\\n);\\nv_id              = outputs.id;\\nv_color           = outputs.color;\\nv_normal          = outputs.normal;\\nv_lineHalfWidth   = outputs.lineHalfWidth;\\nv_opacity         = outputs.opacity;\\n#ifndef OUTLINED_FILL\\n#ifdef PATTERN\\nv_tlbr          = outputs.tlbr;\\nv_patternSize   = outputs.patternSize;\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio = outputs.lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance = outputs.accumulatedDistance;\\n#endif\\n#endif\\ngl_Position = vec4(clip(outputs.color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\\n#endif\\nvoid main() {\\nINIT;\\ndraw();\\n}"},shared:{line:{"common.glsl":"#if !defined(OUTLINED_FILL) && defined(PATTERN)\\nuniform mediump vec2 u_mosaicSize;\\n#endif\\nstruct LineData {\\nlowp vec4 color;\\nmediump vec2 normal;\\nmediump float lineHalfWidth;\\nlowp float opacity;\\n#ifndef OUTLINED_FILL\\n#ifdef PATTERN\\nmediump vec4 tlbr;\\nmediump vec2 patternSize;\\n#endif\\n#ifdef SDF\\nmediump float lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nhighp float accumulatedDistance;\\n#endif\\n#endif\\nhighp vec3 id;\\n};","line.frag":"uniform lowp float u_blur;\\n#if !defined(OUTLINED_FILL) && !defined(HIGHLIGHT)\\n#if defined(PATTERN) || defined(SDF)\\nuniform sampler2D u_texture;\\nuniform highp float u_pixelRatio;\\n#endif\\n#endif\\n#if defined(SDF) && !defined(HIGHLIGHT) && !defined(OUTLINED_FILL)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * line.lineWidthRatio;\\nmediump float relativeTexX = fract(u_pixelRatio * line.accumulatedDistance / adjustedPatternWidth);\\nmediump float relativeTexY = 0.5 + 0.25 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\\nfloat dist = d * line.lineHalfWidth;\\nreturn line.opacity * clamp(0.5 - dist, 0.0, 1.0) * line.color;\\n}\\n#elif defined(PATTERN) && !defined(HIGHLIGHT) && !defined(OUTLINED_FILL)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float lineHalfWidth = line.lineHalfWidth;\\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * lineHalfWidth / line.patternSize.y;\\nmediump float relativeTexX = fract(u_pixelRatio * line.accumulatedDistance / adjustedPatternWidth);\\nmediump float relativeTexY = 0.5 + 0.5 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexY, relativeTexX));\\nlowp vec4 color = texture2D(u_texture, texCoord);\\nreturn line.opacity * line.color * color;\\n}\\n#else\\nlowp vec4 getLineColor(LineData line) {\\nreturn line.opacity * line.color;\\n}\\n#endif\\nvec4 shadeLine(LineData line)\\n{\\nmediump float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(line.lineHalfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nmediump float fragDist = length(line.normal) * line.lineHalfWidth;\\nlowp float alpha = clamp(thinLineFactor * (line.lineHalfWidth - fragDist) / (u_blur + thinLineFactor - 1.0), 0.0, 1.0);\\nlowp vec4 out_color = getLineColor(line) * alpha;\\n#ifdef HIGHLIGHT\\nout_color.a = step(1.0 / 255.0, out_color.a);\\n#endif\\n#ifdef ID\\nif (out_color.a < 1.0 / 255.0) {\\ndiscard;\\n}\\nout_color = vec4(line.id, 0.0);\\n#endif\\nreturn out_color;\\n}","line.vert":"float getBaseLineHalfWidth(in float lineHalfWidth, in float referenceHalfWidth) {\\n#ifdef VV_SIZE\\nfloat refLineWidth = 2.0 * referenceHalfWidth;\\nreturn 0.5 * (lineHalfWidth / referenceHalfWidth) * getSize(refLineWidth);\\n#else\\nreturn lineHalfWidth;\\n#endif\\n}\\nfloat getLineHalfWidth(in float baseWidth, in float aa) {\\nfloat halfWidth = max(baseWidth + aa, 0.45) + 0.1 * aa;\\n#ifdef HIGHLIGHT\\nhalfWidth = max(halfWidth, 2.0);\\n#endif\\nreturn halfWidth;\\n}\\nvec2 getDist(in vec2 offset, in float halfWidth) {\\nfloat thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(halfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nreturn thinLineFactor * halfWidth * offset;\\n}\\nLineData buildLine(\\nout vec3 out_pos,\\nin vec3 in_id,\\nin vec2 in_pos,\\nin vec4 in_color,\\nin vec2 in_offset,\\nin vec2 in_normal,\\nin float in_accumulatedDist,\\nin float in_lineHalfWidth,\\nin float in_bitSet,\\nin vec4 in_tlbr,\\nin vec2 in_segmentDirection,\\nin float in_referenceHalfWidth\\n)\\n{\\nfloat aa        = 0.5 * u_antialiasing;\\nfloat baseWidth = getBaseLineHalfWidth(in_lineHalfWidth, in_referenceHalfWidth);\\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\\nfloat z         = 2.0 * step(baseWidth, 0.0);\\nvec2  dist      = getDist(in_offset, halfWidth);\\nvec3  offset    = u_displayViewMat3 * vec3(dist, 0.0);\\nvec3  pos       = u_dvsMat3 * vec3(in_pos * POSITION_PRECISION, 1.0) + offset;\\n#ifdef OUTLINED_FILL\\nvec4  color     = in_color;\\nfloat opacity   = 1.0;\\n#else\\nvec4  color     = getColor(in_color, in_bitSet, 0);\\nfloat opacity   = getOpacity();\\n#ifdef SDF\\nconst float SDF_PATTERN_HALF_WIDTH = 15.5;\\nfloat scaleDash = getBit(in_bitSet, BITSET_LINE_SCALE_DASH);\\nfloat lineWidthRatio = (scaleDash * max(halfWidth - 0.55 * u_antialiasing, 0.25) + (1.0 - scaleDash)) / SDF_PATTERN_HALF_WIDTH;\\n#endif\\n#endif\\nout_pos = vec3(pos.xy, z);\\nreturn LineData(\\ncolor,\\nin_normal,\\nhalfWidth,\\nopacity,\\n#ifndef OUTLINED_FILL\\n#ifdef PATTERN\\nin_tlbr / u_mosaicSize.xyxy,\\nvec2(in_tlbr.z - in_tlbr.x, in_tlbr.w - in_tlbr.y),\\n#endif\\n#ifdef SDF\\nlineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nin_accumulatedDist * u_zoomFactor + dot(in_segmentDirection, dist),\\n#endif\\n#endif\\nnorm(in_id)\\n);\\n}"}},text:{"common.glsl":"uniform highp vec2 u_mosaicSize;\\nvarying highp vec3 v_id;\\nvarying mediump vec3 v_pos;\\nvarying lowp float v_opacity;\\nvarying lowp vec4 v_color;\\nvarying highp vec2 v_tex;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying lowp float v_transparency;","hittest.glsl":"#include <materials/hittest/common.glsl>\\n#ifdef HITTEST\\nvec3 hittestGlyph(in vec3 in_pos, in vec3 offset, in float fontSize) {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * in_pos + u_tileMat3 * offset;\\nvec3  hittestPos = vec3(u_hittestPos, 1.);\\nfloat hittestDist = u_hittestDist;\\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nfloat halfFontSize = fontSize / 2.;\\nif (distance(pos, hittestPos) > hittestDist + halfFontSize) {\\noutTextureCoords.z += 2.0;\\n}\\nreturn outTextureCoords;\\n}\\n#endif","text.frag":"precision mediump float;\\n#include <materials/text/common.glsl>\\nuniform lowp sampler2D u_texture;\\n#ifdef HITTEST\\nvec4 getColor() {\\nreturn vec4(1.);\\n}\\n#else\\nvec4 getColor()\\n{\\nfloat SDF_CUTOFF = (2.0 / 8.0);\\nfloat SDF_BASE_EDGE_DIST = 1.0 - SDF_CUTOFF;\\nlowp float dist = texture2D(u_texture, v_tex).a;\\nmediump float edge = SDF_BASE_EDGE_DIST - v_edgeDistanceOffset;\\n#ifdef HIGHLIGHT\\nedge /= 2.0;\\n#endif\\nlowp float aa = v_antialiasingWidth;\\nlowp float alpha = smoothstep(edge - aa, edge + aa, dist);\\nreturn alpha * v_color * v_opacity;\\n}\\n#endif\\nvoid main()\\n{\\ngl_FragColor = getColor();\\n}","text.vert":"precision highp float;\\n#include <materials/utils.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\n#include <materials/text/hittest.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texFontSize;\\nattribute vec4 a_aux;\\nattribute vec2 a_zoomRange;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHalo;\\nfloat getTextSize(inout vec2 offset, inout float baseSize, in float referenceSize) {\\n#ifdef VV_SIZE\\nfloat r = getSize(referenceSize) / referenceSize;\\nbaseSize *= r;\\noffset.xy *= r;\\nreturn baseSize;\\n#endif\\nreturn baseSize;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat a_referenceSize = a_aux.z * a_aux.z / 256.0;\\nfloat a_bitSet        = a_aux.w;\\nfloat a_fontSize      = a_texFontSize.z;\\nvec2  a_offset        = a_vertexOffset * OFFSET_PRECISION;\\nvec3  in_pos        = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat fontSize      = getTextSize(a_offset, a_fontSize, a_referenceSize);\\nfloat fontScale     = fontSize / SDF_FONT_SIZE;\\nvec3  offset        = getRotation() * vec3(a_offset, 0.0);\\nmat3  extrudeMatrix = getBit(a_bitSet, 0) == 1.0 ? u_displayViewMat3 : u_displayMat3;\\nv_color   = u_isHalo * a_haloColor + (1.0 - u_isHalo) * getColor(a_color, a_bitSet, 1);\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\nv_tex     = a_texCoords / u_mosaicSize;\\nv_pos     = u_dvsMat3 * in_pos + extrudeMatrix * offset;\\nv_edgeDistanceOffset = u_isHalo * OUTLINE_SCALE * a_texFontSize.w / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\n#ifdef HITTEST\\nvec3 pos = hittestGlyph(in_pos, offset, fontSize);\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n#else\\ngl_Position =  vec4(clip(v_color, v_pos, getFilterFlags(), a_zoomRange), 1.0);\\n#endif\\n}"},"utils.glsl":"float rshift(in float u32, in int amount) {\\nreturn floor(u32 / pow(2.0, float(amount)));\\n}\\nfloat getBit(in float bitset, in int bitIndex) {\\nfloat offset = pow(2.0, float(bitIndex));\\nreturn mod(floor(bitset / offset), 2.0);\\n}\\nfloat getFilterBit(in float bitset, in int bitIndex) {\\nreturn getBit(bitset, bitIndex + 1);\\n}\\nfloat getHighlightBit(in float bitset) {\\nreturn getBit(bitset, 0);\\n}\\nhighp vec3 unpackDisplayIdTexel(in highp vec3 bitset) {\\nfloat isAggregate = getBit(bitset.b, 7);\\nreturn (1.0 - isAggregate) * bitset + isAggregate * (vec3(bitset.rgb) - vec3(0.0, 0.0, float(0x80)));\\n}\\nvec4 unpack(in float u32) {\\nfloat r = mod(rshift(u32, 0), 255.0);\\nfloat g = mod(rshift(u32, 8), 255.0);\\nfloat b = mod(rshift(u32, 16), 255.0);\\nfloat a = mod(rshift(u32, 24), 255.0);\\nreturn vec4(r, g, b, a);\\n}\\nvec3 norm(in vec3 v) {\\nreturn v /= 255.0;\\n}\\nvec4 norm(in vec4 v) {\\nreturn v /= 255.0;\\n}\\nfloat max4(vec4 target) {\\nreturn max(max(max(target.x, target.y), target.z), target.w);\\n}\\nvec2 unpack_u8_nf32(vec2 bytes) {\\nreturn (bytes - 127.0) / 127.0;\\n}","vcommon.glsl":"#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/attributeData.glsl>\\n#include <materials/vv.glsl>\\nattribute vec2 a_pos;\\nattribute highp vec3 a_id;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp mat3 u_displayMat3;\\nuniform highp mat3 u_displayViewMat3;\\nuniform highp mat3 u_tileMat3;\\nuniform highp mat3 u_viewMat3;\\nuniform highp float u_pixelRatio;\\nuniform mediump float u_zoomFactor;\\nuniform mediump float u_antialiasing;\\nuniform mediump float u_currentZoom;\\nvec4 VV_ADATA = vec4(0.0);\\nvoid loadVisualVariableData(inout vec4 target) {\\n#ifdef OES_TEXTURE_FLOAT\\ntarget.rgba = getAttributeData2(a_id);\\n#else\\nvec4 data0 = getAttributeData2(a_id);\\nvec4 data1 = getAttributeData3(a_id);\\ntarget.r = u88VVToFloat(data0.rg * 255.0);\\ntarget.g = u88VVToFloat(data0.ba * 255.0);\\ntarget.b = u88VVToFloat(data1.rg * 255.0);\\ntarget.a = u88VVToFloat(data1.ba * 255.0);\\n#endif\\n}\\n#ifdef VV\\n#define INIT loadVisualVariableData(VV_ADATA)\\n#else\\n#define INIT\\n#endif\\nvec4 getColor(in vec4 a_color, in float a_bitSet, int index) {\\n#ifdef VV_COLOR\\nfloat isColorLocked   = getBit(a_bitSet, index);\\nreturn getVVColor(VV_ADATA[ATTR_VV_COLOR], a_color, isColorLocked);\\n#else\\nreturn a_color;\\n#endif\\n}\\nfloat getOpacity() {\\n#ifdef VV_OPACITY\\nreturn getVVOpacity(VV_ADATA[ATTR_VV_OPACITY]);\\n#else\\nreturn 1.0;\\n#endif\\n}\\nfloat getSize(in float in_size) {\\n#ifdef VV_SIZE\\nreturn getVVSize(in_size, VV_ADATA[ATTR_VV_SIZE]);\\n#else\\nreturn in_size;\\n#endif\\n}\\nmat3 getRotation() {\\n#ifdef VV_ROTATION\\nreturn getVVRotationMat3(mod(VV_ADATA[ATTR_VV_ROTATION], 360.0));\\n#else\\nreturn mat3(1.0);\\n#endif\\n}\\nfloat getFilterFlags() {\\n#ifdef IGNORES_SAMPLER_PRECISION\\nreturn ceil(getAttributeData0(a_id).x * 255.0);\\n#else\\nreturn getAttributeData0(a_id).x * 255.0;\\n#endif\\n}\\nvec4 getAnimationState() {\\nreturn getAttributeData1(a_id);\\n}\\nfloat getMinZoom() {\\nvec4 data0 = getAttributeData0(a_id) * 255.0;\\nreturn data0.g;\\n}\\nmat3 getMatrix(float isMapAligned) {\\nreturn isMapAligned * u_displayViewMat3 + (1.0 - isMapAligned) * u_displayMat3;\\n}\\nvec3 clip(inout vec4 color, inout vec3 pos, in float filterFlags, in vec2 minMaxZoom) {\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\\n#ifdef INSIDE\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\\n#elif defined(OUTSIDE)\\npos.z += 2.0 * getFilterBit(filterFlags, 1);\\n#elif defined(HIGHLIGHT)\\n#if !defined(HIGHLIGHT_ALL)\\npos.z += 2.0 * (1.0 - getHighlightBit(filterFlags));\\n#endif\\n#endif\\npos.z += 2.0 * (step(minMaxZoom.y, u_currentZoom) + (1.0 - step(minMaxZoom.x, u_currentZoom)));\\nreturn pos;\\n}","vv.glsl":"#if defined(VV_SIZE_MIN_MAX_VALUE) || defined(VV_SIZE_SCALE_STOPS) || defined(VV_SIZE_FIELD_STOPS) || defined(VV_SIZE_UNIT_VALUE)\\n#define VV_SIZE\\n#endif\\n#if defined(VV_COLOR) || defined(VV_SIZE) || defined(VV_OPACITY) || defined(VV_ROTATION)\\n#define VV\\n#endif\\n#ifdef VV_COLOR\\nuniform highp float u_vvColorValues[8];\\nuniform vec4 u_vvColors[8];\\n#endif\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nuniform highp vec4 u_vvSizeMinMaxValue;\\n#endif\\n#ifdef VV_SIZE_SCALE_STOPS\\nuniform highp float u_vvSizeScaleStopsValue;\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nuniform highp float u_vvSizeFieldStopsValues[6];\\nuniform float u_vvSizeFieldStopsSizes[6];\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nuniform highp float u_vvSizeUnitValueWorldToPixelsRatio;\\n#endif\\n#ifdef VV_OPACITY\\nuniform highp float u_vvOpacityValues[8];\\nuniform float u_vvOpacities[8];\\n#endif\\n#ifdef VV_ROTATION\\nuniform lowp float u_vvRotationType;\\n#endif\\nbool isNan(float val) {\\nreturn (val == NAN_MAGIC_NUMBER);\\n}\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nfloat getVVMinMaxSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nfloat interpolationRatio = (sizeValue  - u_vvSizeMinMaxValue.x) / (u_vvSizeMinMaxValue.y - u_vvSizeMinMaxValue.x);\\ninterpolationRatio = clamp(interpolationRatio, 0.0, 1.0);\\nreturn u_vvSizeMinMaxValue.z + interpolationRatio * (u_vvSizeMinMaxValue.w - u_vvSizeMinMaxValue.z);\\n}\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nconst int VV_SIZE_N = 6;\\nfloat getVVStopsSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nif (sizeValue <= u_vvSizeFieldStopsValues[0]) {\\nreturn u_vvSizeFieldStopsSizes[0];\\n}\\nfor (int i = 1; i < VV_SIZE_N; ++i) {\\nif (u_vvSizeFieldStopsValues[i] >= sizeValue) {\\nfloat f = (sizeValue - u_vvSizeFieldStopsValues[i-1]) / (u_vvSizeFieldStopsValues[i] - u_vvSizeFieldStopsValues[i-1]);\\nreturn mix(u_vvSizeFieldStopsSizes[i-1], u_vvSizeFieldStopsSizes[i], f);\\n}\\n}\\nreturn u_vvSizeFieldStopsSizes[VV_SIZE_N - 1];\\n}\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nfloat getVVUnitValue(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nreturn u_vvSizeUnitValueWorldToPixelsRatio * sizeValue;\\n}\\n#endif\\n#ifdef VV_OPACITY\\nconst int VV_OPACITY_N = 8;\\nfloat getVVOpacity(float opacityValue) {\\nif (isNan(opacityValue)) {\\nreturn 1.0;\\n}\\nif (opacityValue <= u_vvOpacityValues[0]) {\\nreturn u_vvOpacities[0];\\n}\\nfor (int i = 1; i < VV_OPACITY_N; ++i) {\\nif (u_vvOpacityValues[i] >= opacityValue) {\\nfloat f = (opacityValue - u_vvOpacityValues[i-1]) / (u_vvOpacityValues[i] - u_vvOpacityValues[i-1]);\\nreturn mix(u_vvOpacities[i-1], u_vvOpacities[i], f);\\n}\\n}\\nreturn u_vvOpacities[VV_OPACITY_N - 1];\\n}\\n#endif\\n#ifdef VV_ROTATION\\nmat4 getVVRotation(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat4(1, 0, 0, 0,\\n0, 1, 0, 0,\\n0, 0, 1, 0,\\n0, 0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (u_vvRotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat4(cosA, sinA, 0, 0,\\n-sinA,  cosA, 0, 0,\\n0,     0, 1, 0,\\n0,     0, 0, 1);\\n}\\nmat3 getVVRotationMat3(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat3(1, 0, 0,\\n0, 1, 0,\\n0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (u_vvRotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * -rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat3(cosA, -sinA, 0,\\nsinA, cosA, 0,\\n0,    0,    1);\\n}\\n#endif\\n#ifdef VV_COLOR\\nconst int VV_COLOR_N = 8;\\nvec4 getVVColor(float colorValue, vec4 fallback, float isColorLocked) {\\nif (isNan(colorValue) || isColorLocked == 1.0) {\\nreturn fallback;\\n}\\nif (colorValue <= u_vvColorValues[0]) {\\nreturn u_vvColors[0];\\n}\\nfor (int i = 1; i < VV_COLOR_N; ++i) {\\nif (u_vvColorValues[i] >= colorValue) {\\nfloat f = (colorValue - u_vvColorValues[i-1]) / (u_vvColorValues[i] - u_vvColorValues[i-1]);\\nreturn mix(u_vvColors[i-1], u_vvColors[i], f);\\n}\\n}\\nreturn u_vvColors[VV_COLOR_N - 1];\\n}\\n#endif\\nfloat getVVSize(in float size, in float vvSize)  {\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nreturn getVVMinMaxSize(vvSize, size);\\n#elif defined(VV_SIZE_SCALE_STOPS)\\nreturn u_vvSizeScaleStopsValue;\\n#elif defined(VV_SIZE_FIELD_STOPS)\\nfloat outSize = getVVStopsSize(vvSize, size);\\nreturn isNan(outSize) ? size : outSize;\\n#elif defined(VV_SIZE_UNIT_VALUE)\\nreturn getVVUnitValue(vvSize, size);\\n#else\\nreturn size;\\n#endif\\n}"},"post-processing":{blit:{"blit.frag":"precision mediump float;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_FragColor = texture2D(u_texture, v_uv);\\n}"},bloom:{composite:{"composite.frag":"precision mediump float;\\nvarying vec2 v_uv;\\nuniform sampler2D u_blurTexture1;\\nuniform sampler2D u_blurTexture2;\\nuniform sampler2D u_blurTexture3;\\nuniform sampler2D u_blurTexture4;\\nuniform sampler2D u_blurTexture5;\\nuniform float u_bloomStrength;\\nuniform float u_bloomRadius;\\nuniform float u_bloomFactors[NUMMIPS];\\nuniform vec3 u_bloomTintColors[NUMMIPS];\\nfloat lerpBloomFactor(const in float factor) {\\nfloat mirrorFactor = 1.2 - factor;\\nreturn mix(factor, mirrorFactor, u_bloomRadius);\\n}\\nvoid main() {\\ngl_FragColor = u_bloomStrength * (\\nlerpBloomFactor(u_bloomFactors[0]) * vec4(u_bloomTintColors[0], 1.0) * texture2D(u_blurTexture1, v_uv) +\\nlerpBloomFactor(u_bloomFactors[1]) * vec4(u_bloomTintColors[1], 1.0) * texture2D(u_blurTexture2, v_uv) +\\nlerpBloomFactor(u_bloomFactors[2]) * vec4(u_bloomTintColors[2], 1.0) * texture2D(u_blurTexture3, v_uv) +\\nlerpBloomFactor(u_bloomFactors[3]) * vec4(u_bloomTintColors[3], 1.0) * texture2D(u_blurTexture4, v_uv) +\\nlerpBloomFactor(u_bloomFactors[4]) * vec4(u_bloomTintColors[4], 1.0) * texture2D(u_blurTexture5, v_uv)\\n);\\n}"},gaussianBlur:{"gaussianBlur.frag":"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\n#define SIGMA RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = float(SIGMA);\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}"},luminosityHighPass:{"luminosityHighPass.frag":"precision mediump float;\\nuniform sampler2D u_texture;\\nuniform vec3 u_defaultColor;\\nuniform float u_defaultOpacity;\\nuniform float u_luminosityThreshold;\\nuniform float u_smoothWidth;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 texel = texture2D(u_texture, v_uv);\\nvec3 luma = vec3(0.299, 0.587, 0.114);\\nfloat v = dot(texel.xyz, luma);\\nvec4 outputColor = vec4(u_defaultColor.rgb, u_defaultOpacity);\\nfloat alpha = smoothstep(u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v);\\ngl_FragColor = mix(outputColor, texel, alpha);\\n}"}},blur:{gaussianBlur:{"gaussianBlur.frag":"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nuniform float u_sigma;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = u_sigma;\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}"},"radial-blur":{"radial-blur.frag":"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nconst float sampleDist = 1.0;\\nconst float sampleStrength = 2.2;\\nvoid main(void) {\\nfloat samples[10];\\nsamples[0] = -0.08;\\nsamples[1] = -0.05;\\nsamples[2] = -0.03;\\nsamples[3] = -0.02;\\nsamples[4] = -0.01;\\nsamples[5] =  0.01;\\nsamples[6] =  0.02;\\nsamples[7] =  0.03;\\nsamples[8] =  0.05;\\nsamples[9] =  0.08;\\nvec2 dir = 0.5 - v_uv;\\nfloat dist = sqrt(dir.x * dir.x + dir.y * dir.y);\\ndir = dir / dist;\\nvec4 color = texture2D(u_colorTexture,v_uv);\\nvec4 sum = color;\\nfor (int i = 0; i < 10; i++) {\\nsum += texture2D(u_colorTexture, v_uv + dir * samples[i] * sampleDist);\\n}\\nsum *= 1.0 / 11.0;\\nfloat t = dist * sampleStrength;\\nt = clamp(t, 0.0, 1.0);\\ngl_FragColor = mix(color, sum, t);\\n}"}},dra:{"dra.frag":"precision mediump float;\\nuniform sampler2D u_minColor;\\nuniform sampler2D u_maxColor;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 minColor = texture2D(u_minColor, vec2(0.5));\\nvec4 maxColor = texture2D(u_maxColor, vec2(0.5));\\nvec4 color = texture2D(u_texture, v_uv);\\nvec3 minColorUnpremultiply = minColor.rgb / minColor.a;\\nvec3 maxColorUnpremultiply = maxColor.rgb / maxColor.a;\\nvec3 colorUnpremultiply = color.rgb / color.a;\\nvec3 range = maxColorUnpremultiply - minColorUnpremultiply;\\ngl_FragColor = vec4(color.a * (colorUnpremultiply - minColorUnpremultiply) / range, color.a);\\n}","min-max":{"min-max.frag":"#extension GL_EXT_draw_buffers : require\\nprecision mediump float;\\n#define CELL_SIZE 2\\nuniform sampler2D u_minTexture;\\nuniform sampler2D u_maxTexture;\\nuniform vec2 u_srcResolution;\\nuniform vec2 u_dstResolution;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);\\nvec2 onePixel = vec2(1.0) / u_srcResolution;\\nvec2 uv = (srcPixel + 0.5) / u_srcResolution;\\nvec4 minColor = vec4(1.0);\\nvec4 maxColor = vec4(0.0);\\nfor (int y = 0; y < CELL_SIZE; ++y) {\\nfor (int x = 0; x < CELL_SIZE; ++x) {\\nvec2 offset = uv + vec2(x, y) * onePixel;\\nminColor = min(minColor, texture2D(u_minTexture, offset));\\nmaxColor = max(maxColor, texture2D(u_maxTexture, offset));\\n}\\n}\\ngl_FragData[0] = minColor;\\ngl_FragData[1] = maxColor;\\n}"}},"drop-shadow":{composite:{"composite.frag":"precision mediump float;\\nuniform sampler2D u_layerFBOTexture;\\nuniform sampler2D u_blurTexture;\\nuniform vec4 u_shadowColor;\\nuniform vec2 u_shadowOffset;\\nuniform highp mat3 u_displayViewMat3;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec3 offset = u_displayViewMat3 * vec3(u_shadowOffset, 0.0);\\nvec4 layerColor = texture2D(u_layerFBOTexture, v_uv);\\nvec4 blurColor = texture2D(u_blurTexture, v_uv - offset.xy / 2.0);\\ngl_FragColor = ((1.0 - layerColor.a) * blurColor.a * u_shadowColor + layerColor);\\n}"}},"edge-detect":{"frei-chen":{"frei-chen.frag":"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nvarying vec2 v_uv;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[9];\\nconst mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\\nconst mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\\nconst mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\\nconst mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\\nconst mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\\nconst mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\\nconst mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\\nconst mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\\nconst mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\\nvoid main() {\\nG[0] = g0,\\nG[1] = g1,\\nG[2] = g2,\\nG[3] = g3,\\nG[4] = g4,\\nG[5] = g5,\\nG[6] = g6,\\nG[7] = g7,\\nG[8] = g8;\\nmat3 I;\\nfloat cnv[9];\\nvec3 sample;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D(u_colorTexture, v_uv + texel * vec2(i - 1.0,j - 1.0)).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 9; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nfloat M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\\nfloat S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\\ngl_FragColor = vec4(vec3(sqrt(M / S)), texture2D(u_colorTexture, v_uv).a);\\n}"},sobel:{"sobel.frag":"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\ngl_FragColor = vec4(vec3(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1])), texture2D(u_colorTexture, v_uv).a);\\n}"}},"edge-enhance":{"edge-enhance.frag":"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, 0.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nvec4 color = texture2D(u_colorTexture, v_uv);\\ngl_FragColor = vec4(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1]) * color);\\n}"},filterEffect:{"filterEffect.frag":"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform mat4 u_coefficients;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 color = texture2D(u_colorTexture, v_uv);\\nvec4 rgbw = u_coefficients * vec4(color.a > 0.0 ? color.rgb / color.a : vec3(0.0), 1.0);\\nfloat a = color.a;\\ngl_FragColor = vec4(a * rgbw.rgb, a);\\n}"},pp:{"pp.vert":"precision mediump float;\\nattribute vec2 a_position;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_uv = (a_position + 1.0) / 2.0;\\n}"}},raster:{bitmap:{"bitmap.frag":"precision mediump float;\\nvarying highp vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform highp vec2 u_coordScale;\\nuniform lowp float u_opacity;\\n#include <filtering/bicubic.glsl>\\nvoid main() {\\n#ifdef BICUBIC\\nvec4 color = sampleBicubicBSpline(u_texture, v_texcoord, u_coordScale);\\n#else\\nvec4 color = texture2D(u_texture, v_texcoord);\\n#endif\\nfloat alpha = u_opacity * color.a;\\ngl_FragColor = vec4(alpha * color.rgb, alpha);\\n}","bitmap.vert":"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}"},common:{"common.glsl":"uniform sampler2D u_image;\\nuniform int u_bandCount;\\nuniform bool u_isFloatTexture;\\nuniform bool u_flipY;\\nuniform float u_opacity;\\nuniform int u_resampling;\\nuniform vec2 u_srcImageSize;\\n#ifdef APPLY_PROJECTION\\n#include <raster/common/projection.glsl>\\n#endif\\n#ifdef BICUBIC\\n#include <filtering/bicubic.glsl>\\n#endif\\n#ifdef BILINEAR\\n#include <filtering/bilinear.glsl>\\n#endif\\nvec2 getPixelLocation(vec2 coords) {\\nvec2 targetLocation = u_flipY ? vec2(coords.s, 1.0 - coords.t) : coords;\\n#ifdef APPLY_PROJECTION\\ntargetLocation = projectPixelLocation(targetLocation);\\n#endif\\nreturn targetLocation;\\n}\\nbool isOutside(vec2 coords){\\nif (coords.t>1.00001 ||coords.t<-0.00001 || coords.s>1.00001 ||coords.s<-0.00001) {\\nreturn true;\\n} else {\\nreturn false;\\n}\\n}\\nvec4 getPixel(vec2 pixelLocation) {\\n#ifdef BICUBIC\\nvec4 color = sampleBicubicBSpline(u_image, pixelLocation, u_srcImageSize);\\n#elif defined(BILINEAR)\\nvec4 color = sampleBilinear(u_image, pixelLocation, u_srcImageSize);\\n#else\\nvec4 color = texture2D(u_image, pixelLocation);\\n#endif\\nreturn color;\\n}","contrastBrightness.glsl":"uniform float u_contrastOffset;\\nuniform float u_brightnessOffset;\\nvec4 adjustContrastBrightness(vec4 currentPixel, bool isFloat) {\\nvec4 pixelValue = isFloat ? currentPixel * 255.0 : currentPixel;\\nfloat maxI = 255.0;\\nfloat mid = 128.0;\\nfloat c = u_contrastOffset;\\nfloat b = u_brightnessOffset;\\nvec4 v;\\nif (c > 0.0 && c < 100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) / (2.0 * (100.0 - c)) + mid;\\n} else if (c <= 0.0 && c > -100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) * (100.0 + c) / 20000.0 + mid;\\n} else if (c == 100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + (maxI + 1.0) * (100.0 - c) + 2.0 * maxI * b);\\nv = (sign(v) + 1.0) / 2.0;\\n} else if (c == -100.0) {\\nv = vec4(mid, mid, mid, currentPixel.a);\\n}\\nreturn vec4(v.r / 255.0, v.g / 255.0, v.b / 255.0, currentPixel.a);\\n}","projection.glsl":"uniform sampler2D u_transformGrid;\\nuniform vec2 u_transformSpacing;\\nuniform vec2 u_transformGridSize;\\nuniform vec2 u_targetImageSize;\\nvec2 projectPixelLocation(vec2 coords) {\\n#ifdef LOOKUP_PROJECTION\\nvec4 pv = texture2D(u_transformGrid, coords);\\nreturn vec2(pv.r, pv.g);\\n#endif\\nvec2 index_image = floor(coords * u_targetImageSize);\\nvec2 oneTransformPixel = vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\\nvec2 index_transform = floor(index_image / u_transformSpacing) / u_transformGridSize;\\nvec2 pos = fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\\nvec2 srcLocation;\\nvec2 transform_location = index_transform + oneTransformPixel * 0.5;\\nif (pos.s <= pos.t) {\\nvec4 ll_abc = texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\\nvec4 ll_def = texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ll_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ll_def.rgb, vec3(pos, 1.0));\\n} else {\\nvec4 ur_abc = texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\\nvec4 ur_def = texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ur_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ur_def.rgb, vec3(pos, 1.0));\\n}\\nreturn srcLocation;\\n}"},flow:{"flow.frag":"precision highp float;\\nvarying float v_side;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nvarying vec4 v_lineColor;\\nvarying float v_lineRenderWidth;\\nuniform float u_time;\\nuniform float u_fadeDuration;\\nuniform float u_lineSpeed;\\nvoid main(void) {\\nvec4 color = v_lineColor;\\nfloat edgeWidth = min(2.0 * v_lineRenderWidth - 1.0, 1.0);\\nfloat edgeStart = (v_lineRenderWidth - edgeWidth) / v_lineRenderWidth;\\nif (edgeStart < 0.95) {\\nfloat s = step(edgeStart, abs(v_side));\\ncolor.a *= (1.0 - s) + s * (1.0 - (abs(v_side) - edgeStart) / (1.0 - edgeStart));\\n}\\nfloat t = mod(v_timeSeed * (v_totalTime + u_fadeDuration) + u_time * u_lineSpeed, v_totalTime + u_fadeDuration) - v_time;\\ncolor.a *= step(0.0, t) * exp(-2.3 * t / u_fadeDuration);\\ncolor.rgb *= color.a;\\ngl_FragColor = color;\\n}","flow.vert":"precision highp float;\\nattribute vec3 a_positionAndSide;\\nattribute vec3 a_timeInfo;\\nattribute vec2 a_extrude;\\nattribute float a_speed;\\nuniform mat3 u_dvsMat3;\\nuniform mat3 u_displayViewMat3;\\nvarying float v_side;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nvarying vec4 v_lineColor;\\nvarying float v_lineRenderWidth;\\n#define MAX_STOPS 8\\n#ifdef VV_LINE_COLOR\\nuniform float u_lineColor_stops[MAX_STOPS];\\nuniform vec4 u_lineColor_values[MAX_STOPS];\\nuniform int u_lineColor_count;\\n#else\\nuniform vec4 u_lineColor;\\n#endif\\n#ifdef VV_LINE_OPACITY\\nuniform float u_lineOpacity_stops[MAX_STOPS];\\nuniform float u_lineOpacity_values[MAX_STOPS];\\nuniform int u_lineOpacity_count;\\n#else\\nuniform float u_lineOpacity;\\n#endif\\n#ifdef VV_LINE_RENDER_WIDTH\\nuniform float u_lineRenderWidth_stops[MAX_STOPS];\\nuniform float u_lineRenderWidth_values[MAX_STOPS];\\nuniform int u_lineRenderWidth_count;\\n#else\\nuniform float u_lineRenderWidth;\\n#endif\\nvoid main(void) {\\nfloat x = a_speed;\\n#ifdef VV_LINE_COLOR\\nvec4 lineColor = u_lineColor_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_lineColor_count) {\\nbreak;\\n}\\nfloat x1 = u_lineColor_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_lineColor_stops[i];\\nvec4 y2 = u_lineColor_values[i];\\nif (x < x2) {\\nvec4 y1 = u_lineColor_values[i - 1];\\nlineColor = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\nlineColor = y2;\\n}\\n}\\n}\\n#else\\nvec4 lineColor = u_lineColor;\\n#endif\\n#ifdef VV_LINE_OPACITY\\nfloat lineOpacity = u_lineOpacity_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_lineOpacity_count) {\\nbreak;\\n}\\nfloat x1 = u_lineOpacity_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_lineOpacity_stops[i];\\nfloat y2 = u_lineOpacity_values[i];\\nif (x < x2) {\\nfloat y1 = u_lineOpacity_values[i - 1];\\nlineOpacity = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\nlineOpacity = y2;\\n}\\n}\\n}\\n#else\\nfloat lineOpacity = u_lineOpacity;\\n#endif\\n#ifdef VV_LINE_RENDER_WIDTH\\nfloat lineRenderWidth = u_lineRenderWidth_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_lineRenderWidth_count) {\\nbreak;\\n}\\nfloat x1 = u_lineRenderWidth_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_lineRenderWidth_stops[i];\\nfloat y2 = u_lineRenderWidth_values[i];\\nif (x < x2) {\\nfloat y1 = u_lineRenderWidth_values[i - 1];\\nlineRenderWidth = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\nlineRenderWidth = y2;\\n}\\n}\\n}\\n#else\\nfloat lineRenderWidth = u_lineRenderWidth;\\n#endif\\nvec2 position = a_positionAndSide.xy;\\nfloat side = a_positionAndSide.z;\\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(a_extrude * lineRenderWidth, 0.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_side = side;\\nv_time = a_timeInfo.x;\\nv_totalTime = a_timeInfo.y;\\nv_timeSeed = a_timeInfo.z;\\nv_lineColor = vec4(lineColor.rgb, lineColor.a * lineOpacity);\\nv_lineRenderWidth = lineRenderWidth;\\n}"},hillshade:{"hillshade.frag":"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nuniform int u_hillshadeType;\\nuniform float u_sinZcosAs[6];\\nuniform float u_sinZsinAs[6];\\nuniform float u_cosZs[6];\\nuniform float u_weights[6];\\nuniform vec2 u_factor;\\nuniform float u_minValue;\\nuniform float u_maxValue;\\n#include <raster/lut/colorize.glsl>\\nfloat getNeighborHoodAlpha(float a, float b, float c, float d, float e, float f, float g, float h, float i){\\nif (a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0) {\\nreturn 0.0;\\n}\\nelse {\\nreturn e;\\n}\\n}\\nvec3 rgb2hsv(vec3 c) {\\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\\nfloat d = q.x - min(q.w, q.y);\\nfloat e = 1.0e-10;\\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\\n}\\nvec3 hsv2rgb(vec3 c) {\\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\nvec4 overlay(float val, float minValue, float maxValue, float hillshade) {\\nval = clamp((val - minValue) / (maxValue - minValue), 0.0, 1.0);\\nvec4 rgb = colorize(vec4(val, val, val, 1.0), 255.0);\\nvec3 hsv = rgb2hsv(rgb.xyz);\\nhsv.z = hillshade;\\nreturn vec4(hsv2rgb(hsv), 1.0) * rgb.a;\\n}\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\nif (currentPixel.a == 0.0) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec2 axy = vec2(-1.0, -1.0);\\nvec2 bxy = vec2(0.0, -1.0);\\nvec2 cxy = vec2(1.0, -1.0);\\nvec2 dxy = vec2(-1.0, 0.0);\\nvec2 fxy = vec2(1.0, 0.0);\\nvec2 gxy = vec2(-1.0, 1.0);\\nvec2 hxy = vec2(0.0, 1.0);\\nvec2 ixy = vec2(1.0, 1.0);\\nvec2 onePixel = 1.0 / u_srcImageSize;\\nif (pixelLocation.s < onePixel.s) {\\naxy[0] = 1.0;\\ndxy[0] = 1.0;\\ngxy[0] = 1.0;\\n}\\nif (pixelLocation.t < onePixel.t) {\\naxy[1] = 1.0;\\nbxy[1] = 1.0;\\ncxy[1] = 1.0;\\n}\\nif (pixelLocation.s > 1.0 - onePixel.s) {\\ncxy[0] = -1.0;\\nfxy[0] = -1.0;\\nixy[0] = -1.0;\\n}\\nif (pixelLocation.t > 1.0 - onePixel.t) {\\ngxy[1] = -1.0;\\nhxy[1] = -1.0;\\nixy[1] = -1.0;\\n}\\nvec4 va = texture2D(u_image, pixelLocation + onePixel * axy);\\nvec4 vb = texture2D(u_image, pixelLocation + onePixel * bxy);\\nvec4 vc = texture2D(u_image, pixelLocation + onePixel * cxy);\\nvec4 vd = texture2D(u_image, pixelLocation + onePixel * dxy);\\nvec4 ve = texture2D(u_image, pixelLocation);\\nvec4 vf = texture2D(u_image, pixelLocation + onePixel * fxy);\\nvec4 vg = texture2D(u_image, pixelLocation + onePixel * gxy);\\nvec4 vh = texture2D(u_image, pixelLocation + onePixel * hxy);\\nvec4 vi = texture2D(u_image, pixelLocation + onePixel * ixy);\\nfloat dzx = (vc + 2.0 * vf + vi - va - 2.0 * vd - vg).r * u_factor.s;\\nfloat dzy = (vg + 2.0 * vh + vi - va - 2.0 * vb - vc).r * u_factor.t;\\nfloat dzd = sqrt(1.0 + dzx * dzx + dzy * dzy);\\nfloat hillshade = 0.0;\\nif (u_hillshadeType == 0){\\nfloat cosDelta = u_sinZsinAs[0] * dzy - u_sinZcosAs[0] * dzx;\\nfloat z = (u_cosZs[0] + cosDelta) / dzd;\\nif (z < 0.0)  z = 0.0;\\nhillshade = z;\\n} else {\\nfor (int k = 0; k < 6; k++) {\\nfloat cosDelta = u_sinZsinAs[k] * dzy - u_sinZcosAs[k] * dzx;\\nfloat z = (u_cosZs[k] + cosDelta) / dzd;\\nif (z < 0.0) z = 0.0;\\nhillshade = hillshade + z * u_weights[k];\\nif (k == 5) break;\\n}\\n}\\nfloat alpha = getNeighborHoodAlpha(va.a, vb.a, vc.a, vd.a, ve.a, vf.a, vg.a, vh.a, vi.a);\\n#ifdef APPLY_COLORMAP\\ngl_FragColor = overlay(ve.r, u_minValue, u_maxValue, hillshade) * alpha * u_opacity;\\n#else\\ngl_FragColor = vec4(hillshade, hillshade, hillshade, 1.0) * alpha * u_opacity;\\n#endif\\n}","hillshade.vert":"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}"},lut:{"colorize.glsl":"uniform sampler2D u_colormap;\\nuniform float u_colormapOffset;\\nuniform float u_colormapMaxIndex;\\nvec4 colorize(vec4 currentPixel, float scaleFactor) {\\nfloat clrIndex = clamp(currentPixel.r * scaleFactor - u_colormapOffset, 0.0, u_colormapMaxIndex);\\nvec2 clrPosition = vec2((clrIndex + 0.5) / (u_colormapMaxIndex + 1.0), 0.0);\\nvec4 color = texture2D(u_colormap, clrPosition);\\nvec4 result = vec4(color.rgb, color.a * currentPixel.a);\\nreturn result;\\n}","lut.frag":"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\n#include <raster/lut/colorize.glsl>\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\nvec4 result = colorize(currentPixel, 1.0);\\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * u_opacity;\\n}","lut.vert":"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform highp float u_scale;\\nuniform highp vec2 u_offset;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos * u_scale + u_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}"},magdir:{"magdir.frag":"precision mediump float;\\nvarying vec4 v_color;\\nuniform lowp float u_opacity;\\nvoid main() {\\ngl_FragColor = v_color * u_opacity;\\n}","magdir.vert":"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nuniform float u_rotation;\\nuniform vec4 u_colors[12];\\nvarying vec4 v_color;\\nvoid main()\\n{\\nfloat angle = a_offset.y + u_rotation;\\n#ifndef ROTATION_GEOGRAPHIC\\nangle = 3.14159265359 * 2.0 - angle - 3.14159265359 / 2.0;\\n#endif\\nvec2 offset = vec2(cos(angle), sin(angle)) * a_offset.x;\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 pos = a_pos + offset * sizePercentage * u_symbolSize;\\nv_color = u_colors[int(a_vv.x)];\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}"},reproject:{"reproject.frag":"precision mediump float;\\nvarying vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\\n}","reproject.vert":"precision mediump float;\\nattribute vec2 a_position;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_position;\\ngl_Position = vec4(2.0 * (a_position - 0.5), 0.0, 1.0);\\n}"},scalar:{"scalar.frag":"precision mediump float;\\nuniform lowp float u_opacity;\\nvarying vec2 v_pos;\\nconst vec4 outlineColor = vec4(0.2, 0.2, 0.2, 1.0);\\nconst float outlineSize = 0.02;\\nconst float innerRadius = 0.25;\\nconst float outerRadius = 0.42;\\nconst float innerSquareLength = 0.15;\\nvoid main() {\\nmediump float dist = length(v_pos);\\nmediump float fillalpha1 = smoothstep(outerRadius, outerRadius + outlineSize, dist);\\nfillalpha1 *= (1.0-smoothstep(outerRadius + outlineSize, outerRadius + 0.1 + outlineSize, dist));\\n#ifdef INNER_CIRCLE\\nmediump float fillalpha2 = smoothstep(innerRadius, innerRadius + outlineSize, dist);\\nfillalpha2 *= (1.0-smoothstep(innerRadius + outlineSize, innerRadius + 0.1 + outlineSize, dist));\\n#else\\nmediump float fillalpha2 = (abs(v_pos.x) < innerSquareLength ? 1.0 : 0.0) * (abs(v_pos.y) < innerSquareLength ? 1.0 : 0.0);\\n#endif\\ngl_FragColor = (fillalpha2 + fillalpha1) * outlineColor * u_opacity;\\n}","scalar.vert":"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nvarying vec2 v_pos;\\nvoid main()\\n{\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 size = u_symbolSize * sizePercentage;\\nvec2 pos = a_pos + a_offset * size;\\nv_pos = a_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}"},stretch:{"stretch.frag":"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nuniform float u_minCutOff[3];\\nuniform float u_maxCutOff[3];\\nuniform float u_minOutput;\\nuniform float u_maxOutput;\\nuniform float u_factor[3];\\nuniform bool u_useGamma;\\nuniform float u_gamma[3];\\nuniform float u_gammaCorrection[3];\\n#include <raster/lut/colorize.glsl>\\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, bool useGamma, float gamma, float gammaCorrection) {\\nif (val >= maxCutOff) {\\nreturn maxOutput;\\n} else if (val <= minCutOff) {\\nreturn minOutput;\\n}\\nfloat stretchedVal;\\nif (useGamma) {\\nfloat tempf = 1.0;\\nfloat outRange = maxOutput - minOutput;\\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\\nif (gamma > 1.0) {\\ntempf -= pow(1.0 / outRange, relativeVal * gammaCorrection);\\n}\\nstretchedVal = (tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput) / 255.0;\\n} else {\\nstretchedVal = minOutput + (val - minCutOff) * factor;\\n}\\nreturn stretchedVal;\\n}\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\n#ifdef NOOP\\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\\nreturn;\\n#endif\\nif (u_bandCount == 1) {\\nfloat grayVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\\n#ifdef APPLY_COLORMAP\\nvec4 result = colorize(vec4(grayVal, grayVal, grayVal, 1.0), u_useGamma ? 255.0 : 1.0);\\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * currentPixel.a * u_opacity;\\n#else\\ngl_FragColor = vec4(grayVal, grayVal, grayVal, 1.0) * currentPixel.a * u_opacity;\\n#endif\\n} else {\\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_useGamma, u_gamma[1], u_gammaCorrection[1]);\\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_useGamma, u_gamma[2], u_gammaCorrection[2]);\\ngl_FragColor = vec4(redVal, greenVal, blueVal, 1.0) * currentPixel.a * u_opacity;\\n}\\n}","stretch.vert":"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform highp float u_scale;\\nuniform highp vec2 u_offset;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos * u_scale + u_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}"}},stencil:{"stencil.frag":"void main() {\\ngl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\\n}","stencil.vert":"attribute vec2 a_pos;\\nvoid main() {\\ngl_Position = vec4(a_pos, 0.0, 1.0);\\n}"},tileInfo:{"tileInfo.frag":"uniform mediump sampler2D u_texture;\\nvarying mediump vec2 v_tex;\\nvoid main(void) {\\nlowp vec4 color = texture2D(u_texture, v_tex);\\ngl_FragColor = 0.75 * color;\\n}","tileInfo.vert":"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump float u_depth;\\nuniform mediump vec2 u_coord_ratio;\\nuniform mediump vec2 u_delta;\\nuniform mediump vec2 u_dimensions;\\nvarying mediump vec2 v_tex;\\nvoid main() {\\nmediump vec2 offset = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\\nvec3 v_pos = u_dvsMat3 * vec3(offset, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\nv_tex = a_pos;\\n}"},util:{"encoding.glsl":"const vec4 rgba2float_factors = vec4(\\n255.0 / (256.0),\\n255.0 / (256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\\n);\\nfloat rgba2float(vec4 rgba) {\\nreturn dot(rgba, rgba2float_factors);\\n}"}};\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/views/webgl/ShaderCompiler.js\nvar ShaderCompiler = __webpack_require__(78311);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/resolver.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nfunction o(e){let o=shaderRepository_e;return e.split("/").forEach((r=>{o&&(o=o[r])})),o}const t=new ShaderCompiler/* ShaderCompiler */.B(o);function n(r){return t.resolveIncludes(r)}\n\n\n//# sourceURL=webpack://reveal-js-testing/./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/resolver.js_+_1_modules?')},84172:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "H": () => (/* binding */ e)\n/* harmony export */ });\n/* harmony import */ var _Program_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(19134);\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nfunction e(e,t,a=""){return new _Program_js__WEBPACK_IMPORTED_MODULE_0__/* .Program */ .$(e,a+t.shaders.vertexShader,a+t.shaders.fragmentShader,t.attributes)}\n\n\n//# sourceURL=webpack://reveal-js-testing/./node_modules/@arcgis/core/views/webgl/ProgramTemplate.js?')},78311:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "B": () => (/* binding */ e)\n/* harmony export */ });\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nclass e{constructor(e){this.readFile=e}resolveIncludes(e){return this._resolve(e)}_resolve(e,t=new Map){if(t.has(e))return t.get(e);const r=this._read(e);if(!r)throw new Error(`cannot find shader file ${e}`);const s=/^[^\\S\\n]*#include\\s+<(\\S+)>[^\\S\\n]?/gm;let n=s.exec(r);const l=[];for(;null!=n;)l.push({path:n[1],start:n.index,length:n[0].length}),n=s.exec(r);let a=0,h="";return l.forEach((e=>{h+=r.slice(a,e.start),h+=t.has(e.path)?"":this._resolve(e.path,t),a=e.start+e.length})),h+=r.slice(a),t.set(e,h),h}_read(e){return this.readFile(e)}}\n\n\n//# sourceURL=webpack://reveal-js-testing/./node_modules/@arcgis/core/views/webgl/ShaderCompiler.js?')}}]);